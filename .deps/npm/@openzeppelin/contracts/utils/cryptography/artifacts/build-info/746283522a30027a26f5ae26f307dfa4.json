{
	"id": "746283522a30027a26f5ae26f307dfa4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract/49_ERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.21;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\r\n\r\n/*\r\n    对应使用方授权方而言，这个授权的操作是链下的，只需要在链下按照授权地址\r\n*/\r\ninterface IERC20Permit {\r\n\r\n    function permit(\r\n        address owner, \r\n        address spender,\r\n        uint256 value, \r\n        uint256 deadline, \r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    function nonces(address owner) external view returns(uint256);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n}\r\n\r\n\r\ncontract ERC20Permit is ERC20, IERC20Permit, EIP712 {\r\n    mapping(address => uint) private _nonces;\r\n\r\n    bytes32 private constant _PERMIT_TYPEHASH = keccak256(\r\n        \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\r\n    );\r\n\r\n    constructor(string memory name, string memory symbol) EIP712(name, \"1\") ERC20(name, symbol) {}\r\n\r\n    function permit(\r\n        address owner, \r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v, \r\n        bytes32 r, \r\n        bytes32 s   \r\n    ) public virtual override {\r\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\r\n\r\n        bytes32 structHash = keccak256(\r\n            abi.encode(\r\n                _PERMIT_TYPEHASH,   // 第一个参数是消息类型的hash，后面是才是每个参数值\r\n                owner,  \r\n                spender, \r\n                value, \r\n                _useNonce(owner), \r\n                deadline\r\n            )\r\n        );\r\n        // 这个是EIP712封装的函数  只需要传一个消息的哈希\r\n        // 完整的应该是  keccak256(abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash)) \r\n        // DOMAIN_SEPARATOR 有EIP712中的_domainSeparatorV4实现  \r\n        // 实现逻辑：keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\r\n        // 其中TYPE_HASH 是一个固定值  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\r\n        // _hashedName和_hashVersion 可以通过EIP712构造函数传递  这里合约中是WTFPermit和1  block.chainid = 1 address(this)是当前合约地址\r\n        bytes32 hash = _hashTypedDataV4(structHash);\r\n\r\n        // 再用传过来的v r s 接触签名地址\r\n        address signer = ECDSA.recover(hash, v, r, s);\r\n        // 判断签名地址是否和owner地址一致\r\n        require(signer == owner,  \"ERC20Permit: invalid signature\");\r\n\r\n        _approve(owner, spender, value);\r\n    }\r\n\r\n    function nonces(address owner) public view virtual override returns (uint256) {\r\n        return _nonces[owner];\r\n    }\r\n\r\n\r\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\r\n        return _domainSeparatorV4();\r\n    }\r\n\r\n\r\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\r\n        current = _nonces[owner];\r\n        _nonces[owner] += 1;\r\n    }\r\n\r\n    function mint(uint amount) external {\r\n        _mint(msg.sender, amount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "cancun"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 190,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 192,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 194,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 196,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122018a3bcf202a9ef1530aa93d16711ed51176cbfc328a036ef382f6c71d73caf5b64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122018a3bcf202a9ef1530aa93d16711ed51176cbfc328a036ef382f6c71d73caf5b64736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR LOG3 0xBC CALLCODE MUL 0xA9 0xEF ISZERO ADDRESS 0xAA SWAP4 0xD1 PUSH8 0x11ED51176CBFC328 LOG0 CALLDATASIZE 0xEF CODESIZE 0x2F PUSH13 0x71D73CAF5B64736F6C63430008 SHL STOP CALLER ",
							"sourceMap": "1255:3053:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122018a3bcf202a9ef1530aa93d16711ed51176cbfc328a036ef382f6c71d73caf5b64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR LOG3 0xBC CALLCODE MUL 0xA9 0xEF ISZERO ADDRESS 0xAA SWAP4 0xD1 PUSH8 0x11ED51176CBFC328 LOG0 CALLDATASIZE 0xEF CODESIZE 0x2F PUSH13 0x71D73CAF5B64736F6C63430008 SHL STOP CALLER ",
							"sourceMap": "1255:3053:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122018a3bcf202a9ef1530aa93d16711ed51176cbfc328a036ef382f6c71d73caf5b64736f6c634300081b0033",
									".code": [
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contract/49_ERC20Permit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122072196dcd34d6e3c306e9d322b42e3fed0821a7baa60e922c3d3e9a95880e4ab364736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122072196dcd34d6e3c306e9d322b42e3fed0821a7baa60e922c3d3e9a95880e4ab364736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x196DCD34D6E3C306E9D322B42E3FED0821A7BA 0xA6 0xE SWAP3 0x2C RETURNDATASIZE RETURNDATACOPY SWAP11 SWAP6 DUP9 0xE BLOBBASEFEE 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "1245:2685:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122072196dcd34d6e3c306e9d322b42e3fed0821a7baa60e922c3d3e9a95880e4ab364736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x196DCD34D6E3C306E9D322B42E3FED0821A7BA 0xA6 0xE SWAP3 0x2C RETURNDATASIZE RETURNDATACOPY SWAP11 SWAP6 DUP9 0xE BLOBBASEFEE 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "1245:2685:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122072196dcd34d6e3c306e9d322b42e3fed0821a7baa60e922c3d3e9a95880e4ab364736f6c634300081b0033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contract/49_ERC20Permit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122013b5ff6ebad4ed6d06abf486aff5fd034605495ad168c5b2c27d4804dd9cf8c164736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122013b5ff6ebad4ed6d06abf486aff5fd034605495ad168c5b2c27d4804dd9cf8c164736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xB5 SELFDESTRUCT PUSH15 0xBAD4ED6D06ABF486AFF5FD03460549 GAS 0xD1 PUSH9 0xC5B2C27D4804DD9CF8 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "251:2847:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122013b5ff6ebad4ed6d06abf486aff5fd034605495ad168c5b2c27d4804dd9cf8c164736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xB5 SELFDESTRUCT PUSH15 0xBAD4ED6D06ABF486AFF5FD03460549 GAS 0xD1 PUSH9 0xC5B2C27D4804DD9CF8 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "251:2847:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013b5ff6ebad4ed6d06abf486aff5fd034605495ad168c5b2c27d4804dd9cf8c164736f6c634300081b0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contract/49_ERC20Permit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220b41d021b0fcba5a73375bc6f614f816ebf349bcd74cacfa4cd6150f6e323fc0264736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b41d021b0fcba5a73375bc6f614f816ebf349bcd74cacfa4cd6150f6e323fc0264736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 SAR MUL SHL 0xF 0xCB 0xA5 0xA7 CALLER PUSH22 0xBC6F614F816EBF349BCD74CACFA4CD6150F6E323FC02 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "344:7386:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b41d021b0fcba5a73375bc6f614f816ebf349bcd74cacfa4cd6150f6e323fc0264736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 SAR MUL SHL 0xF 0xCB 0xA5 0xA7 CALLER PUSH22 0xBC6F614F816EBF349BCD74CACFA4CD6150F6E323FC02 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "344:7386:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b41d021b0fcba5a73375bc6f614f816ebf349bcd74cacfa4cd6150f6e323fc0264736f6c634300081b0033",
									".code": [
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contract/49_ERC20Permit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1777,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1779,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220367d7da70ef57d03e8437c26925d2f0beee0c13ae257fe12e5169d5a9bced3a264736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220367d7da70ef57d03e8437c26925d2f0beee0c13ae257fe12e5169d5a9bced3a264736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH30 0x7DA70EF57D03E8437C26925D2F0BEEE0C13AE257FE12E5169D5A9BCED3A2 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "521:3235:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220367d7da70ef57d03e8437c26925d2f0beee0c13ae257fe12e5169d5a9bced3a264736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH30 0x7DA70EF57D03E8437C26925D2F0BEEE0C13AE257FE12E5169D5A9BCED3A2 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "521:3235:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220367d7da70ef57d03e8437c26925d2f0beee0c13ae257fe12e5169d5a9bced3a264736f6c634300081b0033",
									".code": [
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contract/49_ERC20Permit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220658fb909c3e17b5777fdafe8038fb1ff51f6fa3842af9efcebf9d9795f05a48164736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220658fb909c3e17b5777fdafe8038fb1ff51f6fa3842af9efcebf9d9795f05a48164736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x8FB909C3E17B JUMPI PUSH24 0xFDAFE8038FB1FF51F6FA3842AF9EFCEBF9D9795F05A48164 PUSH20 0x6F6C634300081B00330000000000000000000000 ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220658fb909c3e17b5777fdafe8038fb1ff51f6fa3842af9efcebf9d9795f05a48164736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x8FB909C3E17B JUMPI PUSH24 0xFDAFE8038FB1FF51F6FA3842AF9EFCEBF9D9795F05A48164 PUSH20 0x6F6C634300081B00330000000000000000000000 ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220658fb909c3e17b5777fdafe8038fb1ff51f6fa3842af9efcebf9d9795f05a48164736f6c634300081b0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contract/49_ERC20Permit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220176cc1764a06588ecacffabfab3ef0c39e718c46a1fa5a56ba49db0bc1c4bcf764736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220176cc1764a06588ecacffabfab3ef0c39e718c46a1fa5a56ba49db0bc1c4bcf764736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR PUSH13 0xC1764A06588ECACFFABFAB3EF0 0xC3 SWAP15 PUSH18 0x8C46A1FA5A56BA49DB0BC1C4BCF764736F6C PUSH4 0x4300081B STOP CALLER ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220176cc1764a06588ecacffabfab3ef0c39e718c46a1fa5a56ba49db0bc1c4bcf764736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR PUSH13 0xC1764A06588ECACFFABFAB3EF0 0xC3 SWAP15 PUSH18 0x8C46A1FA5A56BA49DB0BC1C4BCF764736F6C PUSH4 0x4300081B STOP CALLER ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220176cc1764a06588ecacffabfab3ef0c39e718c46a1fa5a56ba49db0bc1c4bcf764736f6c634300081b0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contract/49_ERC20Permit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract/49_ERC20Permit.sol": {
				"ERC20Permit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/49_ERC20Permit.sol\":741:3280  contract ERC20Permit is ERC20, IERC20Permit, EIP712 {... */\n  mstore(0x40, 0x0160)\n    /* \"contract/49_ERC20Permit.sol\":1013:1107  constructor(string memory name, string memory symbol) EIP712(name, \"1\") ERC20(name, symbol) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contract/49_ERC20Permit.sol\":1074:1078  name */\n  dup2\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3328:3759  constructor(string memory name, string memory version) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contract/49_ERC20Permit.sol\":1091:1095  name */\n  dup4\n    /* \"contract/49_ERC20Permit.sol\":1097:1103  symbol */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  tag_12\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3432:3445  _nameFallback */\n  0x05\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3405  name */\n  dup4\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3431  name.toShortStringWithFallback */\n  shl(0x20, tag_13)\n  swap1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3393:3446  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  tag_14\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3501:3517  _versionFallback */\n  0x06\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3474  version */\n  dup3\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3500  version.toShortStringWithFallback */\n  shl(0x20, tag_13)\n  swap1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3456:3518  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3558:3562  name */\n  dup2\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3542:3564  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3528:3564  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3607:3614  version */\n  dup1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3591:3616  keccak256(bytes(version)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3574:3616  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3644:3657  block.chainid */\n  chainid\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3627:3657  _cachedChainId = block.chainid */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\n  tag_15\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3713  _buildDomainSeparator */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3667:3715  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3747:3751  this */\n  address\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3725:3752  _cachedThis = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3328:3759  constructor(string memory name, string memory version) {... */\n  pop\n  pop\n    /* \"contract/49_ERC20Permit.sol\":1013:1107  constructor(string memory name, string memory symbol) EIP712(name, \"1\") ERC20(name, symbol) {} */\n  pop\n  pop\n    /* \"contract/49_ERC20Permit.sol\":741:3280  contract ERC20Permit is ERC20, IERC20Permit, EIP712 {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3010:3021  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3059:3061  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3043:3048  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3037:3056  bytes(value).length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3037:3061  bytes(value).length < 32 */\n  lt\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\n  iszero\n  tag_20\n  jumpi\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  tag_21\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3098:3103  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3097  toShortString */\n  shl(0x20, tag_22)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3077:3104  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3176:3181  value */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3167  StorageSlot.getStringSlot(store) */\n  tag_24\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3161:3166  store */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3160  StorageSlot.getStringSlot */\n  shl(0x20, tag_25)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3167  StorageSlot.getStringSlot(store) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3173  StorageSlot.getStringSlot(store).value */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3181  StorageSlot.getStringSlot(store).value = value */\n  swap1\n  dup2\n  tag_26\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_26:\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3219:3236  FALLBACK_SENTINEL */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3195:3237  return ShortString.wrap(FALLBACK_SENTINEL) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_19:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n  mload(0xe0)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n  mload(0x0100)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n  chainid\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4278:4282  this */\n  address\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  add(0x20, mload(0x40))\n  tag_28\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1773:1784  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1796:1813  bytes memory bstr */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1822:1825  str */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1796:1826  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1854:1856  31 */\n  0x1f\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1844  bstr */\n  dup2\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1851  bstr.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1856  bstr.length > 31 */\n  gt\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\n  iszero\n  tag_31\n  jumpi\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1893:1896  str */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1879:1897  StringTooLong(str) */\n  mload(0x40)\n  0x305a27a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1974:1978  bstr */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1974:1985  bstr.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1965:1969  bstr */\n  dup2\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1957:1970  bytes32(bstr) */\n  tag_34\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1949:1971  uint256(bytes32(bstr)) */\n  0x00\n  shr\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1949:1985  uint256(bytes32(bstr)) | bstr.length */\n  or\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1941:1986  bytes32(uint256(bytes32(bstr)) | bstr.length) */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1917:1987  return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length)) */\n  swap2\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3135:3337  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3203:3223  StringSlot storage r */\n  0x00\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3311:3321  store.slot */\n  dup2\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3301:3321  r.slot := store.slot */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3135:3337  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_37:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_38:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_39:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_40:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_41:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_42:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_43:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_44:\n    /* \"#utility.yul\":957:984   */\n  tag_89\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_42\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_91\n  tag_43\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1030:1118   */\ntag_90:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_45:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_93\n  tag_37\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_94\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_44\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_46:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_97\n  tag_43\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1434:1490   */\ntag_96:\n    /* \"#utility.yul\":1508:1537   */\n  tag_98\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_42\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_47:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_48:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_101\n    /* \"#utility.yul\":1885:1934   */\n  tag_102\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_46\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":1869:1935   */\n  tag_45\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_104\n  tag_41\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2010:2122   */\ntag_103:\n    /* \"#utility.yul\":2131:2183   */\n  tag_105\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_47\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_49:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_107\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_108\n  tag_40\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2292:2414   */\ntag_107:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_109\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_48\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:3423   */\ntag_3:\n    /* \"#utility.yul\":2669:2675   */\n  0x00\n    /* \"#utility.yul\":2677:2683   */\n  0x00\n    /* \"#utility.yul\":2726:2728   */\n  0x40\n    /* \"#utility.yul\":2714:2723   */\n  dup4\n    /* \"#utility.yul\":2705:2712   */\n  dup6\n    /* \"#utility.yul\":2701:2724   */\n  sub\n    /* \"#utility.yul\":2697:2729   */\n  slt\n    /* \"#utility.yul\":2694:2813   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":2732:2811   */\n  tag_112\n  tag_38\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2694:2813   */\ntag_111:\n    /* \"#utility.yul\":2873:2874   */\n  0x00\n    /* \"#utility.yul\":2862:2871   */\n  dup4\n    /* \"#utility.yul\":2858:2875   */\n  add\n    /* \"#utility.yul\":2852:2876   */\n  mload\n    /* \"#utility.yul\":2903:2921   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2895:2901   */\n  dup2\n    /* \"#utility.yul\":2892:2922   */\n  gt\n    /* \"#utility.yul\":2889:3006   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":2925:3004   */\n  tag_114\n  tag_39\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":2889:3006   */\ntag_113:\n    /* \"#utility.yul\":3030:3104   */\n  tag_115\n    /* \"#utility.yul\":3096:3103   */\n  dup6\n    /* \"#utility.yul\":3087:3093   */\n  dup3\n    /* \"#utility.yul\":3076:3085   */\n  dup7\n    /* \"#utility.yul\":3072:3094   */\n  add\n    /* \"#utility.yul\":3030:3104   */\n  tag_49\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3020:3104   */\n  swap3\n  pop\n    /* \"#utility.yul\":2823:3114   */\n  pop\n    /* \"#utility.yul\":3174:3176   */\n  0x20\n    /* \"#utility.yul\":3163:3172   */\n  dup4\n    /* \"#utility.yul\":3159:3177   */\n  add\n    /* \"#utility.yul\":3153:3178   */\n  mload\n    /* \"#utility.yul\":3205:3223   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3197:3203   */\n  dup2\n    /* \"#utility.yul\":3194:3224   */\n  gt\n    /* \"#utility.yul\":3191:3308   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":3227:3306   */\n  tag_117\n  tag_39\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3191:3308   */\ntag_116:\n    /* \"#utility.yul\":3332:3406   */\n  tag_118\n    /* \"#utility.yul\":3398:3405   */\n  dup6\n    /* \"#utility.yul\":3389:3395   */\n  dup3\n    /* \"#utility.yul\":3378:3387   */\n  dup7\n    /* \"#utility.yul\":3374:3396   */\n  add\n    /* \"#utility.yul\":3332:3406   */\n  tag_49\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3322:3406   */\n  swap2\n  pop\n    /* \"#utility.yul\":3124:3416   */\n  pop\n    /* \"#utility.yul\":2570:3423   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3429:3528   */\ntag_50:\n    /* \"#utility.yul\":3481:3487   */\n  0x00\n    /* \"#utility.yul\":3515:3520   */\n  dup2\n    /* \"#utility.yul\":3509:3521   */\n  mload\n    /* \"#utility.yul\":3499:3521   */\n  swap1\n  pop\n    /* \"#utility.yul\":3429:3528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3534:3714   */\ntag_51:\n    /* \"#utility.yul\":3582:3659   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3579:3580   */\n  0x00\n    /* \"#utility.yul\":3572:3660   */\n  mstore\n    /* \"#utility.yul\":3679:3683   */\n  0x22\n    /* \"#utility.yul\":3676:3677   */\n  0x04\n    /* \"#utility.yul\":3669:3684   */\n  mstore\n    /* \"#utility.yul\":3703:3707   */\n  0x24\n    /* \"#utility.yul\":3700:3701   */\n  0x00\n    /* \"#utility.yul\":3693:3708   */\n  revert\n    /* \"#utility.yul\":3720:4040   */\ntag_52:\n    /* \"#utility.yul\":3764:3770   */\n  0x00\n    /* \"#utility.yul\":3801:3802   */\n  0x02\n    /* \"#utility.yul\":3795:3799   */\n  dup3\n    /* \"#utility.yul\":3791:3803   */\n  div\n    /* \"#utility.yul\":3781:3803   */\n  swap1\n  pop\n    /* \"#utility.yul\":3848:3849   */\n  0x01\n    /* \"#utility.yul\":3842:3846   */\n  dup3\n    /* \"#utility.yul\":3838:3850   */\n  and\n    /* \"#utility.yul\":3869:3887   */\n  dup1\n    /* \"#utility.yul\":3859:3940   */\n  tag_122\n  jumpi\n    /* \"#utility.yul\":3925:3929   */\n  0x7f\n    /* \"#utility.yul\":3917:3923   */\n  dup3\n    /* \"#utility.yul\":3913:3930   */\n  and\n    /* \"#utility.yul\":3903:3930   */\n  swap2\n  pop\n    /* \"#utility.yul\":3859:3940   */\ntag_122:\n    /* \"#utility.yul\":3987:3989   */\n  0x20\n    /* \"#utility.yul\":3979:3985   */\n  dup3\n    /* \"#utility.yul\":3976:3990   */\n  lt\n    /* \"#utility.yul\":3956:3974   */\n  dup2\n    /* \"#utility.yul\":3953:3991   */\n  sub\n    /* \"#utility.yul\":3950:4034   */\n  tag_123\n  jumpi\n    /* \"#utility.yul\":4006:4024   */\n  tag_124\n  tag_51\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":3950:4034   */\ntag_123:\n    /* \"#utility.yul\":3771:4040   */\n  pop\n    /* \"#utility.yul\":3720:4040   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4046:4187   */\ntag_53:\n    /* \"#utility.yul\":4095:4099   */\n  0x00\n    /* \"#utility.yul\":4118:4121   */\n  dup2\n    /* \"#utility.yul\":4110:4121   */\n  swap1\n  pop\n    /* \"#utility.yul\":4141:4144   */\n  dup2\n    /* \"#utility.yul\":4138:4139   */\n  0x00\n    /* \"#utility.yul\":4131:4145   */\n  mstore\n    /* \"#utility.yul\":4175:4179   */\n  0x20\n    /* \"#utility.yul\":4172:4173   */\n  0x00\n    /* \"#utility.yul\":4162:4180   */\n  keccak256\n    /* \"#utility.yul\":4154:4180   */\n  swap1\n  pop\n    /* \"#utility.yul\":4046:4187   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4193:4286   */\ntag_54:\n    /* \"#utility.yul\":4230:4236   */\n  0x00\n    /* \"#utility.yul\":4277:4279   */\n  0x20\n    /* \"#utility.yul\":4272:4274   */\n  0x1f\n    /* \"#utility.yul\":4265:4270   */\n  dup4\n    /* \"#utility.yul\":4261:4275   */\n  add\n    /* \"#utility.yul\":4257:4280   */\n  div\n    /* \"#utility.yul\":4247:4280   */\n  swap1\n  pop\n    /* \"#utility.yul\":4193:4286   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4292:4399   */\ntag_55:\n    /* \"#utility.yul\":4336:4344   */\n  0x00\n    /* \"#utility.yul\":4386:4391   */\n  dup3\n    /* \"#utility.yul\":4380:4384   */\n  dup3\n    /* \"#utility.yul\":4376:4392   */\n  shl\n    /* \"#utility.yul\":4355:4392   */\n  swap1\n  pop\n    /* \"#utility.yul\":4292:4399   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4405:4798   */\ntag_56:\n    /* \"#utility.yul\":4474:4480   */\n  0x00\n    /* \"#utility.yul\":4524:4525   */\n  0x08\n    /* \"#utility.yul\":4512:4522   */\n  dup4\n    /* \"#utility.yul\":4508:4526   */\n  mul\n    /* \"#utility.yul\":4547:4644   */\n  tag_129\n    /* \"#utility.yul\":4577:4643   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4566:4575   */\n  dup3\n    /* \"#utility.yul\":4547:4644   */\n  tag_55\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4665:4704   */\n  tag_130\n    /* \"#utility.yul\":4695:4703   */\n  dup7\n    /* \"#utility.yul\":4684:4693   */\n  dup4\n    /* \"#utility.yul\":4665:4704   */\n  tag_55\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4653:4704   */\n  swap6\n  pop\n    /* \"#utility.yul\":4737:4741   */\n  dup1\n    /* \"#utility.yul\":4733:4742   */\n  not\n    /* \"#utility.yul\":4726:4731   */\n  dup5\n    /* \"#utility.yul\":4722:4743   */\n  and\n    /* \"#utility.yul\":4713:4743   */\n  swap4\n  pop\n    /* \"#utility.yul\":4786:4790   */\n  dup1\n    /* \"#utility.yul\":4776:4784   */\n  dup7\n    /* \"#utility.yul\":4772:4791   */\n  and\n    /* \"#utility.yul\":4765:4770   */\n  dup5\n    /* \"#utility.yul\":4762:4792   */\n  or\n    /* \"#utility.yul\":4752:4792   */\n  swap3\n  pop\n    /* \"#utility.yul\":4481:4798   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4798   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4804:4881   */\ntag_57:\n    /* \"#utility.yul\":4841:4848   */\n  0x00\n    /* \"#utility.yul\":4870:4875   */\n  dup2\n    /* \"#utility.yul\":4859:4875   */\n  swap1\n  pop\n    /* \"#utility.yul\":4804:4881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4887:4947   */\ntag_58:\n    /* \"#utility.yul\":4915:4918   */\n  0x00\n    /* \"#utility.yul\":4936:4941   */\n  dup2\n    /* \"#utility.yul\":4929:4941   */\n  swap1\n  pop\n    /* \"#utility.yul\":4887:4947   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4953:5095   */\ntag_59:\n    /* \"#utility.yul\":5003:5012   */\n  0x00\n    /* \"#utility.yul\":5036:5089   */\n  tag_134\n    /* \"#utility.yul\":5054:5088   */\n  tag_135\n    /* \"#utility.yul\":5063:5087   */\n  tag_136\n    /* \"#utility.yul\":5081:5086   */\n  dup5\n    /* \"#utility.yul\":5063:5087   */\n  tag_57\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5054:5088   */\n  tag_58\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5036:5089   */\n  tag_57\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5023:5089   */\n  swap1\n  pop\n    /* \"#utility.yul\":4953:5095   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5101:5176   */\ntag_60:\n    /* \"#utility.yul\":5144:5147   */\n  0x00\n    /* \"#utility.yul\":5165:5170   */\n  dup2\n    /* \"#utility.yul\":5158:5170   */\n  swap1\n  pop\n    /* \"#utility.yul\":5101:5176   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5182:5451   */\ntag_61:\n    /* \"#utility.yul\":5292:5331   */\n  tag_139\n    /* \"#utility.yul\":5323:5330   */\n  dup4\n    /* \"#utility.yul\":5292:5331   */\n  tag_59\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5353:5444   */\n  tag_140\n    /* \"#utility.yul\":5402:5443   */\n  tag_141\n    /* \"#utility.yul\":5426:5442   */\n  dup3\n    /* \"#utility.yul\":5402:5443   */\n  tag_60\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5394:5400   */\n  dup5\n    /* \"#utility.yul\":5387:5391   */\n  dup5\n    /* \"#utility.yul\":5381:5392   */\n  sload\n    /* \"#utility.yul\":5353:5444   */\n  tag_56\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":5347:5351   */\n  dup3\n    /* \"#utility.yul\":5340:5445   */\n  sstore\n    /* \"#utility.yul\":5258:5451   */\n  pop\n    /* \"#utility.yul\":5182:5451   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5457:5530   */\ntag_62:\n    /* \"#utility.yul\":5502:5505   */\n  0x00\n    /* \"#utility.yul\":5523:5524   */\n  0x00\n    /* \"#utility.yul\":5516:5524   */\n  swap1\n  pop\n    /* \"#utility.yul\":5457:5530   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5536:5725   */\ntag_63:\n    /* \"#utility.yul\":5613:5645   */\n  tag_144\n  tag_62\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":5654:5719   */\n  tag_145\n    /* \"#utility.yul\":5712:5718   */\n  dup2\n    /* \"#utility.yul\":5704:5710   */\n  dup5\n    /* \"#utility.yul\":5698:5702   */\n  dup5\n    /* \"#utility.yul\":5654:5719   */\n  tag_61\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5589:5725   */\n  pop\n    /* \"#utility.yul\":5536:5725   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5731:5917   */\ntag_64:\n    /* \"#utility.yul\":5791:5911   */\ntag_147:\n    /* \"#utility.yul\":5808:5811   */\n  dup2\n    /* \"#utility.yul\":5801:5806   */\n  dup2\n    /* \"#utility.yul\":5798:5812   */\n  lt\n    /* \"#utility.yul\":5791:5911   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":5862:5901   */\n  tag_150\n    /* \"#utility.yul\":5899:5900   */\n  0x00\n    /* \"#utility.yul\":5892:5897   */\n  dup3\n    /* \"#utility.yul\":5862:5901   */\n  tag_63\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":5835:5836   */\n  0x01\n    /* \"#utility.yul\":5828:5833   */\n  dup2\n    /* \"#utility.yul\":5824:5837   */\n  add\n    /* \"#utility.yul\":5815:5837   */\n  swap1\n  pop\n    /* \"#utility.yul\":5791:5911   */\n  jump(tag_147)\ntag_149:\n    /* \"#utility.yul\":5731:5917   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5923:6466   */\ntag_65:\n    /* \"#utility.yul\":6024:6026   */\n  0x1f\n    /* \"#utility.yul\":6019:6022   */\n  dup3\n    /* \"#utility.yul\":6016:6027   */\n  gt\n    /* \"#utility.yul\":6013:6459   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":6058:6096   */\n  tag_153\n    /* \"#utility.yul\":6090:6095   */\n  dup2\n    /* \"#utility.yul\":6058:6096   */\n  tag_53\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6142:6171   */\n  tag_154\n    /* \"#utility.yul\":6160:6170   */\n  dup5\n    /* \"#utility.yul\":6142:6171   */\n  tag_54\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6132:6140   */\n  dup2\n    /* \"#utility.yul\":6128:6172   */\n  add\n    /* \"#utility.yul\":6325:6327   */\n  0x20\n    /* \"#utility.yul\":6313:6323   */\n  dup6\n    /* \"#utility.yul\":6310:6328   */\n  lt\n    /* \"#utility.yul\":6307:6356   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":6346:6354   */\n  dup2\n    /* \"#utility.yul\":6331:6354   */\n  swap1\n  pop\n    /* \"#utility.yul\":6307:6356   */\ntag_155:\n    /* \"#utility.yul\":6369:6449   */\n  tag_156\n    /* \"#utility.yul\":6425:6447   */\n  tag_157\n    /* \"#utility.yul\":6443:6446   */\n  dup6\n    /* \"#utility.yul\":6425:6447   */\n  tag_54\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6415:6423   */\n  dup4\n    /* \"#utility.yul\":6411:6448   */\n  add\n    /* \"#utility.yul\":6398:6409   */\n  dup3\n    /* \"#utility.yul\":6369:6449   */\n  tag_64\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6028:6459   */\n  pop\n  pop\n    /* \"#utility.yul\":6013:6459   */\ntag_152:\n    /* \"#utility.yul\":5923:6466   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6472:6589   */\ntag_66:\n    /* \"#utility.yul\":6526:6534   */\n  0x00\n    /* \"#utility.yul\":6576:6581   */\n  dup3\n    /* \"#utility.yul\":6570:6574   */\n  dup3\n    /* \"#utility.yul\":6566:6582   */\n  shr\n    /* \"#utility.yul\":6545:6582   */\n  swap1\n  pop\n    /* \"#utility.yul\":6472:6589   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6595:6764   */\ntag_67:\n    /* \"#utility.yul\":6639:6645   */\n  0x00\n    /* \"#utility.yul\":6672:6723   */\n  tag_160\n    /* \"#utility.yul\":6720:6721   */\n  0x00\n    /* \"#utility.yul\":6716:6722   */\n  not\n    /* \"#utility.yul\":6708:6713   */\n  dup5\n    /* \"#utility.yul\":6705:6706   */\n  0x08\n    /* \"#utility.yul\":6701:6714   */\n  mul\n    /* \"#utility.yul\":6672:6723   */\n  tag_66\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":6668:6724   */\n  not\n    /* \"#utility.yul\":6753:6757   */\n  dup1\n    /* \"#utility.yul\":6747:6751   */\n  dup4\n    /* \"#utility.yul\":6743:6758   */\n  and\n    /* \"#utility.yul\":6733:6758   */\n  swap2\n  pop\n    /* \"#utility.yul\":6646:6764   */\n  pop\n    /* \"#utility.yul\":6595:6764   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6769:7064   */\ntag_68:\n    /* \"#utility.yul\":6845:6849   */\n  0x00\n    /* \"#utility.yul\":6991:7020   */\n  tag_162\n    /* \"#utility.yul\":7016:7019   */\n  dup4\n    /* \"#utility.yul\":7010:7014   */\n  dup4\n    /* \"#utility.yul\":6991:7020   */\n  tag_67\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6983:7020   */\n  swap2\n  pop\n    /* \"#utility.yul\":7053:7056   */\n  dup3\n    /* \"#utility.yul\":7050:7051   */\n  0x02\n    /* \"#utility.yul\":7046:7057   */\n  mul\n    /* \"#utility.yul\":7040:7044   */\n  dup3\n    /* \"#utility.yul\":7037:7058   */\n  or\n    /* \"#utility.yul\":7029:7058   */\n  swap1\n  pop\n    /* \"#utility.yul\":6769:7064   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7069:8464   */\ntag_9:\n    /* \"#utility.yul\":7186:7223   */\n  tag_164\n    /* \"#utility.yul\":7219:7222   */\n  dup3\n    /* \"#utility.yul\":7186:7223   */\n  tag_50\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":7288:7306   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7280:7286   */\n  dup2\n    /* \"#utility.yul\":7277:7307   */\n  gt\n    /* \"#utility.yul\":7274:7330   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":7310:7328   */\n  tag_166\n  tag_43\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7274:7330   */\ntag_165:\n    /* \"#utility.yul\":7354:7392   */\n  tag_167\n    /* \"#utility.yul\":7386:7390   */\n  dup3\n    /* \"#utility.yul\":7380:7391   */\n  sload\n    /* \"#utility.yul\":7354:7392   */\n  tag_52\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":7439:7506   */\n  tag_168\n    /* \"#utility.yul\":7499:7505   */\n  dup3\n    /* \"#utility.yul\":7491:7497   */\n  dup3\n    /* \"#utility.yul\":7485:7489   */\n  dup6\n    /* \"#utility.yul\":7439:7506   */\n  tag_65\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7533:7534   */\n  0x00\n    /* \"#utility.yul\":7557:7561   */\n  0x20\n    /* \"#utility.yul\":7544:7561   */\n  swap1\n  pop\n    /* \"#utility.yul\":7589:7591   */\n  0x1f\n    /* \"#utility.yul\":7581:7587   */\n  dup4\n    /* \"#utility.yul\":7578:7592   */\n  gt\n    /* \"#utility.yul\":7606:7607   */\n  0x01\n    /* \"#utility.yul\":7601:8219   */\n  dup2\n  eq\n  tag_170\n  jumpi\n    /* \"#utility.yul\":8263:8264   */\n  0x00\n    /* \"#utility.yul\":8280:8286   */\n  dup5\n    /* \"#utility.yul\":8277:8354   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":8329:8338   */\n  dup3\n    /* \"#utility.yul\":8324:8327   */\n  dup8\n    /* \"#utility.yul\":8320:8339   */\n  add\n    /* \"#utility.yul\":8314:8340   */\n  mload\n    /* \"#utility.yul\":8305:8340   */\n  swap1\n  pop\n    /* \"#utility.yul\":8277:8354   */\ntag_171:\n    /* \"#utility.yul\":8380:8447   */\n  tag_172\n    /* \"#utility.yul\":8440:8446   */\n  dup6\n    /* \"#utility.yul\":8433:8438   */\n  dup3\n    /* \"#utility.yul\":8380:8447   */\n  tag_68\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8374:8378   */\n  dup7\n    /* \"#utility.yul\":8367:8448   */\n  sstore\n    /* \"#utility.yul\":8236:8458   */\n  pop\n    /* \"#utility.yul\":7571:8458   */\n  jump(tag_169)\n    /* \"#utility.yul\":7601:8219   */\ntag_170:\n    /* \"#utility.yul\":7653:7657   */\n  0x1f\n    /* \"#utility.yul\":7649:7658   */\n  not\n    /* \"#utility.yul\":7641:7647   */\n  dup5\n    /* \"#utility.yul\":7637:7659   */\n  and\n    /* \"#utility.yul\":7687:7724   */\n  tag_173\n    /* \"#utility.yul\":7719:7723   */\n  dup7\n    /* \"#utility.yul\":7687:7724   */\n  tag_53\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":7746:7747   */\n  0x00\n    /* \"#utility.yul\":7760:7968   */\ntag_174:\n    /* \"#utility.yul\":7774:7781   */\n  dup3\n    /* \"#utility.yul\":7771:7772   */\n  dup2\n    /* \"#utility.yul\":7768:7782   */\n  lt\n    /* \"#utility.yul\":7760:7968   */\n  iszero\n  tag_176\n  jumpi\n    /* \"#utility.yul\":7853:7862   */\n  dup5\n    /* \"#utility.yul\":7848:7851   */\n  dup10\n    /* \"#utility.yul\":7844:7863   */\n  add\n    /* \"#utility.yul\":7838:7864   */\n  mload\n    /* \"#utility.yul\":7830:7836   */\n  dup3\n    /* \"#utility.yul\":7823:7865   */\n  sstore\n    /* \"#utility.yul\":7904:7905   */\n  0x01\n    /* \"#utility.yul\":7896:7902   */\n  dup3\n    /* \"#utility.yul\":7892:7906   */\n  add\n    /* \"#utility.yul\":7882:7906   */\n  swap2\n  pop\n    /* \"#utility.yul\":7951:7953   */\n  0x20\n    /* \"#utility.yul\":7940:7949   */\n  dup6\n    /* \"#utility.yul\":7936:7954   */\n  add\n    /* \"#utility.yul\":7923:7954   */\n  swap5\n  pop\n    /* \"#utility.yul\":7797:7801   */\n  0x20\n    /* \"#utility.yul\":7794:7795   */\n  dup2\n    /* \"#utility.yul\":7790:7802   */\n  add\n    /* \"#utility.yul\":7785:7802   */\n  swap1\n  pop\n    /* \"#utility.yul\":7760:7968   */\n  jump(tag_174)\ntag_176:\n    /* \"#utility.yul\":7996:8002   */\n  dup7\n    /* \"#utility.yul\":7987:7994   */\n  dup4\n    /* \"#utility.yul\":7984:8003   */\n  lt\n    /* \"#utility.yul\":7981:8160   */\n  iszero\n  tag_177\n  jumpi\n    /* \"#utility.yul\":8054:8063   */\n  dup5\n    /* \"#utility.yul\":8049:8052   */\n  dup10\n    /* \"#utility.yul\":8045:8064   */\n  add\n    /* \"#utility.yul\":8039:8065   */\n  mload\n    /* \"#utility.yul\":8097:8145   */\n  tag_178\n    /* \"#utility.yul\":8139:8143   */\n  0x1f\n    /* \"#utility.yul\":8131:8137   */\n  dup10\n    /* \"#utility.yul\":8127:8144   */\n  and\n    /* \"#utility.yul\":8116:8125   */\n  dup3\n    /* \"#utility.yul\":8097:8145   */\n  tag_67\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8089:8095   */\n  dup4\n    /* \"#utility.yul\":8082:8146   */\n  sstore\n    /* \"#utility.yul\":8004:8160   */\n  pop\n    /* \"#utility.yul\":7981:8160   */\ntag_177:\n    /* \"#utility.yul\":8206:8207   */\n  0x01\n    /* \"#utility.yul\":8202:8203   */\n  0x02\n    /* \"#utility.yul\":8194:8200   */\n  dup9\n    /* \"#utility.yul\":8190:8204   */\n  mul\n    /* \"#utility.yul\":8186:8208   */\n  add\n    /* \"#utility.yul\":8180:8184   */\n  dup9\n    /* \"#utility.yul\":8173:8209   */\n  sstore\n    /* \"#utility.yul\":7608:8219   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7571:8458   */\ntag_169:\n  pop\n    /* \"#utility.yul\":7161:8464   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7069:8464   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8470:8547   */\ntag_69:\n    /* \"#utility.yul\":8507:8514   */\n  0x00\n    /* \"#utility.yul\":8536:8541   */\n  dup2\n    /* \"#utility.yul\":8525:8541   */\n  swap1\n  pop\n    /* \"#utility.yul\":8470:8547   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8553:8671   */\ntag_70:\n    /* \"#utility.yul\":8640:8664   */\n  tag_181\n    /* \"#utility.yul\":8658:8663   */\n  dup2\n    /* \"#utility.yul\":8640:8664   */\n  tag_69\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8635:8638   */\n  dup3\n    /* \"#utility.yul\":8628:8665   */\n  mstore\n    /* \"#utility.yul\":8553:8671   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8677:8795   */\ntag_71:\n    /* \"#utility.yul\":8764:8788   */\n  tag_183\n    /* \"#utility.yul\":8782:8787   */\n  dup2\n    /* \"#utility.yul\":8764:8788   */\n  tag_57\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":8759:8762   */\n  dup3\n    /* \"#utility.yul\":8752:8789   */\n  mstore\n    /* \"#utility.yul\":8677:8795   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8801:8927   */\ntag_72:\n    /* \"#utility.yul\":8838:8845   */\n  0x00\n    /* \"#utility.yul\":8878:8920   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8871:8876   */\n  dup3\n    /* \"#utility.yul\":8867:8921   */\n  and\n    /* \"#utility.yul\":8856:8921   */\n  swap1\n  pop\n    /* \"#utility.yul\":8801:8927   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8933:9029   */\ntag_73:\n    /* \"#utility.yul\":8970:8977   */\n  0x00\n    /* \"#utility.yul\":8999:9023   */\n  tag_186\n    /* \"#utility.yul\":9017:9022   */\n  dup3\n    /* \"#utility.yul\":8999:9023   */\n  tag_72\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8988:9023   */\n  swap1\n  pop\n    /* \"#utility.yul\":8933:9029   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9035:9153   */\ntag_74:\n    /* \"#utility.yul\":9122:9146   */\n  tag_188\n    /* \"#utility.yul\":9140:9145   */\n  dup2\n    /* \"#utility.yul\":9122:9146   */\n  tag_73\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9117:9120   */\n  dup3\n    /* \"#utility.yul\":9110:9147   */\n  mstore\n    /* \"#utility.yul\":9035:9153   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9159:9823   */\ntag_29:\n    /* \"#utility.yul\":9364:9368   */\n  0x00\n    /* \"#utility.yul\":9402:9405   */\n  0xa0\n    /* \"#utility.yul\":9391:9400   */\n  dup3\n    /* \"#utility.yul\":9387:9406   */\n  add\n    /* \"#utility.yul\":9379:9406   */\n  swap1\n  pop\n    /* \"#utility.yul\":9416:9487   */\n  tag_190\n    /* \"#utility.yul\":9484:9485   */\n  0x00\n    /* \"#utility.yul\":9473:9482   */\n  dup4\n    /* \"#utility.yul\":9469:9486   */\n  add\n    /* \"#utility.yul\":9460:9466   */\n  dup9\n    /* \"#utility.yul\":9416:9487   */\n  tag_70\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9497:9569   */\n  tag_191\n    /* \"#utility.yul\":9565:9567   */\n  0x20\n    /* \"#utility.yul\":9554:9563   */\n  dup4\n    /* \"#utility.yul\":9550:9568   */\n  add\n    /* \"#utility.yul\":9541:9547   */\n  dup8\n    /* \"#utility.yul\":9497:9569   */\n  tag_70\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":9579:9651   */\n  tag_192\n    /* \"#utility.yul\":9647:9649   */\n  0x40\n    /* \"#utility.yul\":9636:9645   */\n  dup4\n    /* \"#utility.yul\":9632:9650   */\n  add\n    /* \"#utility.yul\":9623:9629   */\n  dup7\n    /* \"#utility.yul\":9579:9651   */\n  tag_70\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9661:9733   */\n  tag_193\n    /* \"#utility.yul\":9729:9731   */\n  0x60\n    /* \"#utility.yul\":9718:9727   */\n  dup4\n    /* \"#utility.yul\":9714:9732   */\n  add\n    /* \"#utility.yul\":9705:9711   */\n  dup6\n    /* \"#utility.yul\":9661:9733   */\n  tag_71\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9743:9816   */\n  tag_194\n    /* \"#utility.yul\":9811:9814   */\n  0x80\n    /* \"#utility.yul\":9800:9809   */\n  dup4\n    /* \"#utility.yul\":9796:9815   */\n  add\n    /* \"#utility.yul\":9787:9793   */\n  dup5\n    /* \"#utility.yul\":9743:9816   */\n  tag_74\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":9159:9823   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9829:9998   */\ntag_75:\n    /* \"#utility.yul\":9913:9924   */\n  0x00\n    /* \"#utility.yul\":9947:9953   */\n  dup3\n    /* \"#utility.yul\":9942:9945   */\n  dup3\n    /* \"#utility.yul\":9935:9954   */\n  mstore\n    /* \"#utility.yul\":9987:9991   */\n  0x20\n    /* \"#utility.yul\":9982:9985   */\n  dup3\n    /* \"#utility.yul\":9978:9992   */\n  add\n    /* \"#utility.yul\":9963:9992   */\n  swap1\n  pop\n    /* \"#utility.yul\":9829:9998   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10004:10381   */\ntag_76:\n    /* \"#utility.yul\":10092:10095   */\n  0x00\n    /* \"#utility.yul\":10120:10159   */\n  tag_197\n    /* \"#utility.yul\":10153:10158   */\n  dup3\n    /* \"#utility.yul\":10120:10159   */\n  tag_50\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":10175:10246   */\n  tag_198\n    /* \"#utility.yul\":10239:10245   */\n  dup2\n    /* \"#utility.yul\":10234:10237   */\n  dup6\n    /* \"#utility.yul\":10175:10246   */\n  tag_75\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":10168:10246   */\n  swap4\n  pop\n    /* \"#utility.yul\":10255:10320   */\n  tag_199\n    /* \"#utility.yul\":10313:10319   */\n  dup2\n    /* \"#utility.yul\":10308:10311   */\n  dup6\n    /* \"#utility.yul\":10301:10305   */\n  0x20\n    /* \"#utility.yul\":10294:10299   */\n  dup7\n    /* \"#utility.yul\":10290:10306   */\n  add\n    /* \"#utility.yul\":10255:10320   */\n  tag_47\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":10345:10374   */\n  tag_200\n    /* \"#utility.yul\":10367:10373   */\n  dup2\n    /* \"#utility.yul\":10345:10374   */\n  tag_42\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":10340:10343   */\n  dup5\n    /* \"#utility.yul\":10336:10375   */\n  add\n    /* \"#utility.yul\":10329:10375   */\n  swap2\n  pop\n    /* \"#utility.yul\":10096:10381   */\n  pop\n    /* \"#utility.yul\":10004:10381   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10387:10700   */\ntag_33:\n    /* \"#utility.yul\":10500:10504   */\n  0x00\n    /* \"#utility.yul\":10538:10540   */\n  0x20\n    /* \"#utility.yul\":10527:10536   */\n  dup3\n    /* \"#utility.yul\":10523:10541   */\n  add\n    /* \"#utility.yul\":10515:10541   */\n  swap1\n  pop\n    /* \"#utility.yul\":10587:10596   */\n  dup2\n    /* \"#utility.yul\":10581:10585   */\n  dup2\n    /* \"#utility.yul\":10577:10597   */\n  sub\n    /* \"#utility.yul\":10573:10574   */\n  0x00\n    /* \"#utility.yul\":10562:10571   */\n  dup4\n    /* \"#utility.yul\":10558:10575   */\n  add\n    /* \"#utility.yul\":10551:10598   */\n  mstore\n    /* \"#utility.yul\":10615:10693   */\n  tag_202\n    /* \"#utility.yul\":10688:10692   */\n  dup2\n    /* \"#utility.yul\":10679:10685   */\n  dup5\n    /* \"#utility.yul\":10615:10693   */\n  tag_76\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":10607:10693   */\n  swap1\n  pop\n    /* \"#utility.yul\":10387:10700   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10706:10804   */\ntag_77:\n    /* \"#utility.yul\":10757:10763   */\n  0x00\n    /* \"#utility.yul\":10791:10796   */\n  dup2\n    /* \"#utility.yul\":10785:10797   */\n  mload\n    /* \"#utility.yul\":10775:10797   */\n  swap1\n  pop\n    /* \"#utility.yul\":10706:10804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10810:10926   */\ntag_78:\n    /* \"#utility.yul\":10861:10865   */\n  0x00\n    /* \"#utility.yul\":10884:10887   */\n  dup2\n    /* \"#utility.yul\":10876:10887   */\n  swap1\n  pop\n    /* \"#utility.yul\":10914:10918   */\n  0x20\n    /* \"#utility.yul\":10909:10912   */\n  dup3\n    /* \"#utility.yul\":10905:10919   */\n  add\n    /* \"#utility.yul\":10897:10919   */\n  swap1\n  pop\n    /* \"#utility.yul\":10810:10926   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10932:11086   */\ntag_79:\n    /* \"#utility.yul\":10975:10986   */\n  0x00\n    /* \"#utility.yul\":11011:11040   */\n  tag_206\n    /* \"#utility.yul\":11035:11038   */\n  dup3\n    /* \"#utility.yul\":11029:11039   */\n  mload\n    /* \"#utility.yul\":11011:11040   */\n  tag_69\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":11074:11079   */\n  dup1\n    /* \"#utility.yul\":11050:11079   */\n  swap2\n  pop\n    /* \"#utility.yul\":10987:11086   */\n  pop\n    /* \"#utility.yul\":10932:11086   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11092:11686   */\ntag_35:\n    /* \"#utility.yul\":11176:11181   */\n  0x00\n    /* \"#utility.yul\":11207:11245   */\n  tag_208\n    /* \"#utility.yul\":11239:11244   */\n  dup3\n    /* \"#utility.yul\":11207:11245   */\n  tag_77\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":11270:11275   */\n  dup3\n    /* \"#utility.yul\":11297:11337   */\n  tag_209\n    /* \"#utility.yul\":11331:11336   */\n  dup5\n    /* \"#utility.yul\":11297:11337   */\n  tag_78\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":11285:11337   */\n  swap1\n  pop\n    /* \"#utility.yul\":11356:11391   */\n  tag_210\n    /* \"#utility.yul\":11382:11390   */\n  dup2\n    /* \"#utility.yul\":11356:11391   */\n  tag_79\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":11347:11391   */\n  swap3\n  pop\n    /* \"#utility.yul\":11415:11417   */\n  0x20\n    /* \"#utility.yul\":11407:11413   */\n  dup3\n    /* \"#utility.yul\":11404:11418   */\n  lt\n    /* \"#utility.yul\":11401:11679   */\n  iszero\n  tag_211\n  jumpi\n    /* \"#utility.yul\":11486:11655   */\n  tag_212\n    /* \"#utility.yul\":11571:11637   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":11541:11547   */\n  dup4\n    /* \"#utility.yul\":11537:11539   */\n  0x20\n    /* \"#utility.yul\":11533:11548   */\n  sub\n    /* \"#utility.yul\":11530:11531   */\n  0x08\n    /* \"#utility.yul\":11526:11549   */\n  mul\n    /* \"#utility.yul\":11486:11655   */\n  tag_55\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":11463:11468   */\n  dup4\n    /* \"#utility.yul\":11442:11669   */\n  and\n    /* \"#utility.yul\":11433:11669   */\n  swap3\n  pop\n    /* \"#utility.yul\":11401:11679   */\ntag_211:\n    /* \"#utility.yul\":11182:11686   */\n  pop\n  pop\n    /* \"#utility.yul\":11092:11686   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contract/49_ERC20Permit.sol\":741:3280  contract ERC20Permit is ERC20, IERC20Permit, EIP712 {... */\ntag_18:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xdf4c66e138b26095ce4b11f8cc7541b5de6c2bb9a6f74948faedf7f92fd17d75\")\n  0x00\n  assignImmutable(\"0x9135753628762ba04d4b3f78b9c6ce34ed283cbb23e00e9cc00d1807b5001b3c\")\n  0x00\n  assignImmutable(\"0xb55f4f59d2523e33cd3449552bf682b6f1318eb72ebe3b4ac04b9faf81160e74\")\n  0x00\n  assignImmutable(\"0x552d8d0f3d89a15c5478fee8c0e4dd49bcb6b737259ce6e4f969ab373d457977\")\n  0x00\n  assignImmutable(\"0x3d089f973f3cbdc0ce1e6e435025479587c1d87daa5d62a02503ad8087358406\")\n  0x00\n  assignImmutable(\"0x2f5a7a4387012390ae96a601ff880b1b63bef83721d59c02e7e02b4a47f1bc8a\")\n  0x00\n  assignImmutable(\"0x5c2dcea52d7988f8e3cdf612ca3fcd1ed3f11f1278d1db0f0eb714ce1f2b8fea\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contract/49_ERC20Permit.sol\":741:3280  contract ERC20Permit is ERC20, IERC20Permit, EIP712 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7ecebe00\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa0712d68\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x7ecebe00\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/49_ERC20Permit.sol\":2914:3029  function DOMAIN_SEPARATOR() external view override returns (bytes32) {... */\n    tag_8:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/49_ERC20Permit.sol\":2786:2904  function nonces(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/49_ERC20Permit.sol\":3197:3277  function mint(uint amount) external {... */\n    tag_13:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/49_ERC20Permit.sol\":1115:2778  function permit(... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contract/49_ERC20Permit.sol\":2914:3029  function DOMAIN_SEPARATOR() external view override returns (bytes32) {... */\n    tag_44:\n        /* \"contract/49_ERC20Permit.sol\":2974:2981  bytes32 */\n      0x00\n        /* \"contract/49_ERC20Permit.sol\":3001:3021  _domainSeparatorV4() */\n      tag_101\n        /* \"contract/49_ERC20Permit.sol\":3001:3019  _domainSeparatorV4 */\n      tag_102\n        /* \"contract/49_ERC20Permit.sol\":3001:3021  _domainSeparatorV4() */\n      jump\t// in\n    tag_101:\n        /* \"contract/49_ERC20Permit.sol\":2994:3021  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"contract/49_ERC20Permit.sol\":2914:3029  function DOMAIN_SEPARATOR() external view override returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract/49_ERC20Permit.sol\":2786:2904  function nonces(address owner) public view virtual override returns (uint256) {... */\n    tag_54:\n        /* \"contract/49_ERC20Permit.sol\":2855:2862  uint256 */\n      0x00\n        /* \"contract/49_ERC20Permit.sol\":2882:2889  _nonces */\n      0x07\n        /* \"contract/49_ERC20Permit.sol\":2882:2896  _nonces[owner] */\n      0x00\n        /* \"contract/49_ERC20Permit.sol\":2890:2895  owner */\n      dup4\n        /* \"contract/49_ERC20Permit.sol\":2882:2896  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract/49_ERC20Permit.sol\":2875:2896  return _nonces[owner] */\n      swap1\n      pop\n        /* \"contract/49_ERC20Permit.sol\":2786:2904  function nonces(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_57:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5242:5255  bytes1 fields */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5269:5287  string memory name */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5301:5322  string memory version */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5336:5351  uint256 chainId */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5365:5390  address verifyingContract */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5404:5416  bytes32 salt */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5430:5457  uint256[] memory extensions */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      tag_106\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5544  _EIP712Name */\n      tag_107\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      tag_108\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5574  _EIP712Version */\n      tag_109\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5590:5603  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5625:5629  this */\n      address\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5652:5653  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5644:5654  bytes32(0) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5682:5683  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5668:5684  new uint256[](0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_110\n      jumpi\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n    tag_110:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_113\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_113:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5482:5694  return (... */\n      0x0f00000000000000000000000000000000000000000000000000000000000000\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_82\n      jump\t// in\n    tag_115:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_82\n      jump\t// in\n    tag_116:\n      dup1\n      iszero\n      tag_117\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_118\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_117)\n    tag_118:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_119:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_119\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contract/49_ERC20Permit.sol\":3197:3277  function mint(uint amount) external {... */\n    tag_66:\n        /* \"contract/49_ERC20Permit.sol\":3244:3269  _mint(msg.sender, amount) */\n      tag_121\n        /* \"contract/49_ERC20Permit.sol\":3250:3260  msg.sender */\n      caller\n        /* \"contract/49_ERC20Permit.sol\":3262:3268  amount */\n      dup3\n        /* \"contract/49_ERC20Permit.sol\":3244:3249  _mint */\n      tag_122\n        /* \"contract/49_ERC20Permit.sol\":3244:3269  _mint(msg.sender, amount) */\n      jump\t// in\n    tag_121:\n        /* \"contract/49_ERC20Permit.sol\":3197:3277  function mint(uint amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract/49_ERC20Permit.sol\":1115:2778  function permit(... */\n    tag_74:\n        /* \"contract/49_ERC20Permit.sol\":1365:1373  deadline */\n      dup4\n        /* \"contract/49_ERC20Permit.sol\":1346:1361  block.timestamp */\n      timestamp\n        /* \"contract/49_ERC20Permit.sol\":1346:1373  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"contract/49_ERC20Permit.sol\":1338:1407  require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"contract/49_ERC20Permit.sol\":1420:1438  bytes32 structHash */\n      0x00\n        /* \"contract/49_ERC20Permit.sol\":893:1004  keccak256(... */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contract/49_ERC20Permit.sol\":1605:1610  owner */\n      dup9\n        /* \"contract/49_ERC20Permit.sol\":1631:1638  spender */\n      dup9\n        /* \"contract/49_ERC20Permit.sol\":1658:1663  value */\n      dup9\n        /* \"contract/49_ERC20Permit.sol\":1683:1699  _useNonce(owner) */\n      tag_130\n        /* \"contract/49_ERC20Permit.sol\":1693:1698  owner */\n      dup13\n        /* \"contract/49_ERC20Permit.sol\":1683:1692  _useNonce */\n      tag_131\n        /* \"contract/49_ERC20Permit.sol\":1683:1699  _useNonce(owner) */\n      jump\t// in\n    tag_130:\n        /* \"contract/49_ERC20Permit.sol\":1719:1727  deadline */\n      dup10\n        /* \"contract/49_ERC20Permit.sol\":1465:1742  abi.encode(... */\n      add(0x20, mload(0x40))\n      tag_132\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contract/49_ERC20Permit.sol\":1441:1753  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contract/49_ERC20Permit.sol\":1420:1753  bytes32 structHash = keccak256(... */\n      swap1\n      pop\n        /* \"contract/49_ERC20Permit.sol\":2443:2455  bytes32 hash */\n      0x00\n        /* \"contract/49_ERC20Permit.sol\":2458:2486  _hashTypedDataV4(structHash) */\n      tag_134\n        /* \"contract/49_ERC20Permit.sol\":2475:2485  structHash */\n      dup3\n        /* \"contract/49_ERC20Permit.sol\":2458:2474  _hashTypedDataV4 */\n      tag_135\n        /* \"contract/49_ERC20Permit.sol\":2458:2486  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_134:\n        /* \"contract/49_ERC20Permit.sol\":2443:2486  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"contract/49_ERC20Permit.sol\":2554:2568  address signer */\n      0x00\n        /* \"contract/49_ERC20Permit.sol\":2571:2599  ECDSA.recover(hash, v, r, s) */\n      tag_136\n        /* \"contract/49_ERC20Permit.sol\":2585:2589  hash */\n      dup3\n        /* \"contract/49_ERC20Permit.sol\":2591:2592  v */\n      dup8\n        /* \"contract/49_ERC20Permit.sol\":2594:2595  r */\n      dup8\n        /* \"contract/49_ERC20Permit.sol\":2597:2598  s */\n      dup8\n        /* \"contract/49_ERC20Permit.sol\":2571:2584  ECDSA.recover */\n      tag_137\n        /* \"contract/49_ERC20Permit.sol\":2571:2599  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_136:\n        /* \"contract/49_ERC20Permit.sol\":2554:2599  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"contract/49_ERC20Permit.sol\":2685:2690  owner */\n      dup10\n        /* \"contract/49_ERC20Permit.sol\":2675:2690  signer == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/49_ERC20Permit.sol\":2675:2681  signer */\n      dup2\n        /* \"contract/49_ERC20Permit.sol\":2675:2690  signer == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract/49_ERC20Permit.sol\":2667:2726  require(signer == owner,  \"ERC20Permit: invalid signature\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"contract/49_ERC20Permit.sol\":2739:2770  _approve(owner, spender, value) */\n      tag_141\n        /* \"contract/49_ERC20Permit.sol\":2748:2753  owner */\n      dup11\n        /* \"contract/49_ERC20Permit.sol\":2755:2762  spender */\n      dup11\n        /* \"contract/49_ERC20Permit.sol\":2764:2769  value */\n      dup11\n        /* \"contract/49_ERC20Permit.sol\":2739:2747  _approve */\n      tag_91\n        /* \"contract/49_ERC20Permit.sol\":2739:2770  _approve(owner, spender, value) */\n      jump\t// in\n    tag_141:\n        /* \"contract/49_ERC20Permit.sol\":1327:2778  {... */\n      pop\n      pop\n      pop\n        /* \"contract/49_ERC20Permit.sol\":1115:2778  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3845:4107  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3898:3905  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3938:3949  _cachedThis */\n      immutable(\"0x3d089f973f3cbdc0ce1e6e435025479587c1d87daa5d62a02503ad8087358406\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3949  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3929:3933  this */\n      address\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3949  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3984  address(this) == _cachedThis && block.chainid == _cachedChainId */\n      dup1\n      iszero\n      tag_163\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3970:3984  _cachedChainId */\n      immutable(\"0x2f5a7a4387012390ae96a601ff880b1b63bef83721d59c02e7e02b4a47f1bc8a\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3953:3966  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3953:3984  block.chainid == _cachedChainId */\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3984  address(this) == _cachedThis && block.chainid == _cachedChainId */\n    tag_163:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3917:4101  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4007:4029  _cachedDomainSeparator */\n      immutable(\"0x5c2dcea52d7988f8e3cdf612ca3fcd1ed3f11f1278d1db0f0eb714ce1f2b8fea\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4000:4029  return _cachedDomainSeparator */\n      swap1\n      pop\n      jump(tag_162)\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3917:4101  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4067:4090  _buildDomainSeparator() */\n      tag_166\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4067:4088  _buildDomainSeparator */\n      tag_167\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4067:4090  _buildDomainSeparator() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4060:4090  return _buildDomainSeparator() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3845:4107  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_162:\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6021:6147  function _EIP712Name() internal view returns (string memory) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6067:6080  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      tag_169\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6126:6139  _nameFallback */\n      0x05\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6104  _name */\n      immutable(\"0x9135753628762ba04d4b3f78b9c6ce34ed283cbb23e00e9cc00d1807b5001b3c\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6125  _name.toStringWithFallback */\n      tag_170\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6092:6140  return _name.toStringWithFallback(_nameFallback) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6021:6147  function _EIP712Name() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6473:6608  function _EIP712Version() internal view returns (string memory) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6522:6535  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      tag_172\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6584:6600  _versionFallback */\n      0x06\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6562  _version */\n      immutable(\"0xdf4c66e138b26095ce4b11f8cc7541b5de6c2bb9a6f74948faedf7f92fd17d75\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6583  _version.toStringWithFallback */\n      tag_170\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6547:6601  return _version.toStringWithFallback(_versionFallback) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6473:6608  function _EIP712Version() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract/49_ERC20Permit.sol\":3039:3189  function _useNonce(address owner) internal virtual returns (uint256 current) {... */\n    tag_131:\n        /* \"contract/49_ERC20Permit.sol\":3099:3114  uint256 current */\n      0x00\n        /* \"contract/49_ERC20Permit.sol\":3137:3144  _nonces */\n      0x07\n        /* \"contract/49_ERC20Permit.sol\":3137:3151  _nonces[owner] */\n      0x00\n        /* \"contract/49_ERC20Permit.sol\":3145:3150  owner */\n      dup4\n        /* \"contract/49_ERC20Permit.sol\":3137:3151  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract/49_ERC20Permit.sol\":3127:3151  current = _nonces[owner] */\n      swap1\n      pop\n        /* \"contract/49_ERC20Permit.sol\":3180:3181  1 */\n      0x01\n        /* \"contract/49_ERC20Permit.sol\":3162:3169  _nonces */\n      0x07\n        /* \"contract/49_ERC20Permit.sol\":3162:3176  _nonces[owner] */\n      0x00\n        /* \"contract/49_ERC20Permit.sol\":3170:3175  owner */\n      dup5\n        /* \"contract/49_ERC20Permit.sol\":3162:3176  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract/49_ERC20Permit.sol\":3162:3181  _nonces[owner] += 1 */\n      dup3\n      dup3\n      sload\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/49_ERC20Permit.sol\":3039:3189  function _useNonce(address owner) internal virtual returns (uint256 current) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4917:5093  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4994:5001  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5020:5086  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_181\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5053:5073  _domainSeparatorV4() */\n      tag_182\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5053:5071  _domainSeparatorV4 */\n      tag_102\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5053:5073  _domainSeparatorV4() */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5075:5085  structHash */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5020:5052  MessageHashUtils.toTypedDataHash */\n      tag_183\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5020:5086  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5013:5086  return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4917:5093  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6803:7063  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6888:6895  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6908:6925  address recovered */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6927:6945  RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6947:6963  bytes32 errorArg */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6967:6992  tryRecover(hash, v, r, s) */\n      tag_185\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6978:6982  hash */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6984:6985  v */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6987:6988  r */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6990:6991  s */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6967:6977  tryRecover */\n      tag_186\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6967:6992  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6907:6992  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7002:7030  _throwError(error, errorArg) */\n      tag_187\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7014:7019  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7021:7029  errorArg */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7002:7013  _throwError */\n      tag_188\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7002:7030  _throwError(error, errorArg) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7047:7056  recovered */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7040:7056  return recovered */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6803:7063  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_195\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_198\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_198:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_199)\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_203)\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_204\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n      immutable(\"0x552d8d0f3d89a15c5478fee8c0e4dd49bcb6b737259ce6e4f969ab373d457977\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n      immutable(\"0xb55f4f59d2523e33cd3449552bf682b6f1318eb72ebe3b4ac04b9faf81160e74\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4278:4282  this */\n      address\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      add(0x20, mload(0x40))\n      tag_206\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3385:3652  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3479:3492  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3537:3554  FALLBACK_SENTINEL */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3527:3532  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3508:3554  ShortString.unwrap(value) != FALLBACK_SENTINEL */\n      eq\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      tag_210\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3586:3591  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3585  toString */\n      tag_211\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3570:3592  return toString(value) */\n      swap1\n      pop\n      jump(tag_208)\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3630:3635  store */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3623:3635  return store */\n      dup1\n      sload\n      tag_213\n      swap1\n      tag_82\n      jump\t// in\n    tag_213:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_214\n      swap1\n      tag_82\n      jump\t// in\n    tag_214:\n      dup1\n      iszero\n      tag_215\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_216\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_215)\n    tag_216:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_217:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_217\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_215:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3385:3652  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_208:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3353:3754  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3446:3460  bytes32 digest */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3555:3559  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3549:3560  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3585:3595  hex\"19_01\" */\n      0x1901000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3580:3583  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3573:3596  mstore(ptr, hex\"19_01\") */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3632:3647  domainSeparator */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3625:3629  0x02 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3620:3623  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3616:3630  add(ptr, 0x02) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3609:3648  mstore(add(ptr, 0x02), domainSeparator) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3684:3694  structHash */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3677:3681  0x22 */\n      0x22\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3672:3675  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3668:3682  add(ptr, 0x22) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3661:3695  mstore(add(ptr, 0x22), structHash) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3733:3737  0x42 */\n      0x42\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3728:3731  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3718:3738  keccak256(ptr, 0x42) */\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3708:3738  digest := keccak256(ptr, 0x42) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3524:3748  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3353:3754  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_186:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5266:5273  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5275:5287  RecoverError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5289:5296  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6199:6265  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6194:6195  s */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6186:6196  uint256(s) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6186:6265  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6297:6298  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6301:6331  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6333:6334  s */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6281:6335  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_219)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6440:6454  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6467:6471  hash */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6473:6474  v */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6476:6477  r */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6479:6480  s */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_221\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_224\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_224:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6440:6481  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6513:6514  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6501  signer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6547:6548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6551:6580  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6590:6591  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6582:6592  bytes32(0) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6531:6593  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      jump(tag_219)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6622:6628  signer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6630:6650  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6660:6661  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6652:6662  bytes32(0) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6614:6663  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_219:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7291:7311  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7311  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_227\n      jumpi\n      tag_228\n      tag_229\n      jump\t// in\n    tag_228:\n    tag_227:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7287  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7311  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_230\n      jumpi\n      tag_231\n      tag_229\n      jump\t// in\n    tag_231:\n    tag_230:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n      iszero\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7327:7334  return; */\n      tag_226\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7387:7416  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7416  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_234\n      jumpi\n      tag_235\n      tag_229\n      jump\t// in\n    tag_235:\n    tag_234:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7383  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7416  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_236\n      jumpi\n      tag_237\n      tag_229\n      jump\t// in\n    tag_237:\n    tag_236:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7439:7462  ECDSAInvalidSignature() */\n      mload(0x40)\n      0xf645eedf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7492:7527  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7527  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_240\n      jumpi\n      tag_241\n      tag_229\n      jump\t// in\n    tag_241:\n    tag_240:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7488  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7527  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_242\n      jumpi\n      tag_243\n      tag_229\n      jump\t// in\n    tag_243:\n    tag_242:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7586:7594  errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7578:7595  uint256(errorArg) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7550:7596  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      0xfce698f700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7626:7656  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7656  error == RecoverError.InvalidSignatureS */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_247\n      jumpi\n      tag_248\n      tag_229\n      jump\t// in\n    tag_248:\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7622  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7656  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_249\n      jumpi\n      tag_250\n      tag_229\n      jump\t// in\n    tag_250:\n    tag_249:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7702:7710  errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7679:7711  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      0xd78bce0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_226:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2137:2150  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2162:2173  uint256 len */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      tag_254\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2187:2191  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2186  byteLength */\n      tag_255\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2162:2192  uint256 len = byteLength(sstr) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2280:2297  string memory str */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2311:2313  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2300:2314  new string(32) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_256\n      jumpi\n      tag_257\n      tag_112\n      jump\t// in\n    tag_257:\n    tag_256:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_258\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_258:\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2280:2314  string memory str = new string(32) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2402:2405  len */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2397:2400  str */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2390:2406  mstore(str, len) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2442:2446  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2435:2439  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2430:2433  str */\n      dup3\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2426:2440  add(str, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2419:2447  mstore(add(str, 0x20), sstr) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2473:2476  str */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2466:2476  return str */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2555:2800  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2616:2623  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2635:2649  uint256 result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2688:2692  0xFF */\n      0xff\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2679:2683  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2652:2685  uint256(ShortString.unwrap(sstr)) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2652:2692  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      and\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2635:2692  uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2715:2717  31 */\n      0x1f\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2706:2712  result */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2706:2717  result > 31 */\n      gt\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2702:2771  if (result > 31) {... */\n      iszero\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2740:2760  InvalidShortString() */\n      mload(0x40)\n      0xb3512b0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2702:2771  if (result > 31) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2787:2793  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2780:2793  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2555:2800  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_261:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_262:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_263:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_264:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_265:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_309\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_261\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":711:782   */\n      tag_310\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_262\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_311\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_263\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":881:910   */\n      tag_312\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_264\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_23:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_314\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_265\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_267:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_269:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_270:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_320\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_269\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_271:\n        /* \"#utility.yul\":1876:1900   */\n      tag_322\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_270\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_323:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_272:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_325\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_271\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_273:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_274:\n        /* \"#utility.yul\":2232:2256   */\n      tag_328\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_273\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_329\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_329:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_275:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_331\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_274\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_26:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_334\n      tag_267\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":2525:2644   */\n    tag_333:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_335\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_272\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_336\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_275\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_276:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_277:\n        /* \"#utility.yul\":3089:3110   */\n      tag_339\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_276\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_29:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_341\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_277\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_278:\n        /* \"#utility.yul\":3426:3450   */\n      tag_343\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_273\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_33:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_345\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_278\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_36:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_348\n      tag_267\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":3801:3920   */\n    tag_347:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_349\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_272\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_350\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_272\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_351\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_275\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_279:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_280:\n        /* \"#utility.yul\":4491:4513   */\n      tag_354\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_279\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_42:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_356\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_280\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:4823   */\n    tag_281:\n        /* \"#utility.yul\":4783:4790   */\n      0x00\n        /* \"#utility.yul\":4812:4817   */\n      dup2\n        /* \"#utility.yul\":4801:4817   */\n      swap1\n      pop\n        /* \"#utility.yul\":4746:4823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4829:4947   */\n    tag_282:\n        /* \"#utility.yul\":4916:4940   */\n      tag_359\n        /* \"#utility.yul\":4934:4939   */\n      dup2\n        /* \"#utility.yul\":4916:4940   */\n      tag_281\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":4911:4914   */\n      dup3\n        /* \"#utility.yul\":4904:4941   */\n      mstore\n        /* \"#utility.yul\":4829:4947   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4953:5175   */\n    tag_46:\n        /* \"#utility.yul\":5046:5050   */\n      0x00\n        /* \"#utility.yul\":5084:5086   */\n      0x20\n        /* \"#utility.yul\":5073:5082   */\n      dup3\n        /* \"#utility.yul\":5069:5087   */\n      add\n        /* \"#utility.yul\":5061:5087   */\n      swap1\n      pop\n        /* \"#utility.yul\":5097:5168   */\n      tag_361\n        /* \"#utility.yul\":5165:5166   */\n      0x00\n        /* \"#utility.yul\":5154:5163   */\n      dup4\n        /* \"#utility.yul\":5150:5167   */\n      add\n        /* \"#utility.yul\":5141:5147   */\n      dup5\n        /* \"#utility.yul\":5097:5168   */\n      tag_282\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":4953:5175   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5181:5510   */\n    tag_49:\n        /* \"#utility.yul\":5240:5246   */\n      0x00\n        /* \"#utility.yul\":5289:5291   */\n      0x20\n        /* \"#utility.yul\":5277:5286   */\n      dup3\n        /* \"#utility.yul\":5268:5275   */\n      dup5\n        /* \"#utility.yul\":5264:5287   */\n      sub\n        /* \"#utility.yul\":5260:5292   */\n      slt\n        /* \"#utility.yul\":5257:5376   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":5295:5374   */\n      tag_364\n      tag_267\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":5257:5376   */\n    tag_363:\n        /* \"#utility.yul\":5415:5416   */\n      0x00\n        /* \"#utility.yul\":5440:5493   */\n      tag_365\n        /* \"#utility.yul\":5485:5492   */\n      dup5\n        /* \"#utility.yul\":5476:5482   */\n      dup3\n        /* \"#utility.yul\":5465:5474   */\n      dup6\n        /* \"#utility.yul\":5461:5483   */\n      add\n        /* \"#utility.yul\":5440:5493   */\n      tag_272\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5430:5493   */\n      swap2\n      pop\n        /* \"#utility.yul\":5386:5503   */\n      pop\n        /* \"#utility.yul\":5181:5510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5516:5665   */\n    tag_283:\n        /* \"#utility.yul\":5552:5559   */\n      0x00\n        /* \"#utility.yul\":5592:5658   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5585:5590   */\n      dup3\n        /* \"#utility.yul\":5581:5659   */\n      and\n        /* \"#utility.yul\":5570:5659   */\n      swap1\n      pop\n        /* \"#utility.yul\":5516:5665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5671:5786   */\n    tag_284:\n        /* \"#utility.yul\":5756:5779   */\n      tag_368\n        /* \"#utility.yul\":5773:5778   */\n      dup2\n        /* \"#utility.yul\":5756:5779   */\n      tag_283\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5751:5754   */\n      dup3\n        /* \"#utility.yul\":5744:5780   */\n      mstore\n        /* \"#utility.yul\":5671:5786   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5792:5910   */\n    tag_285:\n        /* \"#utility.yul\":5879:5903   */\n      tag_370\n        /* \"#utility.yul\":5897:5902   */\n      dup2\n        /* \"#utility.yul\":5879:5903   */\n      tag_270\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":5874:5877   */\n      dup3\n        /* \"#utility.yul\":5867:5904   */\n      mstore\n        /* \"#utility.yul\":5792:5910   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5916:6030   */\n    tag_286:\n        /* \"#utility.yul\":5983:5989   */\n      0x00\n        /* \"#utility.yul\":6017:6022   */\n      dup2\n        /* \"#utility.yul\":6011:6023   */\n      mload\n        /* \"#utility.yul\":6001:6023   */\n      swap1\n      pop\n        /* \"#utility.yul\":5916:6030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6036:6220   */\n    tag_287:\n        /* \"#utility.yul\":6135:6146   */\n      0x00\n        /* \"#utility.yul\":6169:6175   */\n      dup3\n        /* \"#utility.yul\":6164:6167   */\n      dup3\n        /* \"#utility.yul\":6157:6176   */\n      mstore\n        /* \"#utility.yul\":6209:6213   */\n      0x20\n        /* \"#utility.yul\":6204:6207   */\n      dup3\n        /* \"#utility.yul\":6200:6214   */\n      add\n        /* \"#utility.yul\":6185:6214   */\n      swap1\n      pop\n        /* \"#utility.yul\":6036:6220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6226:6358   */\n    tag_288:\n        /* \"#utility.yul\":6293:6297   */\n      0x00\n        /* \"#utility.yul\":6316:6319   */\n      dup2\n        /* \"#utility.yul\":6308:6319   */\n      swap1\n      pop\n        /* \"#utility.yul\":6346:6350   */\n      0x20\n        /* \"#utility.yul\":6341:6344   */\n      dup3\n        /* \"#utility.yul\":6337:6351   */\n      add\n        /* \"#utility.yul\":6329:6351   */\n      swap1\n      pop\n        /* \"#utility.yul\":6226:6358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6364:6472   */\n    tag_289:\n        /* \"#utility.yul\":6441:6465   */\n      tag_375\n        /* \"#utility.yul\":6459:6464   */\n      dup2\n        /* \"#utility.yul\":6441:6465   */\n      tag_273\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6436:6439   */\n      dup3\n        /* \"#utility.yul\":6429:6466   */\n      mstore\n        /* \"#utility.yul\":6364:6472   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6478:6657   */\n    tag_290:\n        /* \"#utility.yul\":6547:6557   */\n      0x00\n        /* \"#utility.yul\":6568:6614   */\n      tag_377\n        /* \"#utility.yul\":6610:6613   */\n      dup4\n        /* \"#utility.yul\":6602:6608   */\n      dup4\n        /* \"#utility.yul\":6568:6614   */\n      tag_289\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":6646:6650   */\n      0x20\n        /* \"#utility.yul\":6641:6644   */\n      dup4\n        /* \"#utility.yul\":6637:6651   */\n      add\n        /* \"#utility.yul\":6623:6651   */\n      swap1\n      pop\n        /* \"#utility.yul\":6478:6657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6663:6776   */\n    tag_291:\n        /* \"#utility.yul\":6733:6737   */\n      0x00\n        /* \"#utility.yul\":6765:6769   */\n      0x20\n        /* \"#utility.yul\":6760:6763   */\n      dup3\n        /* \"#utility.yul\":6756:6770   */\n      add\n        /* \"#utility.yul\":6748:6770   */\n      swap1\n      pop\n        /* \"#utility.yul\":6663:6776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6812:7544   */\n    tag_292:\n        /* \"#utility.yul\":6931:6934   */\n      0x00\n        /* \"#utility.yul\":6960:7014   */\n      tag_380\n        /* \"#utility.yul\":7008:7013   */\n      dup3\n        /* \"#utility.yul\":6960:7014   */\n      tag_286\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7030:7116   */\n      tag_381\n        /* \"#utility.yul\":7109:7115   */\n      dup2\n        /* \"#utility.yul\":7104:7107   */\n      dup6\n        /* \"#utility.yul\":7030:7116   */\n      tag_287\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":7023:7116   */\n      swap4\n      pop\n        /* \"#utility.yul\":7140:7196   */\n      tag_382\n        /* \"#utility.yul\":7190:7195   */\n      dup4\n        /* \"#utility.yul\":7140:7196   */\n      tag_288\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":7219:7226   */\n      dup1\n        /* \"#utility.yul\":7250:7251   */\n      0x00\n        /* \"#utility.yul\":7235:7519   */\n    tag_383:\n        /* \"#utility.yul\":7260:7266   */\n      dup4\n        /* \"#utility.yul\":7257:7258   */\n      dup2\n        /* \"#utility.yul\":7254:7267   */\n      lt\n        /* \"#utility.yul\":7235:7519   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":7336:7342   */\n      dup2\n        /* \"#utility.yul\":7330:7343   */\n      mload\n        /* \"#utility.yul\":7363:7426   */\n      tag_386\n        /* \"#utility.yul\":7422:7425   */\n      dup9\n        /* \"#utility.yul\":7407:7420   */\n      dup3\n        /* \"#utility.yul\":7363:7426   */\n      tag_290\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":7356:7426   */\n      swap8\n      pop\n        /* \"#utility.yul\":7449:7509   */\n      tag_387\n        /* \"#utility.yul\":7502:7508   */\n      dup4\n        /* \"#utility.yul\":7449:7509   */\n      tag_291\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":7439:7509   */\n      swap3\n      pop\n        /* \"#utility.yul\":7295:7519   */\n      pop\n        /* \"#utility.yul\":7282:7283   */\n      0x01\n        /* \"#utility.yul\":7279:7280   */\n      dup2\n        /* \"#utility.yul\":7275:7284   */\n      add\n        /* \"#utility.yul\":7270:7284   */\n      swap1\n      pop\n        /* \"#utility.yul\":7235:7519   */\n      jump(tag_383)\n    tag_385:\n        /* \"#utility.yul\":7239:7253   */\n      pop\n        /* \"#utility.yul\":7535:7538   */\n      dup6\n        /* \"#utility.yul\":7528:7538   */\n      swap4\n      pop\n        /* \"#utility.yul\":6936:7544   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6812:7544   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7550:8765   */\n    tag_59:\n        /* \"#utility.yul\":7899:7903   */\n      0x00\n        /* \"#utility.yul\":7937:7940   */\n      0xe0\n        /* \"#utility.yul\":7926:7935   */\n      dup3\n        /* \"#utility.yul\":7922:7941   */\n      add\n        /* \"#utility.yul\":7914:7941   */\n      swap1\n      pop\n        /* \"#utility.yul\":7951:8020   */\n      tag_389\n        /* \"#utility.yul\":8017:8018   */\n      0x00\n        /* \"#utility.yul\":8006:8015   */\n      dup4\n        /* \"#utility.yul\":8002:8019   */\n      add\n        /* \"#utility.yul\":7993:7999   */\n      dup11\n        /* \"#utility.yul\":7951:8020   */\n      tag_284\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":8067:8076   */\n      dup2\n        /* \"#utility.yul\":8061:8065   */\n      dup2\n        /* \"#utility.yul\":8057:8077   */\n      sub\n        /* \"#utility.yul\":8052:8054   */\n      0x20\n        /* \"#utility.yul\":8041:8050   */\n      dup4\n        /* \"#utility.yul\":8037:8055   */\n      add\n        /* \"#utility.yul\":8030:8078   */\n      mstore\n        /* \"#utility.yul\":8095:8173   */\n      tag_390\n        /* \"#utility.yul\":8168:8172   */\n      dup2\n        /* \"#utility.yul\":8159:8165   */\n      dup10\n        /* \"#utility.yul\":8095:8173   */\n      tag_265\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":8087:8173   */\n      swap1\n      pop\n        /* \"#utility.yul\":8220:8229   */\n      dup2\n        /* \"#utility.yul\":8214:8218   */\n      dup2\n        /* \"#utility.yul\":8210:8230   */\n      sub\n        /* \"#utility.yul\":8205:8207   */\n      0x40\n        /* \"#utility.yul\":8194:8203   */\n      dup4\n        /* \"#utility.yul\":8190:8208   */\n      add\n        /* \"#utility.yul\":8183:8231   */\n      mstore\n        /* \"#utility.yul\":8248:8326   */\n      tag_391\n        /* \"#utility.yul\":8321:8325   */\n      dup2\n        /* \"#utility.yul\":8312:8318   */\n      dup9\n        /* \"#utility.yul\":8248:8326   */\n      tag_265\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":8240:8326   */\n      swap1\n      pop\n        /* \"#utility.yul\":8336:8408   */\n      tag_392\n        /* \"#utility.yul\":8404:8406   */\n      0x60\n        /* \"#utility.yul\":8393:8402   */\n      dup4\n        /* \"#utility.yul\":8389:8407   */\n      add\n        /* \"#utility.yul\":8380:8386   */\n      dup8\n        /* \"#utility.yul\":8336:8408   */\n      tag_278\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":8418:8491   */\n      tag_393\n        /* \"#utility.yul\":8486:8489   */\n      0x80\n        /* \"#utility.yul\":8475:8484   */\n      dup4\n        /* \"#utility.yul\":8471:8490   */\n      add\n        /* \"#utility.yul\":8462:8468   */\n      dup7\n        /* \"#utility.yul\":8418:8491   */\n      tag_285\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8501:8574   */\n      tag_394\n        /* \"#utility.yul\":8569:8572   */\n      0xa0\n        /* \"#utility.yul\":8558:8567   */\n      dup4\n        /* \"#utility.yul\":8554:8573   */\n      add\n        /* \"#utility.yul\":8545:8551   */\n      dup6\n        /* \"#utility.yul\":8501:8574   */\n      tag_282\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":8622:8631   */\n      dup2\n        /* \"#utility.yul\":8616:8620   */\n      dup2\n        /* \"#utility.yul\":8612:8632   */\n      sub\n        /* \"#utility.yul\":8606:8609   */\n      0xc0\n        /* \"#utility.yul\":8595:8604   */\n      dup4\n        /* \"#utility.yul\":8591:8610   */\n      add\n        /* \"#utility.yul\":8584:8633   */\n      mstore\n        /* \"#utility.yul\":8650:8758   */\n      tag_395\n        /* \"#utility.yul\":8753:8757   */\n      dup2\n        /* \"#utility.yul\":8744:8750   */\n      dup5\n        /* \"#utility.yul\":8650:8758   */\n      tag_292\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":8642:8758   */\n      swap1\n      pop\n        /* \"#utility.yul\":7550:8765   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8771:9100   */\n    tag_65:\n        /* \"#utility.yul\":8830:8836   */\n      0x00\n        /* \"#utility.yul\":8879:8881   */\n      0x20\n        /* \"#utility.yul\":8867:8876   */\n      dup3\n        /* \"#utility.yul\":8858:8865   */\n      dup5\n        /* \"#utility.yul\":8854:8877   */\n      sub\n        /* \"#utility.yul\":8850:8882   */\n      slt\n        /* \"#utility.yul\":8847:8966   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":8885:8964   */\n      tag_398\n      tag_267\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":8847:8966   */\n    tag_397:\n        /* \"#utility.yul\":9005:9006   */\n      0x00\n        /* \"#utility.yul\":9030:9083   */\n      tag_399\n        /* \"#utility.yul\":9075:9082   */\n      dup5\n        /* \"#utility.yul\":9066:9072   */\n      dup3\n        /* \"#utility.yul\":9055:9064   */\n      dup6\n        /* \"#utility.yul\":9051:9073   */\n      add\n        /* \"#utility.yul\":9030:9083   */\n      tag_275\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":9020:9083   */\n      swap2\n      pop\n        /* \"#utility.yul\":8976:9093   */\n      pop\n        /* \"#utility.yul\":8771:9100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9106:9224   */\n    tag_293:\n        /* \"#utility.yul\":9177:9199   */\n      tag_401\n        /* \"#utility.yul\":9193:9198   */\n      dup2\n        /* \"#utility.yul\":9177:9199   */\n      tag_279\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":9170:9175   */\n      dup2\n        /* \"#utility.yul\":9167:9200   */\n      eq\n        /* \"#utility.yul\":9157:9218   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":9214:9215   */\n      0x00\n        /* \"#utility.yul\":9211:9212   */\n      0x00\n        /* \"#utility.yul\":9204:9216   */\n      revert\n        /* \"#utility.yul\":9157:9218   */\n    tag_402:\n        /* \"#utility.yul\":9106:9224   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9230:9365   */\n    tag_294:\n        /* \"#utility.yul\":9274:9279   */\n      0x00\n        /* \"#utility.yul\":9312:9318   */\n      dup2\n        /* \"#utility.yul\":9299:9319   */\n      calldataload\n        /* \"#utility.yul\":9290:9319   */\n      swap1\n      pop\n        /* \"#utility.yul\":9328:9359   */\n      tag_404\n        /* \"#utility.yul\":9353:9358   */\n      dup2\n        /* \"#utility.yul\":9328:9359   */\n      tag_293\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":9230:9365   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9371:9493   */\n    tag_295:\n        /* \"#utility.yul\":9444:9468   */\n      tag_406\n        /* \"#utility.yul\":9462:9467   */\n      dup2\n        /* \"#utility.yul\":9444:9468   */\n      tag_281\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9437:9442   */\n      dup2\n        /* \"#utility.yul\":9434:9469   */\n      eq\n        /* \"#utility.yul\":9424:9487   */\n      tag_407\n      jumpi\n        /* \"#utility.yul\":9483:9484   */\n      0x00\n        /* \"#utility.yul\":9480:9481   */\n      0x00\n        /* \"#utility.yul\":9473:9485   */\n      revert\n        /* \"#utility.yul\":9424:9487   */\n    tag_407:\n        /* \"#utility.yul\":9371:9493   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9499:9638   */\n    tag_296:\n        /* \"#utility.yul\":9545:9550   */\n      0x00\n        /* \"#utility.yul\":9583:9589   */\n      dup2\n        /* \"#utility.yul\":9570:9590   */\n      calldataload\n        /* \"#utility.yul\":9561:9590   */\n      swap1\n      pop\n        /* \"#utility.yul\":9599:9632   */\n      tag_409\n        /* \"#utility.yul\":9626:9631   */\n      dup2\n        /* \"#utility.yul\":9599:9632   */\n      tag_295\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":9499:9638   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9644:10843   */\n    tag_73:\n        /* \"#utility.yul\":9755:9761   */\n      0x00\n        /* \"#utility.yul\":9763:9769   */\n      0x00\n        /* \"#utility.yul\":9771:9777   */\n      0x00\n        /* \"#utility.yul\":9779:9785   */\n      0x00\n        /* \"#utility.yul\":9787:9793   */\n      0x00\n        /* \"#utility.yul\":9795:9801   */\n      0x00\n        /* \"#utility.yul\":9803:9809   */\n      0x00\n        /* \"#utility.yul\":9852:9855   */\n      0xe0\n        /* \"#utility.yul\":9840:9849   */\n      dup9\n        /* \"#utility.yul\":9831:9838   */\n      dup11\n        /* \"#utility.yul\":9827:9850   */\n      sub\n        /* \"#utility.yul\":9823:9856   */\n      slt\n        /* \"#utility.yul\":9820:9940   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":9859:9938   */\n      tag_412\n      tag_267\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":9820:9940   */\n    tag_411:\n        /* \"#utility.yul\":9979:9980   */\n      0x00\n        /* \"#utility.yul\":10004:10057   */\n      tag_413\n        /* \"#utility.yul\":10049:10056   */\n      dup11\n        /* \"#utility.yul\":10040:10046   */\n      dup3\n        /* \"#utility.yul\":10029:10038   */\n      dup12\n        /* \"#utility.yul\":10025:10047   */\n      add\n        /* \"#utility.yul\":10004:10057   */\n      tag_272\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":9994:10057   */\n      swap8\n      pop\n        /* \"#utility.yul\":9950:10067   */\n      pop\n        /* \"#utility.yul\":10106:10108   */\n      0x20\n        /* \"#utility.yul\":10132:10185   */\n      tag_414\n        /* \"#utility.yul\":10177:10184   */\n      dup11\n        /* \"#utility.yul\":10168:10174   */\n      dup3\n        /* \"#utility.yul\":10157:10166   */\n      dup12\n        /* \"#utility.yul\":10153:10175   */\n      add\n        /* \"#utility.yul\":10132:10185   */\n      tag_272\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":10122:10185   */\n      swap7\n      pop\n        /* \"#utility.yul\":10077:10195   */\n      pop\n        /* \"#utility.yul\":10234:10236   */\n      0x40\n        /* \"#utility.yul\":10260:10313   */\n      tag_415\n        /* \"#utility.yul\":10305:10312   */\n      dup11\n        /* \"#utility.yul\":10296:10302   */\n      dup3\n        /* \"#utility.yul\":10285:10294   */\n      dup12\n        /* \"#utility.yul\":10281:10303   */\n      add\n        /* \"#utility.yul\":10260:10313   */\n      tag_275\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":10250:10313   */\n      swap6\n      pop\n        /* \"#utility.yul\":10205:10323   */\n      pop\n        /* \"#utility.yul\":10362:10364   */\n      0x60\n        /* \"#utility.yul\":10388:10441   */\n      tag_416\n        /* \"#utility.yul\":10433:10440   */\n      dup11\n        /* \"#utility.yul\":10424:10430   */\n      dup3\n        /* \"#utility.yul\":10413:10422   */\n      dup12\n        /* \"#utility.yul\":10409:10431   */\n      add\n        /* \"#utility.yul\":10388:10441   */\n      tag_275\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":10378:10441   */\n      swap5\n      pop\n        /* \"#utility.yul\":10333:10451   */\n      pop\n        /* \"#utility.yul\":10490:10493   */\n      0x80\n        /* \"#utility.yul\":10517:10568   */\n      tag_417\n        /* \"#utility.yul\":10560:10567   */\n      dup11\n        /* \"#utility.yul\":10551:10557   */\n      dup3\n        /* \"#utility.yul\":10540:10549   */\n      dup12\n        /* \"#utility.yul\":10536:10558   */\n      add\n        /* \"#utility.yul\":10517:10568   */\n      tag_294\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":10507:10568   */\n      swap4\n      pop\n        /* \"#utility.yul\":10461:10578   */\n      pop\n        /* \"#utility.yul\":10617:10620   */\n      0xa0\n        /* \"#utility.yul\":10644:10697   */\n      tag_418\n        /* \"#utility.yul\":10689:10696   */\n      dup11\n        /* \"#utility.yul\":10680:10686   */\n      dup3\n        /* \"#utility.yul\":10669:10678   */\n      dup12\n        /* \"#utility.yul\":10665:10687   */\n      add\n        /* \"#utility.yul\":10644:10697   */\n      tag_296\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":10634:10697   */\n      swap3\n      pop\n        /* \"#utility.yul\":10588:10707   */\n      pop\n        /* \"#utility.yul\":10746:10749   */\n      0xc0\n        /* \"#utility.yul\":10773:10826   */\n      tag_419\n        /* \"#utility.yul\":10818:10825   */\n      dup11\n        /* \"#utility.yul\":10809:10815   */\n      dup3\n        /* \"#utility.yul\":10798:10807   */\n      dup12\n        /* \"#utility.yul\":10794:10816   */\n      add\n        /* \"#utility.yul\":10773:10826   */\n      tag_296\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":10763:10826   */\n      swap2\n      pop\n        /* \"#utility.yul\":10717:10836   */\n      pop\n        /* \"#utility.yul\":9644:10843   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10849:11323   */\n    tag_77:\n        /* \"#utility.yul\":10917:10923   */\n      0x00\n        /* \"#utility.yul\":10925:10931   */\n      0x00\n        /* \"#utility.yul\":10974:10976   */\n      0x40\n        /* \"#utility.yul\":10962:10971   */\n      dup4\n        /* \"#utility.yul\":10953:10960   */\n      dup6\n        /* \"#utility.yul\":10949:10972   */\n      sub\n        /* \"#utility.yul\":10945:10977   */\n      slt\n        /* \"#utility.yul\":10942:11061   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":10980:11059   */\n      tag_422\n      tag_267\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":10942:11061   */\n    tag_421:\n        /* \"#utility.yul\":11100:11101   */\n      0x00\n        /* \"#utility.yul\":11125:11178   */\n      tag_423\n        /* \"#utility.yul\":11170:11177   */\n      dup6\n        /* \"#utility.yul\":11161:11167   */\n      dup3\n        /* \"#utility.yul\":11150:11159   */\n      dup7\n        /* \"#utility.yul\":11146:11168   */\n      add\n        /* \"#utility.yul\":11125:11178   */\n      tag_272\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":11115:11178   */\n      swap3\n      pop\n        /* \"#utility.yul\":11071:11188   */\n      pop\n        /* \"#utility.yul\":11227:11229   */\n      0x20\n        /* \"#utility.yul\":11253:11306   */\n      tag_424\n        /* \"#utility.yul\":11298:11305   */\n      dup6\n        /* \"#utility.yul\":11289:11295   */\n      dup3\n        /* \"#utility.yul\":11278:11287   */\n      dup7\n        /* \"#utility.yul\":11274:11296   */\n      add\n        /* \"#utility.yul\":11253:11306   */\n      tag_272\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":11243:11306   */\n      swap2\n      pop\n        /* \"#utility.yul\":11198:11316   */\n      pop\n        /* \"#utility.yul\":10849:11323   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11329:11509   */\n    tag_297:\n        /* \"#utility.yul\":11377:11454   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11374:11375   */\n      0x00\n        /* \"#utility.yul\":11367:11455   */\n      mstore\n        /* \"#utility.yul\":11474:11478   */\n      0x22\n        /* \"#utility.yul\":11471:11472   */\n      0x04\n        /* \"#utility.yul\":11464:11479   */\n      mstore\n        /* \"#utility.yul\":11498:11502   */\n      0x24\n        /* \"#utility.yul\":11495:11496   */\n      0x00\n        /* \"#utility.yul\":11488:11503   */\n      revert\n        /* \"#utility.yul\":11515:11835   */\n    tag_82:\n        /* \"#utility.yul\":11559:11565   */\n      0x00\n        /* \"#utility.yul\":11596:11597   */\n      0x02\n        /* \"#utility.yul\":11590:11594   */\n      dup3\n        /* \"#utility.yul\":11586:11598   */\n      div\n        /* \"#utility.yul\":11576:11598   */\n      swap1\n      pop\n        /* \"#utility.yul\":11643:11644   */\n      0x01\n        /* \"#utility.yul\":11637:11641   */\n      dup3\n        /* \"#utility.yul\":11633:11645   */\n      and\n        /* \"#utility.yul\":11664:11682   */\n      dup1\n        /* \"#utility.yul\":11654:11735   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":11720:11724   */\n      0x7f\n        /* \"#utility.yul\":11712:11718   */\n      dup3\n        /* \"#utility.yul\":11708:11725   */\n      and\n        /* \"#utility.yul\":11698:11725   */\n      swap2\n      pop\n        /* \"#utility.yul\":11654:11735   */\n    tag_427:\n        /* \"#utility.yul\":11782:11784   */\n      0x20\n        /* \"#utility.yul\":11774:11780   */\n      dup3\n        /* \"#utility.yul\":11771:11785   */\n      lt\n        /* \"#utility.yul\":11751:11769   */\n      dup2\n        /* \"#utility.yul\":11748:11786   */\n      sub\n        /* \"#utility.yul\":11745:11829   */\n      tag_428\n      jumpi\n        /* \"#utility.yul\":11801:11819   */\n      tag_429\n      tag_297\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":11745:11829   */\n    tag_428:\n        /* \"#utility.yul\":11566:11835   */\n      pop\n        /* \"#utility.yul\":11515:11835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11841:12021   */\n    tag_112:\n        /* \"#utility.yul\":11889:11966   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11886:11887   */\n      0x00\n        /* \"#utility.yul\":11879:11967   */\n      mstore\n        /* \"#utility.yul\":11986:11990   */\n      0x41\n        /* \"#utility.yul\":11983:11984   */\n      0x04\n        /* \"#utility.yul\":11976:11991   */\n      mstore\n        /* \"#utility.yul\":12010:12014   */\n      0x24\n        /* \"#utility.yul\":12007:12008   */\n      0x00\n        /* \"#utility.yul\":12000:12015   */\n      revert\n        /* \"#utility.yul\":12027:12206   */\n    tag_298:\n        /* \"#utility.yul\":12167:12198   */\n      0x45524332305065726d69743a206578706972656420646561646c696e65000000\n        /* \"#utility.yul\":12163:12164   */\n      0x00\n        /* \"#utility.yul\":12155:12161   */\n      dup3\n        /* \"#utility.yul\":12151:12165   */\n      add\n        /* \"#utility.yul\":12144:12199   */\n      mstore\n        /* \"#utility.yul\":12027:12206   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12212:12578   */\n    tag_299:\n        /* \"#utility.yul\":12354:12357   */\n      0x00\n        /* \"#utility.yul\":12375:12442   */\n      tag_433\n        /* \"#utility.yul\":12439:12441   */\n      0x1d\n        /* \"#utility.yul\":12434:12437   */\n      dup4\n        /* \"#utility.yul\":12375:12442   */\n      tag_262\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":12368:12442   */\n      swap2\n      pop\n        /* \"#utility.yul\":12451:12544   */\n      tag_434\n        /* \"#utility.yul\":12540:12543   */\n      dup3\n        /* \"#utility.yul\":12451:12544   */\n      tag_298\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":12569:12571   */\n      0x20\n        /* \"#utility.yul\":12564:12567   */\n      dup3\n        /* \"#utility.yul\":12560:12572   */\n      add\n        /* \"#utility.yul\":12553:12572   */\n      swap1\n      pop\n        /* \"#utility.yul\":12212:12578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12584:13003   */\n    tag_129:\n        /* \"#utility.yul\":12750:12754   */\n      0x00\n        /* \"#utility.yul\":12788:12790   */\n      0x20\n        /* \"#utility.yul\":12777:12786   */\n      dup3\n        /* \"#utility.yul\":12773:12791   */\n      add\n        /* \"#utility.yul\":12765:12791   */\n      swap1\n      pop\n        /* \"#utility.yul\":12837:12846   */\n      dup2\n        /* \"#utility.yul\":12831:12835   */\n      dup2\n        /* \"#utility.yul\":12827:12847   */\n      sub\n        /* \"#utility.yul\":12823:12824   */\n      0x00\n        /* \"#utility.yul\":12812:12821   */\n      dup4\n        /* \"#utility.yul\":12808:12825   */\n      add\n        /* \"#utility.yul\":12801:12848   */\n      mstore\n        /* \"#utility.yul\":12865:12996   */\n      tag_436\n        /* \"#utility.yul\":12991:12995   */\n      dup2\n        /* \"#utility.yul\":12865:12996   */\n      tag_299\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":12857:12996   */\n      swap1\n      pop\n        /* \"#utility.yul\":12584:13003   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13009:13784   */\n    tag_133:\n        /* \"#utility.yul\":13242:13246   */\n      0x00\n        /* \"#utility.yul\":13280:13283   */\n      0xc0\n        /* \"#utility.yul\":13269:13278   */\n      dup3\n        /* \"#utility.yul\":13265:13284   */\n      add\n        /* \"#utility.yul\":13257:13284   */\n      swap1\n      pop\n        /* \"#utility.yul\":13294:13365   */\n      tag_438\n        /* \"#utility.yul\":13362:13363   */\n      0x00\n        /* \"#utility.yul\":13351:13360   */\n      dup4\n        /* \"#utility.yul\":13347:13364   */\n      add\n        /* \"#utility.yul\":13338:13344   */\n      dup10\n        /* \"#utility.yul\":13294:13365   */\n      tag_282\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13375:13447   */\n      tag_439\n        /* \"#utility.yul\":13443:13445   */\n      0x20\n        /* \"#utility.yul\":13432:13441   */\n      dup4\n        /* \"#utility.yul\":13428:13446   */\n      add\n        /* \"#utility.yul\":13419:13425   */\n      dup9\n        /* \"#utility.yul\":13375:13447   */\n      tag_285\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":13457:13529   */\n      tag_440\n        /* \"#utility.yul\":13525:13527   */\n      0x40\n        /* \"#utility.yul\":13514:13523   */\n      dup4\n        /* \"#utility.yul\":13510:13528   */\n      add\n        /* \"#utility.yul\":13501:13507   */\n      dup8\n        /* \"#utility.yul\":13457:13529   */\n      tag_285\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":13539:13611   */\n      tag_441\n        /* \"#utility.yul\":13607:13609   */\n      0x60\n        /* \"#utility.yul\":13596:13605   */\n      dup4\n        /* \"#utility.yul\":13592:13610   */\n      add\n        /* \"#utility.yul\":13583:13589   */\n      dup7\n        /* \"#utility.yul\":13539:13611   */\n      tag_278\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":13621:13694   */\n      tag_442\n        /* \"#utility.yul\":13689:13692   */\n      0x80\n        /* \"#utility.yul\":13678:13687   */\n      dup4\n        /* \"#utility.yul\":13674:13693   */\n      add\n        /* \"#utility.yul\":13665:13671   */\n      dup6\n        /* \"#utility.yul\":13621:13694   */\n      tag_278\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":13704:13777   */\n      tag_443\n        /* \"#utility.yul\":13772:13775   */\n      0xa0\n        /* \"#utility.yul\":13761:13770   */\n      dup4\n        /* \"#utility.yul\":13757:13776   */\n      add\n        /* \"#utility.yul\":13748:13754   */\n      dup5\n        /* \"#utility.yul\":13704:13777   */\n      tag_278\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":13009:13784   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13790:13970   */\n    tag_300:\n        /* \"#utility.yul\":13930:13962   */\n      0x45524332305065726d69743a20696e76616c6964207369676e61747572650000\n        /* \"#utility.yul\":13926:13927   */\n      0x00\n        /* \"#utility.yul\":13918:13924   */\n      dup3\n        /* \"#utility.yul\":13914:13928   */\n      add\n        /* \"#utility.yul\":13907:13963   */\n      mstore\n        /* \"#utility.yul\":13790:13970   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13976:14342   */\n    tag_301:\n        /* \"#utility.yul\":14118:14121   */\n      0x00\n        /* \"#utility.yul\":14139:14206   */\n      tag_446\n        /* \"#utility.yul\":14203:14205   */\n      0x1e\n        /* \"#utility.yul\":14198:14201   */\n      dup4\n        /* \"#utility.yul\":14139:14206   */\n      tag_262\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":14132:14206   */\n      swap2\n      pop\n        /* \"#utility.yul\":14215:14308   */\n      tag_447\n        /* \"#utility.yul\":14304:14307   */\n      dup3\n        /* \"#utility.yul\":14215:14308   */\n      tag_300\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":14333:14335   */\n      0x20\n        /* \"#utility.yul\":14328:14331   */\n      dup3\n        /* \"#utility.yul\":14324:14336   */\n      add\n        /* \"#utility.yul\":14317:14336   */\n      swap1\n      pop\n        /* \"#utility.yul\":13976:14342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14348:14767   */\n    tag_140:\n        /* \"#utility.yul\":14514:14518   */\n      0x00\n        /* \"#utility.yul\":14552:14554   */\n      0x20\n        /* \"#utility.yul\":14541:14550   */\n      dup3\n        /* \"#utility.yul\":14537:14555   */\n      add\n        /* \"#utility.yul\":14529:14555   */\n      swap1\n      pop\n        /* \"#utility.yul\":14601:14610   */\n      dup2\n        /* \"#utility.yul\":14595:14599   */\n      dup2\n        /* \"#utility.yul\":14591:14611   */\n      sub\n        /* \"#utility.yul\":14587:14588   */\n      0x00\n        /* \"#utility.yul\":14576:14585   */\n      dup4\n        /* \"#utility.yul\":14572:14589   */\n      add\n        /* \"#utility.yul\":14565:14612   */\n      mstore\n        /* \"#utility.yul\":14629:14760   */\n      tag_449\n        /* \"#utility.yul\":14755:14759   */\n      dup2\n        /* \"#utility.yul\":14629:14760   */\n      tag_301\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":14621:14760   */\n      swap1\n      pop\n        /* \"#utility.yul\":14348:14767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14773:15215   */\n    tag_152:\n        /* \"#utility.yul\":14922:14926   */\n      0x00\n        /* \"#utility.yul\":14960:14962   */\n      0x60\n        /* \"#utility.yul\":14949:14958   */\n      dup3\n        /* \"#utility.yul\":14945:14963   */\n      add\n        /* \"#utility.yul\":14937:14963   */\n      swap1\n      pop\n        /* \"#utility.yul\":14973:15044   */\n      tag_451\n        /* \"#utility.yul\":15041:15042   */\n      0x00\n        /* \"#utility.yul\":15030:15039   */\n      dup4\n        /* \"#utility.yul\":15026:15043   */\n      add\n        /* \"#utility.yul\":15017:15023   */\n      dup7\n        /* \"#utility.yul\":14973:15044   */\n      tag_285\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":15054:15126   */\n      tag_452\n        /* \"#utility.yul\":15122:15124   */\n      0x20\n        /* \"#utility.yul\":15111:15120   */\n      dup4\n        /* \"#utility.yul\":15107:15125   */\n      add\n        /* \"#utility.yul\":15098:15104   */\n      dup6\n        /* \"#utility.yul\":15054:15126   */\n      tag_278\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":15136:15208   */\n      tag_453\n        /* \"#utility.yul\":15204:15206   */\n      0x40\n        /* \"#utility.yul\":15193:15202   */\n      dup4\n        /* \"#utility.yul\":15189:15207   */\n      add\n        /* \"#utility.yul\":15180:15186   */\n      dup5\n        /* \"#utility.yul\":15136:15208   */\n      tag_278\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":14773:15215   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15221:15443   */\n    tag_157:\n        /* \"#utility.yul\":15314:15318   */\n      0x00\n        /* \"#utility.yul\":15352:15354   */\n      0x20\n        /* \"#utility.yul\":15341:15350   */\n      dup3\n        /* \"#utility.yul\":15337:15355   */\n      add\n        /* \"#utility.yul\":15329:15355   */\n      swap1\n      pop\n        /* \"#utility.yul\":15365:15436   */\n      tag_455\n        /* \"#utility.yul\":15433:15434   */\n      0x00\n        /* \"#utility.yul\":15422:15431   */\n      dup4\n        /* \"#utility.yul\":15418:15435   */\n      add\n        /* \"#utility.yul\":15409:15415   */\n      dup5\n        /* \"#utility.yul\":15365:15436   */\n      tag_285\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":15221:15443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15449:15629   */\n    tag_302:\n        /* \"#utility.yul\":15497:15574   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15494:15495   */\n      0x00\n        /* \"#utility.yul\":15487:15575   */\n      mstore\n        /* \"#utility.yul\":15594:15598   */\n      0x11\n        /* \"#utility.yul\":15591:15592   */\n      0x04\n        /* \"#utility.yul\":15584:15599   */\n      mstore\n        /* \"#utility.yul\":15618:15622   */\n      0x24\n        /* \"#utility.yul\":15615:15616   */\n      0x00\n        /* \"#utility.yul\":15608:15623   */\n      revert\n        /* \"#utility.yul\":15635:15826   */\n    tag_179:\n        /* \"#utility.yul\":15675:15678   */\n      0x00\n        /* \"#utility.yul\":15694:15714   */\n      tag_458\n        /* \"#utility.yul\":15712:15713   */\n      dup3\n        /* \"#utility.yul\":15694:15714   */\n      tag_273\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":15689:15714   */\n      swap2\n      pop\n        /* \"#utility.yul\":15728:15748   */\n      tag_459\n        /* \"#utility.yul\":15746:15747   */\n      dup4\n        /* \"#utility.yul\":15728:15748   */\n      tag_273\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":15723:15748   */\n      swap3\n      pop\n        /* \"#utility.yul\":15771:15772   */\n      dup3\n        /* \"#utility.yul\":15768:15769   */\n      dup3\n        /* \"#utility.yul\":15764:15773   */\n      add\n        /* \"#utility.yul\":15757:15773   */\n      swap1\n      pop\n        /* \"#utility.yul\":15792:15795   */\n      dup1\n        /* \"#utility.yul\":15789:15790   */\n      dup3\n        /* \"#utility.yul\":15786:15796   */\n      gt\n        /* \"#utility.yul\":15783:15819   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":15799:15817   */\n      tag_461\n      tag_302\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":15783:15819   */\n    tag_460:\n        /* \"#utility.yul\":15635:15826   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15832:16496   */\n    tag_207:\n        /* \"#utility.yul\":16037:16041   */\n      0x00\n        /* \"#utility.yul\":16075:16078   */\n      0xa0\n        /* \"#utility.yul\":16064:16073   */\n      dup3\n        /* \"#utility.yul\":16060:16079   */\n      add\n        /* \"#utility.yul\":16052:16079   */\n      swap1\n      pop\n        /* \"#utility.yul\":16089:16160   */\n      tag_463\n        /* \"#utility.yul\":16157:16158   */\n      0x00\n        /* \"#utility.yul\":16146:16155   */\n      dup4\n        /* \"#utility.yul\":16142:16159   */\n      add\n        /* \"#utility.yul\":16133:16139   */\n      dup9\n        /* \"#utility.yul\":16089:16160   */\n      tag_282\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":16170:16242   */\n      tag_464\n        /* \"#utility.yul\":16238:16240   */\n      0x20\n        /* \"#utility.yul\":16227:16236   */\n      dup4\n        /* \"#utility.yul\":16223:16241   */\n      add\n        /* \"#utility.yul\":16214:16220   */\n      dup8\n        /* \"#utility.yul\":16170:16242   */\n      tag_282\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":16252:16324   */\n      tag_465\n        /* \"#utility.yul\":16320:16322   */\n      0x40\n        /* \"#utility.yul\":16309:16318   */\n      dup4\n        /* \"#utility.yul\":16305:16323   */\n      add\n        /* \"#utility.yul\":16296:16302   */\n      dup7\n        /* \"#utility.yul\":16252:16324   */\n      tag_282\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":16334:16406   */\n      tag_466\n        /* \"#utility.yul\":16402:16404   */\n      0x60\n        /* \"#utility.yul\":16391:16400   */\n      dup4\n        /* \"#utility.yul\":16387:16405   */\n      add\n        /* \"#utility.yul\":16378:16384   */\n      dup6\n        /* \"#utility.yul\":16334:16406   */\n      tag_278\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":16416:16489   */\n      tag_467\n        /* \"#utility.yul\":16484:16487   */\n      0x80\n        /* \"#utility.yul\":16473:16482   */\n      dup4\n        /* \"#utility.yul\":16469:16488   */\n      add\n        /* \"#utility.yul\":16460:16466   */\n      dup5\n        /* \"#utility.yul\":16416:16489   */\n      tag_285\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":15832:16496   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16502:17047   */\n    tag_222:\n        /* \"#utility.yul\":16675:16679   */\n      0x00\n        /* \"#utility.yul\":16713:16716   */\n      0x80\n        /* \"#utility.yul\":16702:16711   */\n      dup3\n        /* \"#utility.yul\":16698:16717   */\n      add\n        /* \"#utility.yul\":16690:16717   */\n      swap1\n      pop\n        /* \"#utility.yul\":16727:16798   */\n      tag_469\n        /* \"#utility.yul\":16795:16796   */\n      0x00\n        /* \"#utility.yul\":16784:16793   */\n      dup4\n        /* \"#utility.yul\":16780:16797   */\n      add\n        /* \"#utility.yul\":16771:16777   */\n      dup8\n        /* \"#utility.yul\":16727:16798   */\n      tag_282\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":16808:16876   */\n      tag_470\n        /* \"#utility.yul\":16872:16874   */\n      0x20\n        /* \"#utility.yul\":16861:16870   */\n      dup4\n        /* \"#utility.yul\":16857:16875   */\n      add\n        /* \"#utility.yul\":16848:16854   */\n      dup7\n        /* \"#utility.yul\":16808:16876   */\n      tag_280\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":16886:16958   */\n      tag_471\n        /* \"#utility.yul\":16954:16956   */\n      0x40\n        /* \"#utility.yul\":16943:16952   */\n      dup4\n        /* \"#utility.yul\":16939:16957   */\n      add\n        /* \"#utility.yul\":16930:16936   */\n      dup6\n        /* \"#utility.yul\":16886:16958   */\n      tag_282\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":16968:17040   */\n      tag_472\n        /* \"#utility.yul\":17036:17038   */\n      0x60\n        /* \"#utility.yul\":17025:17034   */\n      dup4\n        /* \"#utility.yul\":17021:17039   */\n      add\n        /* \"#utility.yul\":17012:17018   */\n      dup5\n        /* \"#utility.yul\":16968:17040   */\n      tag_282\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":16502:17047   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17053:17233   */\n    tag_229:\n        /* \"#utility.yul\":17101:17178   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17098:17099   */\n      0x00\n        /* \"#utility.yul\":17091:17179   */\n      mstore\n        /* \"#utility.yul\":17198:17202   */\n      0x21\n        /* \"#utility.yul\":17195:17196   */\n      0x04\n        /* \"#utility.yul\":17188:17203   */\n      mstore\n        /* \"#utility.yul\":17222:17226   */\n      0x24\n        /* \"#utility.yul\":17219:17220   */\n      0x00\n        /* \"#utility.yul\":17212:17227   */\n      revert\n\n    auxdata: 0xa2646970667358221220121e0328fbb19f1c9562b8215af2f13afe49012b95f6e3a4b9009b03791d430564736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1837": {
									"entryPoint": null,
									"id": 1837,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3266": {
									"entryPoint": null,
									"id": 3266,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_1884": {
									"entryPoint": 395,
									"id": 1884,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStringSlot_1114": {
									"entryPoint": 586,
									"id": 1114,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_968": {
									"entryPoint": 318,
									"id": 968,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_870": {
									"entryPoint": 485,
									"id": 870,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 818,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 1790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 1883,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_memory_ptr": {
									"entryPoint": 2078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1437,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 1781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 2113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 804,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_memoryt_bytes32": {
									"entryPoint": 2093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 612,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 608,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1194,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1372,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11689:15",
										"nodeType": "YulBlock",
										"src": "0:11689:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "423:28:15",
													"nodeType": "YulBlock",
													"src": "423:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:15",
																		"nodeType": "YulLiteral",
																		"src": "440:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:15",
																		"nodeType": "YulLiteral",
																		"src": "443:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:15"
																},
																"nativeSrc": "433:12:15",
																"nodeType": "YulFunctionCall",
																"src": "433:12:15"
															},
															"nativeSrc": "433:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:15"
											},
											{
												"body": {
													"nativeSrc": "546:28:15",
													"nodeType": "YulBlock",
													"src": "546:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:15",
																		"nodeType": "YulLiteral",
																		"src": "563:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:15",
																		"nodeType": "YulLiteral",
																		"src": "566:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:15"
																},
																"nativeSrc": "556:12:15",
																"nodeType": "YulFunctionCall",
																"src": "556:12:15"
															},
															"nativeSrc": "556:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:15"
											},
											{
												"body": {
													"nativeSrc": "628:54:15",
													"nodeType": "YulBlock",
													"src": "628:54:15",
													"statements": [
														{
															"nativeSrc": "638:38:15",
															"nodeType": "YulAssignment",
															"src": "638:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:15",
																				"nodeType": "YulLiteral",
																				"src": "663:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:15"
																		},
																		"nativeSrc": "652:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:15",
																				"nodeType": "YulLiteral",
																				"src": "672:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:15"
																		},
																		"nativeSrc": "668:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:15"
																},
																"nativeSrc": "648:28:15",
																"nodeType": "YulFunctionCall",
																"src": "648:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:15",
														"nodeType": "YulTypedName",
														"src": "611:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:15",
														"nodeType": "YulTypedName",
														"src": "621:6:15",
														"type": ""
													}
												],
												"src": "580:102:15"
											},
											{
												"body": {
													"nativeSrc": "716:152:15",
													"nodeType": "YulBlock",
													"src": "716:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:15",
																		"nodeType": "YulLiteral",
																		"src": "733:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:15",
																		"nodeType": "YulLiteral",
																		"src": "736:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:15"
																},
																"nativeSrc": "726:88:15",
																"nodeType": "YulFunctionCall",
																"src": "726:88:15"
															},
															"nativeSrc": "726:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:15",
																		"nodeType": "YulLiteral",
																		"src": "830:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:15",
																		"nodeType": "YulLiteral",
																		"src": "833:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:15"
																},
																"nativeSrc": "823:15:15",
																"nodeType": "YulFunctionCall",
																"src": "823:15:15"
															},
															"nativeSrc": "823:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:15",
																		"nodeType": "YulLiteral",
																		"src": "854:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:15",
																		"nodeType": "YulLiteral",
																		"src": "857:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:15"
																},
																"nativeSrc": "847:15:15",
																"nodeType": "YulFunctionCall",
																"src": "847:15:15"
															},
															"nativeSrc": "847:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:15"
											},
											{
												"body": {
													"nativeSrc": "917:238:15",
													"nodeType": "YulBlock",
													"src": "917:238:15",
													"statements": [
														{
															"nativeSrc": "927:58:15",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:15"
																		},
																		"nativeSrc": "957:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:15"
																},
																"nativeSrc": "945:40:15",
																"nodeType": "YulFunctionCall",
																"src": "945:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:15",
																	"nodeType": "YulTypedName",
																	"src": "931:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:15",
																"nodeType": "YulBlock",
																"src": "1096:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:15"
																			},
																			"nativeSrc": "1098:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:15"
																		},
																		"nativeSrc": "1098:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:15",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:15"
																		},
																		"nativeSrc": "1036:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:15"
																		},
																		"nativeSrc": "1072:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:15"
																},
																"nativeSrc": "1033:62:15",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:15"
															},
															"nativeSrc": "1030:88:15",
															"nodeType": "YulIf",
															"src": "1030:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:15"
																},
																"nativeSrc": "1127:22:15",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:15"
															},
															"nativeSrc": "1127:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:15",
														"nodeType": "YulTypedName",
														"src": "903:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:15",
														"nodeType": "YulTypedName",
														"src": "911:4:15",
														"type": ""
													}
												],
												"src": "874:281:15"
											},
											{
												"body": {
													"nativeSrc": "1202:88:15",
													"nodeType": "YulBlock",
													"src": "1202:88:15",
													"statements": [
														{
															"nativeSrc": "1212:30:15",
															"nodeType": "YulAssignment",
															"src": "1212:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:15"
																},
																"nativeSrc": "1222:20:15",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:15"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:15",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:15"
																},
																"nativeSrc": "1251:33:15",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:15"
															},
															"nativeSrc": "1251:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:15",
														"nodeType": "YulTypedName",
														"src": "1186:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:15",
														"nodeType": "YulTypedName",
														"src": "1195:6:15",
														"type": ""
													}
												],
												"src": "1161:129:15"
											},
											{
												"body": {
													"nativeSrc": "1363:241:15",
													"nodeType": "YulBlock",
													"src": "1363:241:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:15",
																"nodeType": "YulBlock",
																"src": "1468:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:15"
																			},
																			"nativeSrc": "1470:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:15"
																		},
																		"nativeSrc": "1470:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:15",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:15"
																},
																"nativeSrc": "1437:30:15",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:15"
															},
															"nativeSrc": "1434:56:15",
															"nodeType": "YulIf",
															"src": "1434:56:15"
														},
														{
															"nativeSrc": "1500:37:15",
															"nodeType": "YulAssignment",
															"src": "1500:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:15",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:15"
																},
																"nativeSrc": "1508:29:15",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:15"
																}
															]
														},
														{
															"nativeSrc": "1574:23:15",
															"nodeType": "YulAssignment",
															"src": "1574:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:15"
																},
																"nativeSrc": "1582:15:15",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:15",
														"nodeType": "YulTypedName",
														"src": "1347:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:15",
														"nodeType": "YulTypedName",
														"src": "1358:4:15",
														"type": ""
													}
												],
												"src": "1296:308:15"
											},
											{
												"body": {
													"nativeSrc": "1672:77:15",
													"nodeType": "YulBlock",
													"src": "1672:77:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:15"
																},
																"nativeSrc": "1683:23:15",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:15"
															},
															"nativeSrc": "1683:23:15",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:15"
																		},
																		"nativeSrc": "1722:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:15"
																},
																"nativeSrc": "1715:27:15",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:15"
															},
															"nativeSrc": "1715:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:15",
														"nodeType": "YulTypedName",
														"src": "1654:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:15",
														"nodeType": "YulTypedName",
														"src": "1659:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:15",
														"nodeType": "YulTypedName",
														"src": "1664:6:15",
														"type": ""
													}
												],
												"src": "1610:139:15"
											},
											{
												"body": {
													"nativeSrc": "1850:339:15",
													"nodeType": "YulBlock",
													"src": "1850:339:15",
													"statements": [
														{
															"nativeSrc": "1860:75:15",
															"nodeType": "YulAssignment",
															"src": "1860:75:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:15",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:15"
																		},
																		"nativeSrc": "1885:49:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:15"
																},
																"nativeSrc": "1869:66:15",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:15"
																},
																"nativeSrc": "1944:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:15"
															},
															"nativeSrc": "1944:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:15"
														},
														{
															"nativeSrc": "1974:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:15"
																},
																"nativeSrc": "1985:16:15",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:15",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:15",
																"nodeType": "YulBlock",
																"src": "2039:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:15"
																			},
																			"nativeSrc": "2041:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:15"
																		},
																		"nativeSrc": "2041:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:15"
																		},
																		"nativeSrc": "2016:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:15"
																},
																"nativeSrc": "2013:25:15",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:15"
															},
															"nativeSrc": "2010:112:15",
															"nodeType": "YulIf",
															"src": "2010:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:15"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:15"
																},
																"nativeSrc": "2131:52:15",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:15"
															},
															"nativeSrc": "2131:52:15",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:15",
														"nodeType": "YulTypedName",
														"src": "1823:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:15",
														"nodeType": "YulTypedName",
														"src": "1828:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:15",
														"nodeType": "YulTypedName",
														"src": "1836:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:15",
														"nodeType": "YulTypedName",
														"src": "1844:5:15",
														"type": ""
													}
												],
												"src": "1755:434:15"
											},
											{
												"body": {
													"nativeSrc": "2282:282:15",
													"nodeType": "YulBlock",
													"src": "2282:282:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:15",
																"nodeType": "YulBlock",
																"src": "2331:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:15"
																			},
																			"nativeSrc": "2333:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:15"
																		},
																		"nativeSrc": "2333:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:15",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:15"
																				},
																				"nativeSrc": "2306:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:15"
																		},
																		"nativeSrc": "2302:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:15"
																},
																"nativeSrc": "2295:35:15",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:15"
															},
															"nativeSrc": "2292:122:15",
															"nodeType": "YulIf",
															"src": "2292:122:15"
														},
														{
															"nativeSrc": "2423:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:15"
																},
																"nativeSrc": "2437:13:15",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:15",
															"nodeType": "YulAssignment",
															"src": "2459:99:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:15",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:15"
																		},
																		"nativeSrc": "2527:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:15"
																},
																"nativeSrc": "2468:90:15",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:15",
														"nodeType": "YulTypedName",
														"src": "2260:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:15",
														"nodeType": "YulTypedName",
														"src": "2268:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:15",
														"nodeType": "YulTypedName",
														"src": "2276:5:15",
														"type": ""
													}
												],
												"src": "2209:355:15"
											},
											{
												"body": {
													"nativeSrc": "2684:739:15",
													"nodeType": "YulBlock",
													"src": "2684:739:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2730:83:15",
																"nodeType": "YulBlock",
																"src": "2730:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2732:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2732:77:15"
																			},
																			"nativeSrc": "2732:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2732:79:15"
																		},
																		"nativeSrc": "2732:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2705:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2705:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2714:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2714:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2701:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2701:3:15"
																		},
																		"nativeSrc": "2701:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2701:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2726:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2726:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2697:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2697:3:15"
																},
																"nativeSrc": "2697:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2697:32:15"
															},
															"nativeSrc": "2694:119:15",
															"nodeType": "YulIf",
															"src": "2694:119:15"
														},
														{
															"nativeSrc": "2823:291:15",
															"nodeType": "YulBlock",
															"src": "2823:291:15",
															"statements": [
																{
																	"nativeSrc": "2838:38:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2838:38:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2862:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "2862:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2873:1:15",
																						"nodeType": "YulLiteral",
																						"src": "2873:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2858:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2858:3:15"
																				},
																				"nativeSrc": "2858:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2858:17:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2852:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "2852:5:15"
																		},
																		"nativeSrc": "2852:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2852:24:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2842:6:15",
																			"nodeType": "YulTypedName",
																			"src": "2842:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2923:83:15",
																		"nodeType": "YulBlock",
																		"src": "2923:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2925:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "2925:77:15"
																					},
																					"nativeSrc": "2925:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2925:79:15"
																				},
																				"nativeSrc": "2925:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "2925:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2895:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2895:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2903:18:15",
																				"nodeType": "YulLiteral",
																				"src": "2903:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2892:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "2892:2:15"
																		},
																		"nativeSrc": "2892:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:30:15"
																	},
																	"nativeSrc": "2889:117:15",
																	"nodeType": "YulIf",
																	"src": "2889:117:15"
																},
																{
																	"nativeSrc": "3020:84:15",
																	"nodeType": "YulAssignment",
																	"src": "3020:84:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3076:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3076:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3087:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3087:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3072:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3072:3:15"
																				},
																				"nativeSrc": "3072:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3072:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3096:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3096:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3030:41:15",
																			"nodeType": "YulIdentifier",
																			"src": "3030:41:15"
																		},
																		"nativeSrc": "3030:74:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3030:74:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3020:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3020:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3124:292:15",
															"nodeType": "YulBlock",
															"src": "3124:292:15",
															"statements": [
																{
																	"nativeSrc": "3139:39:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3139:39:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3163:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3163:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3174:2:15",
																						"nodeType": "YulLiteral",
																						"src": "3174:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3159:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3159:3:15"
																				},
																				"nativeSrc": "3159:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3159:18:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3153:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "3153:5:15"
																		},
																		"nativeSrc": "3153:25:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3153:25:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3143:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3143:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3225:83:15",
																		"nodeType": "YulBlock",
																		"src": "3225:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3227:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "3227:77:15"
																					},
																					"nativeSrc": "3227:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "3227:79:15"
																				},
																				"nativeSrc": "3227:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "3227:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3197:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3197:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:18:15",
																				"nodeType": "YulLiteral",
																				"src": "3205:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3194:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3194:2:15"
																		},
																		"nativeSrc": "3194:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3194:30:15"
																	},
																	"nativeSrc": "3191:117:15",
																	"nodeType": "YulIf",
																	"src": "3191:117:15"
																},
																{
																	"nativeSrc": "3322:84:15",
																	"nodeType": "YulAssignment",
																	"src": "3322:84:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3378:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3378:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3389:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3389:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3374:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3374:3:15"
																				},
																				"nativeSrc": "3374:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3374:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3398:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3398:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3332:41:15",
																			"nodeType": "YulIdentifier",
																			"src": "3332:41:15"
																		},
																		"nativeSrc": "3332:74:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3332:74:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3322:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3322:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2570:853:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2646:9:15",
														"nodeType": "YulTypedName",
														"src": "2646:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2657:7:15",
														"nodeType": "YulTypedName",
														"src": "2657:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2669:6:15",
														"nodeType": "YulTypedName",
														"src": "2669:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2677:6:15",
														"nodeType": "YulTypedName",
														"src": "2677:6:15",
														"type": ""
													}
												],
												"src": "2570:853:15"
											},
											{
												"body": {
													"nativeSrc": "3488:40:15",
													"nodeType": "YulBlock",
													"src": "3488:40:15",
													"statements": [
														{
															"nativeSrc": "3499:22:15",
															"nodeType": "YulAssignment",
															"src": "3499:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3515:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3515:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3509:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3509:5:15"
																},
																"nativeSrc": "3509:12:15",
																"nodeType": "YulFunctionCall",
																"src": "3509:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3499:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3429:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:15",
														"nodeType": "YulTypedName",
														"src": "3471:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3481:6:15",
														"nodeType": "YulTypedName",
														"src": "3481:6:15",
														"type": ""
													}
												],
												"src": "3429:99:15"
											},
											{
												"body": {
													"nativeSrc": "3562:152:15",
													"nodeType": "YulBlock",
													"src": "3562:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3579:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3579:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3582:77:15",
																		"nodeType": "YulLiteral",
																		"src": "3582:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3572:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:15"
																},
																"nativeSrc": "3572:88:15",
																"nodeType": "YulFunctionCall",
																"src": "3572:88:15"
															},
															"nativeSrc": "3572:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "3572:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3676:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3676:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3679:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3679:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3669:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3669:6:15"
																},
																"nativeSrc": "3669:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3669:15:15"
															},
															"nativeSrc": "3669:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "3669:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3700:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3700:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3703:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3703:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3693:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3693:6:15"
																},
																"nativeSrc": "3693:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3693:15:15"
															},
															"nativeSrc": "3693:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "3693:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3534:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "3534:180:15"
											},
											{
												"body": {
													"nativeSrc": "3771:269:15",
													"nodeType": "YulBlock",
													"src": "3771:269:15",
													"statements": [
														{
															"nativeSrc": "3781:22:15",
															"nodeType": "YulAssignment",
															"src": "3781:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3795:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3795:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3801:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3801:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3791:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3791:3:15"
																},
																"nativeSrc": "3791:12:15",
																"nodeType": "YulFunctionCall",
																"src": "3791:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3781:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:15"
																}
															]
														},
														{
															"nativeSrc": "3812:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3812:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3842:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3842:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3838:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:15"
																},
																"nativeSrc": "3838:12:15",
																"nodeType": "YulFunctionCall",
																"src": "3838:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3816:18:15",
																	"nodeType": "YulTypedName",
																	"src": "3816:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3889:51:15",
																"nodeType": "YulBlock",
																"src": "3889:51:15",
																"statements": [
																	{
																		"nativeSrc": "3903:27:15",
																		"nodeType": "YulAssignment",
																		"src": "3903:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3917:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "3917:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3925:4:15",
																					"nodeType": "YulLiteral",
																					"src": "3925:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3913:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3913:3:15"
																			},
																			"nativeSrc": "3913:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3913:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3903:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3903:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3869:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "3869:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3862:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3862:6:15"
																},
																"nativeSrc": "3862:26:15",
																"nodeType": "YulFunctionCall",
																"src": "3862:26:15"
															},
															"nativeSrc": "3859:81:15",
															"nodeType": "YulIf",
															"src": "3859:81:15"
														},
														{
															"body": {
																"nativeSrc": "3992:42:15",
																"nodeType": "YulBlock",
																"src": "3992:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4006:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "4006:16:15"
																			},
																			"nativeSrc": "4006:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4006:18:15"
																		},
																		"nativeSrc": "4006:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4006:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3956:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "3956:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3979:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3979:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3987:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3976:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3976:2:15"
																		},
																		"nativeSrc": "3976:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3976:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3953:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3953:2:15"
																},
																"nativeSrc": "3953:38:15",
																"nodeType": "YulFunctionCall",
																"src": "3953:38:15"
															},
															"nativeSrc": "3950:84:15",
															"nodeType": "YulIf",
															"src": "3950:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3720:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3755:4:15",
														"nodeType": "YulTypedName",
														"src": "3755:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3764:6:15",
														"nodeType": "YulTypedName",
														"src": "3764:6:15",
														"type": ""
													}
												],
												"src": "3720:320:15"
											},
											{
												"body": {
													"nativeSrc": "4100:87:15",
													"nodeType": "YulBlock",
													"src": "4100:87:15",
													"statements": [
														{
															"nativeSrc": "4110:11:15",
															"nodeType": "YulAssignment",
															"src": "4110:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "4118:3:15",
																"nodeType": "YulIdentifier",
																"src": "4118:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4110:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4110:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4138:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4138:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4141:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4141:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4131:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4131:6:15"
																},
																"nativeSrc": "4131:14:15",
																"nodeType": "YulFunctionCall",
																"src": "4131:14:15"
															},
															"nativeSrc": "4131:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "4131:14:15"
														},
														{
															"nativeSrc": "4154:26:15",
															"nodeType": "YulAssignment",
															"src": "4154:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4172:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4172:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4175:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4175:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4162:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "4162:9:15"
																},
																"nativeSrc": "4162:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4162:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4154:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4154:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4046:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4087:3:15",
														"nodeType": "YulTypedName",
														"src": "4087:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4095:4:15",
														"nodeType": "YulTypedName",
														"src": "4095:4:15",
														"type": ""
													}
												],
												"src": "4046:141:15"
											},
											{
												"body": {
													"nativeSrc": "4237:49:15",
													"nodeType": "YulBlock",
													"src": "4237:49:15",
													"statements": [
														{
															"nativeSrc": "4247:33:15",
															"nodeType": "YulAssignment",
															"src": "4247:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4265:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4265:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4272:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4272:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4261:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4261:3:15"
																		},
																		"nativeSrc": "4261:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4261:14:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4277:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4277:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4257:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4257:3:15"
																},
																"nativeSrc": "4257:23:15",
																"nodeType": "YulFunctionCall",
																"src": "4257:23:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4247:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:15"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4193:93:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4220:5:15",
														"nodeType": "YulTypedName",
														"src": "4220:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4230:6:15",
														"nodeType": "YulTypedName",
														"src": "4230:6:15",
														"type": ""
													}
												],
												"src": "4193:93:15"
											},
											{
												"body": {
													"nativeSrc": "4345:54:15",
													"nodeType": "YulBlock",
													"src": "4345:54:15",
													"statements": [
														{
															"nativeSrc": "4355:37:15",
															"nodeType": "YulAssignment",
															"src": "4355:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4380:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4380:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4386:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4386:5:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4376:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4376:3:15"
																},
																"nativeSrc": "4376:16:15",
																"nodeType": "YulFunctionCall",
																"src": "4376:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4355:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "4355:8:15"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4292:107:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4320:4:15",
														"nodeType": "YulTypedName",
														"src": "4320:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4326:5:15",
														"nodeType": "YulTypedName",
														"src": "4326:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4336:8:15",
														"nodeType": "YulTypedName",
														"src": "4336:8:15",
														"type": ""
													}
												],
												"src": "4292:107:15"
											},
											{
												"body": {
													"nativeSrc": "4481:317:15",
													"nodeType": "YulBlock",
													"src": "4481:317:15",
													"statements": [
														{
															"nativeSrc": "4491:35:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4491:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4512:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "4512:10:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4524:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4524:1:15",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4508:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4508:3:15"
																},
																"nativeSrc": "4508:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4508:18:15"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4495:9:15",
																	"nodeType": "YulTypedName",
																	"src": "4495:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4535:109:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4535:109:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4566:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4566:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4577:66:15",
																		"nodeType": "YulLiteral",
																		"src": "4577:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4547:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "4547:18:15"
																},
																"nativeSrc": "4547:97:15",
																"nodeType": "YulFunctionCall",
																"src": "4547:97:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4539:4:15",
																	"nodeType": "YulTypedName",
																	"src": "4539:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4653:51:15",
															"nodeType": "YulAssignment",
															"src": "4653:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4684:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4684:9:15"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4695:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "4695:8:15"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4665:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "4665:18:15"
																},
																"nativeSrc": "4665:39:15",
																"nodeType": "YulFunctionCall",
																"src": "4665:39:15"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4653:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "4653:8:15"
																}
															]
														},
														{
															"nativeSrc": "4713:30:15",
															"nodeType": "YulAssignment",
															"src": "4713:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4726:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4726:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4737:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "4737:4:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4733:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4733:3:15"
																		},
																		"nativeSrc": "4733:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4733:9:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4722:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4722:3:15"
																},
																"nativeSrc": "4722:21:15",
																"nodeType": "YulFunctionCall",
																"src": "4722:21:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4713:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4713:5:15"
																}
															]
														},
														{
															"nativeSrc": "4752:40:15",
															"nodeType": "YulAssignment",
															"src": "4752:40:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4765:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4765:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4776:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "4776:8:15"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4786:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "4786:4:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4772:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:15"
																		},
																		"nativeSrc": "4772:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4772:19:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:15"
																},
																"nativeSrc": "4762:30:15",
																"nodeType": "YulFunctionCall",
																"src": "4762:30:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4752:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4752:6:15"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4405:393:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4442:5:15",
														"nodeType": "YulTypedName",
														"src": "4442:5:15",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4449:10:15",
														"nodeType": "YulTypedName",
														"src": "4449:10:15",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4461:8:15",
														"nodeType": "YulTypedName",
														"src": "4461:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4474:6:15",
														"nodeType": "YulTypedName",
														"src": "4474:6:15",
														"type": ""
													}
												],
												"src": "4405:393:15"
											},
											{
												"body": {
													"nativeSrc": "4849:32:15",
													"nodeType": "YulBlock",
													"src": "4849:32:15",
													"statements": [
														{
															"nativeSrc": "4859:16:15",
															"nodeType": "YulAssignment",
															"src": "4859:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "4870:5:15",
																"nodeType": "YulIdentifier",
																"src": "4870:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4859:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "4859:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4804:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4831:5:15",
														"nodeType": "YulTypedName",
														"src": "4831:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4841:7:15",
														"nodeType": "YulTypedName",
														"src": "4841:7:15",
														"type": ""
													}
												],
												"src": "4804:77:15"
											},
											{
												"body": {
													"nativeSrc": "4919:28:15",
													"nodeType": "YulBlock",
													"src": "4919:28:15",
													"statements": [
														{
															"nativeSrc": "4929:12:15",
															"nodeType": "YulAssignment",
															"src": "4929:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "4936:5:15",
																"nodeType": "YulIdentifier",
																"src": "4936:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4929:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4929:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4887:60:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4905:5:15",
														"nodeType": "YulTypedName",
														"src": "4905:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4915:3:15",
														"nodeType": "YulTypedName",
														"src": "4915:3:15",
														"type": ""
													}
												],
												"src": "4887:60:15"
											},
											{
												"body": {
													"nativeSrc": "5013:82:15",
													"nodeType": "YulBlock",
													"src": "5013:82:15",
													"statements": [
														{
															"nativeSrc": "5023:66:15",
															"nodeType": "YulAssignment",
															"src": "5023:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5081:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5081:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5063:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "5063:17:15"
																				},
																				"nativeSrc": "5063:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5063:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5054:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "5054:8:15"
																		},
																		"nativeSrc": "5054:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5054:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5036:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "5036:17:15"
																},
																"nativeSrc": "5036:53:15",
																"nodeType": "YulFunctionCall",
																"src": "5036:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5023:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "5023:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4953:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4993:5:15",
														"nodeType": "YulTypedName",
														"src": "4993:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5003:9:15",
														"nodeType": "YulTypedName",
														"src": "5003:9:15",
														"type": ""
													}
												],
												"src": "4953:142:15"
											},
											{
												"body": {
													"nativeSrc": "5148:28:15",
													"nodeType": "YulBlock",
													"src": "5148:28:15",
													"statements": [
														{
															"nativeSrc": "5158:12:15",
															"nodeType": "YulAssignment",
															"src": "5158:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "5165:5:15",
																"nodeType": "YulIdentifier",
																"src": "5165:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5158:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5158:3:15"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5101:75:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:15",
														"nodeType": "YulTypedName",
														"src": "5134:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5144:3:15",
														"nodeType": "YulTypedName",
														"src": "5144:3:15",
														"type": ""
													}
												],
												"src": "5101:75:15"
											},
											{
												"body": {
													"nativeSrc": "5258:193:15",
													"nodeType": "YulBlock",
													"src": "5258:193:15",
													"statements": [
														{
															"nativeSrc": "5268:63:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5268:63:15",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5323:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "5323:7:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5292:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "5292:30:15"
																},
																"nativeSrc": "5292:39:15",
																"nodeType": "YulFunctionCall",
																"src": "5292:39:15"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5272:16:15",
																	"nodeType": "YulTypedName",
																	"src": "5272:16:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5347:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5347:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5387:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "5387:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5381:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "5381:5:15"
																				},
																				"nativeSrc": "5381:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5381:11:15"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5394:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5394:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5426:16:15",
																						"nodeType": "YulIdentifier",
																						"src": "5426:16:15"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5402:23:15",
																					"nodeType": "YulIdentifier",
																					"src": "5402:23:15"
																				},
																				"nativeSrc": "5402:41:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5402:41:15"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5353:27:15",
																			"nodeType": "YulIdentifier",
																			"src": "5353:27:15"
																		},
																		"nativeSrc": "5353:91:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5353:91:15"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5340:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:15"
																},
																"nativeSrc": "5340:105:15",
																"nodeType": "YulFunctionCall",
																"src": "5340:105:15"
															},
															"nativeSrc": "5340:105:15",
															"nodeType": "YulExpressionStatement",
															"src": "5340:105:15"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5182:269:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5235:4:15",
														"nodeType": "YulTypedName",
														"src": "5235:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5241:6:15",
														"nodeType": "YulTypedName",
														"src": "5241:6:15",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5249:7:15",
														"nodeType": "YulTypedName",
														"src": "5249:7:15",
														"type": ""
													}
												],
												"src": "5182:269:15"
											},
											{
												"body": {
													"nativeSrc": "5506:24:15",
													"nodeType": "YulBlock",
													"src": "5506:24:15",
													"statements": [
														{
															"nativeSrc": "5516:8:15",
															"nodeType": "YulAssignment",
															"src": "5516:8:15",
															"value": {
																"kind": "number",
																"nativeSrc": "5523:1:15",
																"nodeType": "YulLiteral",
																"src": "5523:1:15",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5516:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5516:3:15"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5457:73:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5502:3:15",
														"nodeType": "YulTypedName",
														"src": "5502:3:15",
														"type": ""
													}
												],
												"src": "5457:73:15"
											},
											{
												"body": {
													"nativeSrc": "5589:136:15",
													"nodeType": "YulBlock",
													"src": "5589:136:15",
													"statements": [
														{
															"nativeSrc": "5599:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5599:46:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5613:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "5613:30:15"
																},
																"nativeSrc": "5613:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5613:32:15"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5603:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5603:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5698:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5698:4:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5704:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5704:6:15"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5712:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5712:6:15"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5654:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "5654:43:15"
																},
																"nativeSrc": "5654:65:15",
																"nodeType": "YulFunctionCall",
																"src": "5654:65:15"
															},
															"nativeSrc": "5654:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "5654:65:15"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5536:189:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5575:4:15",
														"nodeType": "YulTypedName",
														"src": "5575:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5581:6:15",
														"nodeType": "YulTypedName",
														"src": "5581:6:15",
														"type": ""
													}
												],
												"src": "5536:189:15"
											},
											{
												"body": {
													"nativeSrc": "5781:136:15",
													"nodeType": "YulBlock",
													"src": "5781:136:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5848:63:15",
																"nodeType": "YulBlock",
																"src": "5848:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5892:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "5892:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5899:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5899:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5862:29:15",
																				"nodeType": "YulIdentifier",
																				"src": "5862:29:15"
																			},
																			"nativeSrc": "5862:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5862:39:15"
																		},
																		"nativeSrc": "5862:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5862:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5801:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5801:5:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5808:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5808:3:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5798:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5798:2:15"
																},
																"nativeSrc": "5798:14:15",
																"nodeType": "YulFunctionCall",
																"src": "5798:14:15"
															},
															"nativeSrc": "5791:120:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5813:26:15",
																"nodeType": "YulBlock",
																"src": "5813:26:15",
																"statements": [
																	{
																		"nativeSrc": "5815:22:15",
																		"nodeType": "YulAssignment",
																		"src": "5815:22:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5828:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "5828:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5835:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5835:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5824:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5824:3:15"
																			},
																			"nativeSrc": "5824:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5824:13:15"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5815:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5815:5:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5795:2:15",
																"nodeType": "YulBlock",
																"src": "5795:2:15",
																"statements": []
															},
															"src": "5791:120:15"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5731:186:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5769:5:15",
														"nodeType": "YulTypedName",
														"src": "5769:5:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5776:3:15",
														"nodeType": "YulTypedName",
														"src": "5776:3:15",
														"type": ""
													}
												],
												"src": "5731:186:15"
											},
											{
												"body": {
													"nativeSrc": "6002:464:15",
													"nodeType": "YulBlock",
													"src": "6002:464:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6028:431:15",
																"nodeType": "YulBlock",
																"src": "6028:431:15",
																"statements": [
																	{
																		"nativeSrc": "6042:54:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6042:54:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6090:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "6090:5:15"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6058:31:15",
																				"nodeType": "YulIdentifier",
																				"src": "6058:31:15"
																			},
																			"nativeSrc": "6058:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6058:38:15"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6046:8:15",
																				"nodeType": "YulTypedName",
																				"src": "6046:8:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6109:63:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6109:63:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6132:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "6132:8:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6160:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "6160:10:15"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6142:17:15",
																						"nodeType": "YulIdentifier",
																						"src": "6142:17:15"
																					},
																					"nativeSrc": "6142:29:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6142:29:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6128:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6128:3:15"
																			},
																			"nativeSrc": "6128:44:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6128:44:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6113:11:15",
																				"nodeType": "YulTypedName",
																				"src": "6113:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6329:27:15",
																			"nodeType": "YulBlock",
																			"src": "6329:27:15",
																			"statements": [
																				{
																					"nativeSrc": "6331:23:15",
																					"nodeType": "YulAssignment",
																					"src": "6331:23:15",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6346:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "6346:8:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6331:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "6331:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6313:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "6313:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6325:2:15",
																					"nodeType": "YulLiteral",
																					"src": "6325:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6310:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "6310:2:15"
																			},
																			"nativeSrc": "6310:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6310:18:15"
																		},
																		"nativeSrc": "6307:49:15",
																		"nodeType": "YulIf",
																		"src": "6307:49:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6398:11:15",
																					"nodeType": "YulIdentifier",
																					"src": "6398:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6415:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "6415:8:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6443:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "6443:3:15"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6425:17:15",
																								"nodeType": "YulIdentifier",
																								"src": "6425:17:15"
																							},
																							"nativeSrc": "6425:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "6425:22:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6411:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "6411:3:15"
																					},
																					"nativeSrc": "6411:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6411:37:15"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6369:28:15",
																				"nodeType": "YulIdentifier",
																				"src": "6369:28:15"
																			},
																			"nativeSrc": "6369:80:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6369:80:15"
																		},
																		"nativeSrc": "6369:80:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6369:80:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6019:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6019:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6024:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6024:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6016:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6016:2:15"
																},
																"nativeSrc": "6016:11:15",
																"nodeType": "YulFunctionCall",
																"src": "6016:11:15"
															},
															"nativeSrc": "6013:446:15",
															"nodeType": "YulIf",
															"src": "6013:446:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5923:543:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5978:5:15",
														"nodeType": "YulTypedName",
														"src": "5978:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5985:3:15",
														"nodeType": "YulTypedName",
														"src": "5985:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5990:10:15",
														"nodeType": "YulTypedName",
														"src": "5990:10:15",
														"type": ""
													}
												],
												"src": "5923:543:15"
											},
											{
												"body": {
													"nativeSrc": "6535:54:15",
													"nodeType": "YulBlock",
													"src": "6535:54:15",
													"statements": [
														{
															"nativeSrc": "6545:37:15",
															"nodeType": "YulAssignment",
															"src": "6545:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6570:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6570:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6576:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6576:5:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6566:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6566:3:15"
																},
																"nativeSrc": "6566:16:15",
																"nodeType": "YulFunctionCall",
																"src": "6566:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6545:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "6545:8:15"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6472:117:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6510:4:15",
														"nodeType": "YulTypedName",
														"src": "6510:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6516:5:15",
														"nodeType": "YulTypedName",
														"src": "6516:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6526:8:15",
														"nodeType": "YulTypedName",
														"src": "6526:8:15",
														"type": ""
													}
												],
												"src": "6472:117:15"
											},
											{
												"body": {
													"nativeSrc": "6646:118:15",
													"nodeType": "YulBlock",
													"src": "6646:118:15",
													"statements": [
														{
															"nativeSrc": "6656:68:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6656:68:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6705:1:15",
																						"nodeType": "YulLiteral",
																						"src": "6705:1:15",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6708:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "6708:5:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6701:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6701:3:15"
																				},
																				"nativeSrc": "6701:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6701:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6720:1:15",
																						"nodeType": "YulLiteral",
																						"src": "6720:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6716:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6716:3:15"
																				},
																				"nativeSrc": "6716:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6716:6:15"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6672:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "6672:28:15"
																		},
																		"nativeSrc": "6672:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:51:15"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6668:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6668:3:15"
																},
																"nativeSrc": "6668:56:15",
																"nodeType": "YulFunctionCall",
																"src": "6668:56:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6660:4:15",
																	"nodeType": "YulTypedName",
																	"src": "6660:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6733:25:15",
															"nodeType": "YulAssignment",
															"src": "6733:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6747:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6747:4:15"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6753:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6753:4:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6743:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6743:3:15"
																},
																"nativeSrc": "6743:15:15",
																"nodeType": "YulFunctionCall",
																"src": "6743:15:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6733:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6733:6:15"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6595:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6623:4:15",
														"nodeType": "YulTypedName",
														"src": "6623:4:15",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6629:5:15",
														"nodeType": "YulTypedName",
														"src": "6629:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6639:6:15",
														"nodeType": "YulTypedName",
														"src": "6639:6:15",
														"type": ""
													}
												],
												"src": "6595:169:15"
											},
											{
												"body": {
													"nativeSrc": "6850:214:15",
													"nodeType": "YulBlock",
													"src": "6850:214:15",
													"statements": [
														{
															"nativeSrc": "6983:37:15",
															"nodeType": "YulAssignment",
															"src": "6983:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7010:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7010:4:15"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7016:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7016:3:15"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6991:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "6991:18:15"
																},
																"nativeSrc": "6991:29:15",
																"nodeType": "YulFunctionCall",
																"src": "6991:29:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6983:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6983:4:15"
																}
															]
														},
														{
															"nativeSrc": "7029:29:15",
															"nodeType": "YulAssignment",
															"src": "7029:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7040:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7040:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7050:1:15",
																				"nodeType": "YulLiteral",
																				"src": "7050:1:15",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7053:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7053:3:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7046:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7046:3:15"
																		},
																		"nativeSrc": "7046:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7046:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7037:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:15"
																},
																"nativeSrc": "7037:21:15",
																"nodeType": "YulFunctionCall",
																"src": "7037:21:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7029:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7029:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6769:295:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6831:4:15",
														"nodeType": "YulTypedName",
														"src": "6831:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6837:3:15",
														"nodeType": "YulTypedName",
														"src": "6837:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6845:4:15",
														"nodeType": "YulTypedName",
														"src": "6845:4:15",
														"type": ""
													}
												],
												"src": "6769:295:15"
											},
											{
												"body": {
													"nativeSrc": "7161:1303:15",
													"nodeType": "YulBlock",
													"src": "7161:1303:15",
													"statements": [
														{
															"nativeSrc": "7172:51:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7172:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7219:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7186:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "7186:32:15"
																},
																"nativeSrc": "7186:37:15",
																"nodeType": "YulFunctionCall",
																"src": "7186:37:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7176:6:15",
																	"nodeType": "YulTypedName",
																	"src": "7176:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7308:22:15",
																"nodeType": "YulBlock",
																"src": "7308:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7310:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "7310:16:15"
																			},
																			"nativeSrc": "7310:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7310:18:15"
																		},
																		"nativeSrc": "7310:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7310:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7280:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7280:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7288:18:15",
																		"nodeType": "YulLiteral",
																		"src": "7288:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7277:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7277:2:15"
																},
																"nativeSrc": "7277:30:15",
																"nodeType": "YulFunctionCall",
																"src": "7277:30:15"
															},
															"nativeSrc": "7274:56:15",
															"nodeType": "YulIf",
															"src": "7274:56:15"
														},
														{
															"nativeSrc": "7340:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7340:52:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7386:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:15"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7380:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "7380:5:15"
																		},
																		"nativeSrc": "7380:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7380:11:15"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7354:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "7354:25:15"
																},
																"nativeSrc": "7354:38:15",
																"nodeType": "YulFunctionCall",
																"src": "7354:38:15"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7344:6:15",
																	"nodeType": "YulTypedName",
																	"src": "7344:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7485:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7485:4:15"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7491:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7491:6:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7499:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7499:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7439:45:15",
																	"nodeType": "YulIdentifier",
																	"src": "7439:45:15"
																},
																"nativeSrc": "7439:67:15",
																"nodeType": "YulFunctionCall",
																"src": "7439:67:15"
															},
															"nativeSrc": "7439:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "7439:67:15"
														},
														{
															"nativeSrc": "7516:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7516:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "7533:1:15",
																"nodeType": "YulLiteral",
																"src": "7533:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7520:9:15",
																	"nodeType": "YulTypedName",
																	"src": "7520:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7544:17:15",
															"nodeType": "YulAssignment",
															"src": "7544:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "7557:4:15",
																"nodeType": "YulLiteral",
																"src": "7557:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7544:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "7544:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7608:611:15",
																		"nodeType": "YulBlock",
																		"src": "7608:611:15",
																		"statements": [
																			{
																				"nativeSrc": "7622:37:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7622:37:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7641:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "7641:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7653:4:15",
																									"nodeType": "YulLiteral",
																									"src": "7653:4:15",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7649:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "7649:3:15"
																							},
																							"nativeSrc": "7649:9:15",
																							"nodeType": "YulFunctionCall",
																							"src": "7649:9:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7637:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "7637:3:15"
																					},
																					"nativeSrc": "7637:22:15",
																					"nodeType": "YulFunctionCall",
																					"src": "7637:22:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7626:7:15",
																						"nodeType": "YulTypedName",
																						"src": "7626:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7673:51:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7673:51:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7719:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "7719:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7687:31:15",
																						"nodeType": "YulIdentifier",
																						"src": "7687:31:15"
																					},
																					"nativeSrc": "7687:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "7687:37:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7677:6:15",
																						"nodeType": "YulTypedName",
																						"src": "7677:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7737:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7737:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7746:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7746:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7741:1:15",
																						"nodeType": "YulTypedName",
																						"src": "7741:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7805:163:15",
																					"nodeType": "YulBlock",
																					"src": "7805:163:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7830:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "7830:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7848:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "7848:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7853:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "7853:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7844:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "7844:3:15"
																												},
																												"nativeSrc": "7844:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "7844:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7838:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "7838:5:15"
																										},
																										"nativeSrc": "7838:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "7838:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7823:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "7823:6:15"
																								},
																								"nativeSrc": "7823:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "7823:42:15"
																							},
																							"nativeSrc": "7823:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "7823:42:15"
																						},
																						{
																							"nativeSrc": "7882:24:15",
																							"nodeType": "YulAssignment",
																							"src": "7882:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7896:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "7896:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7904:1:15",
																										"nodeType": "YulLiteral",
																										"src": "7904:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7892:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "7892:3:15"
																								},
																								"nativeSrc": "7892:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "7892:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7882:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "7882:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7923:31:15",
																							"nodeType": "YulAssignment",
																							"src": "7923:31:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7940:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "7940:9:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7951:2:15",
																										"nodeType": "YulLiteral",
																										"src": "7951:2:15",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7936:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "7936:3:15"
																								},
																								"nativeSrc": "7936:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "7936:18:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7923:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "7923:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7771:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "7771:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7774:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "7774:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7768:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "7768:2:15"
																					},
																					"nativeSrc": "7768:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "7768:14:15"
																				},
																				"nativeSrc": "7760:208:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7783:21:15",
																					"nodeType": "YulBlock",
																					"src": "7783:21:15",
																					"statements": [
																						{
																							"nativeSrc": "7785:17:15",
																							"nodeType": "YulAssignment",
																							"src": "7785:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7794:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "7794:1:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7797:4:15",
																										"nodeType": "YulLiteral",
																										"src": "7797:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7790:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "7790:3:15"
																								},
																								"nativeSrc": "7790:12:15",
																								"nodeType": "YulFunctionCall",
																								"src": "7790:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7785:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "7785:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7764:3:15",
																					"nodeType": "YulBlock",
																					"src": "7764:3:15",
																					"statements": []
																				},
																				"src": "7760:208:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "8004:156:15",
																					"nodeType": "YulBlock",
																					"src": "8004:156:15",
																					"statements": [
																						{
																							"nativeSrc": "8022:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8022:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8049:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "8049:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8054:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "8054:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8045:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "8045:3:15"
																										},
																										"nativeSrc": "8045:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "8045:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8039:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "8039:5:15"
																								},
																								"nativeSrc": "8039:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8039:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8026:9:15",
																									"nodeType": "YulTypedName",
																									"src": "8026:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8089:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "8089:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8116:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "8116:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8131:6:15",
																														"nodeType": "YulIdentifier",
																														"src": "8131:6:15"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8139:4:15",
																														"nodeType": "YulLiteral",
																														"src": "8139:4:15",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8127:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "8127:3:15"
																												},
																												"nativeSrc": "8127:17:15",
																												"nodeType": "YulFunctionCall",
																												"src": "8127:17:15"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8097:18:15",
																											"nodeType": "YulIdentifier",
																											"src": "8097:18:15"
																										},
																										"nativeSrc": "8097:48:15",
																										"nodeType": "YulFunctionCall",
																										"src": "8097:48:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8082:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "8082:6:15"
																								},
																								"nativeSrc": "8082:64:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8082:64:15"
																							},
																							"nativeSrc": "8082:64:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "8082:64:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7987:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "7987:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7996:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "7996:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7984:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "7984:2:15"
																					},
																					"nativeSrc": "7984:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "7984:19:15"
																				},
																				"nativeSrc": "7981:179:15",
																				"nodeType": "YulIf",
																				"src": "7981:179:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8180:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "8180:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8194:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "8194:6:15"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8202:1:15",
																											"nodeType": "YulLiteral",
																											"src": "8202:1:15",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8190:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "8190:3:15"
																									},
																									"nativeSrc": "8190:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "8190:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8206:1:15",
																									"nodeType": "YulLiteral",
																									"src": "8206:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8186:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "8186:3:15"
																							},
																							"nativeSrc": "8186:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "8186:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8173:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8173:6:15"
																					},
																					"nativeSrc": "8173:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8173:36:15"
																				},
																				"nativeSrc": "8173:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "8173:36:15"
																			}
																		]
																	},
																	"nativeSrc": "7601:618:15",
																	"nodeType": "YulCase",
																	"src": "7601:618:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7606:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7606:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8236:222:15",
																		"nodeType": "YulBlock",
																		"src": "8236:222:15",
																		"statements": [
																			{
																				"nativeSrc": "8250:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8250:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8263:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8263:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8254:5:15",
																						"nodeType": "YulTypedName",
																						"src": "8254:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8287:67:15",
																					"nodeType": "YulBlock",
																					"src": "8287:67:15",
																					"statements": [
																						{
																							"nativeSrc": "8305:35:15",
																							"nodeType": "YulAssignment",
																							"src": "8305:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8324:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "8324:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8329:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "8329:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8320:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "8320:3:15"
																										},
																										"nativeSrc": "8320:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "8320:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8314:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "8314:5:15"
																								},
																								"nativeSrc": "8314:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8314:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8305:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "8305:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8280:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "8280:6:15"
																				},
																				"nativeSrc": "8277:77:15",
																				"nodeType": "YulIf",
																				"src": "8277:77:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8374:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "8374:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8433:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "8433:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8440:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "8440:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8380:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "8380:52:15"
																							},
																							"nativeSrc": "8380:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "8380:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8367:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8367:6:15"
																					},
																					"nativeSrc": "8367:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8367:81:15"
																				},
																				"nativeSrc": "8367:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "8367:81:15"
																			}
																		]
																	},
																	"nativeSrc": "8228:230:15",
																	"nodeType": "YulCase",
																	"src": "8228:230:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7581:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7581:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7589:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7589:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7578:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7578:2:15"
																},
																"nativeSrc": "7578:14:15",
																"nodeType": "YulFunctionCall",
																"src": "7578:14:15"
															},
															"nativeSrc": "7571:887:15",
															"nodeType": "YulSwitch",
															"src": "7571:887:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7069:1395:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7150:4:15",
														"nodeType": "YulTypedName",
														"src": "7150:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7156:3:15",
														"nodeType": "YulTypedName",
														"src": "7156:3:15",
														"type": ""
													}
												],
												"src": "7069:1395:15"
											},
											{
												"body": {
													"nativeSrc": "8515:32:15",
													"nodeType": "YulBlock",
													"src": "8515:32:15",
													"statements": [
														{
															"nativeSrc": "8525:16:15",
															"nodeType": "YulAssignment",
															"src": "8525:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "8536:5:15",
																"nodeType": "YulIdentifier",
																"src": "8536:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8525:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "8525:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "8470:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8497:5:15",
														"nodeType": "YulTypedName",
														"src": "8497:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8507:7:15",
														"nodeType": "YulTypedName",
														"src": "8507:7:15",
														"type": ""
													}
												],
												"src": "8470:77:15"
											},
											{
												"body": {
													"nativeSrc": "8618:53:15",
													"nodeType": "YulBlock",
													"src": "8618:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8635:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8635:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8658:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "8658:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "8640:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "8640:17:15"
																		},
																		"nativeSrc": "8640:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8640:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8628:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8628:6:15"
																},
																"nativeSrc": "8628:37:15",
																"nodeType": "YulFunctionCall",
																"src": "8628:37:15"
															},
															"nativeSrc": "8628:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "8628:37:15"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "8553:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8606:5:15",
														"nodeType": "YulTypedName",
														"src": "8606:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8613:3:15",
														"nodeType": "YulTypedName",
														"src": "8613:3:15",
														"type": ""
													}
												],
												"src": "8553:118:15"
											},
											{
												"body": {
													"nativeSrc": "8742:53:15",
													"nodeType": "YulBlock",
													"src": "8742:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8759:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8759:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8782:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "8782:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8764:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "8764:17:15"
																		},
																		"nativeSrc": "8764:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8764:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8752:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8752:6:15"
																},
																"nativeSrc": "8752:37:15",
																"nodeType": "YulFunctionCall",
																"src": "8752:37:15"
															},
															"nativeSrc": "8752:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "8752:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8677:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8730:5:15",
														"nodeType": "YulTypedName",
														"src": "8730:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8737:3:15",
														"nodeType": "YulTypedName",
														"src": "8737:3:15",
														"type": ""
													}
												],
												"src": "8677:118:15"
											},
											{
												"body": {
													"nativeSrc": "8846:81:15",
													"nodeType": "YulBlock",
													"src": "8846:81:15",
													"statements": [
														{
															"nativeSrc": "8856:65:15",
															"nodeType": "YulAssignment",
															"src": "8856:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8871:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "8871:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8878:42:15",
																		"nodeType": "YulLiteral",
																		"src": "8878:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8867:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8867:3:15"
																},
																"nativeSrc": "8867:54:15",
																"nodeType": "YulFunctionCall",
																"src": "8867:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8856:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "8856:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8801:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8828:5:15",
														"nodeType": "YulTypedName",
														"src": "8828:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8838:7:15",
														"nodeType": "YulTypedName",
														"src": "8838:7:15",
														"type": ""
													}
												],
												"src": "8801:126:15"
											},
											{
												"body": {
													"nativeSrc": "8978:51:15",
													"nodeType": "YulBlock",
													"src": "8978:51:15",
													"statements": [
														{
															"nativeSrc": "8988:35:15",
															"nodeType": "YulAssignment",
															"src": "8988:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9017:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "9017:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "8999:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "8999:17:15"
																},
																"nativeSrc": "8999:24:15",
																"nodeType": "YulFunctionCall",
																"src": "8999:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8988:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "8988:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "8933:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8960:5:15",
														"nodeType": "YulTypedName",
														"src": "8960:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8970:7:15",
														"nodeType": "YulTypedName",
														"src": "8970:7:15",
														"type": ""
													}
												],
												"src": "8933:96:15"
											},
											{
												"body": {
													"nativeSrc": "9100:53:15",
													"nodeType": "YulBlock",
													"src": "9100:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9117:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9117:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9140:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "9140:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9122:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "9122:17:15"
																		},
																		"nativeSrc": "9122:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9122:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9110:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9110:6:15"
																},
																"nativeSrc": "9110:37:15",
																"nodeType": "YulFunctionCall",
																"src": "9110:37:15"
															},
															"nativeSrc": "9110:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "9110:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9035:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9088:5:15",
														"nodeType": "YulTypedName",
														"src": "9088:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9095:3:15",
														"nodeType": "YulTypedName",
														"src": "9095:3:15",
														"type": ""
													}
												],
												"src": "9035:118:15"
											},
											{
												"body": {
													"nativeSrc": "9369:454:15",
													"nodeType": "YulBlock",
													"src": "9369:454:15",
													"statements": [
														{
															"nativeSrc": "9379:27:15",
															"nodeType": "YulAssignment",
															"src": "9379:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9391:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9391:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9402:3:15",
																		"nodeType": "YulLiteral",
																		"src": "9402:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9387:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9387:3:15"
																},
																"nativeSrc": "9387:19:15",
																"nodeType": "YulFunctionCall",
																"src": "9387:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9379:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9379:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9460:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9460:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9473:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9473:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9484:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9484:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9469:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9469:3:15"
																		},
																		"nativeSrc": "9469:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9469:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9416:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "9416:43:15"
																},
																"nativeSrc": "9416:71:15",
																"nodeType": "YulFunctionCall",
																"src": "9416:71:15"
															},
															"nativeSrc": "9416:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "9416:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9541:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9541:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9554:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9554:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9565:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9565:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9550:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9550:3:15"
																		},
																		"nativeSrc": "9550:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9550:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9497:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "9497:43:15"
																},
																"nativeSrc": "9497:72:15",
																"nodeType": "YulFunctionCall",
																"src": "9497:72:15"
															},
															"nativeSrc": "9497:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "9497:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9623:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9623:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9636:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9636:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9647:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9647:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9632:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9632:3:15"
																		},
																		"nativeSrc": "9632:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9632:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9579:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "9579:43:15"
																},
																"nativeSrc": "9579:72:15",
																"nodeType": "YulFunctionCall",
																"src": "9579:72:15"
															},
															"nativeSrc": "9579:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "9579:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "9705:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9705:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9718:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9718:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9729:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9729:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9714:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9714:3:15"
																		},
																		"nativeSrc": "9714:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9714:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9661:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "9661:43:15"
																},
																"nativeSrc": "9661:72:15",
																"nodeType": "YulFunctionCall",
																"src": "9661:72:15"
															},
															"nativeSrc": "9661:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "9661:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "9787:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9787:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9800:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9800:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9811:3:15",
																				"nodeType": "YulLiteral",
																				"src": "9811:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9796:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9796:3:15"
																		},
																		"nativeSrc": "9796:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9796:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9743:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "9743:43:15"
																},
																"nativeSrc": "9743:73:15",
																"nodeType": "YulFunctionCall",
																"src": "9743:73:15"
															},
															"nativeSrc": "9743:73:15",
															"nodeType": "YulExpressionStatement",
															"src": "9743:73:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "9159:664:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9309:9:15",
														"nodeType": "YulTypedName",
														"src": "9309:9:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9321:6:15",
														"nodeType": "YulTypedName",
														"src": "9321:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9329:6:15",
														"nodeType": "YulTypedName",
														"src": "9329:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9337:6:15",
														"nodeType": "YulTypedName",
														"src": "9337:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9345:6:15",
														"nodeType": "YulTypedName",
														"src": "9345:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9353:6:15",
														"nodeType": "YulTypedName",
														"src": "9353:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9364:4:15",
														"nodeType": "YulTypedName",
														"src": "9364:4:15",
														"type": ""
													}
												],
												"src": "9159:664:15"
											},
											{
												"body": {
													"nativeSrc": "9925:73:15",
													"nodeType": "YulBlock",
													"src": "9925:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9942:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9942:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9947:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9947:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9935:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9935:6:15"
																},
																"nativeSrc": "9935:19:15",
																"nodeType": "YulFunctionCall",
																"src": "9935:19:15"
															},
															"nativeSrc": "9935:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "9935:19:15"
														},
														{
															"nativeSrc": "9963:29:15",
															"nodeType": "YulAssignment",
															"src": "9963:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9982:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9982:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9987:4:15",
																		"nodeType": "YulLiteral",
																		"src": "9987:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9978:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9978:3:15"
																},
																"nativeSrc": "9978:14:15",
																"nodeType": "YulFunctionCall",
																"src": "9978:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9963:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "9963:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9829:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9897:3:15",
														"nodeType": "YulTypedName",
														"src": "9897:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9902:6:15",
														"nodeType": "YulTypedName",
														"src": "9902:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9913:11:15",
														"nodeType": "YulTypedName",
														"src": "9913:11:15",
														"type": ""
													}
												],
												"src": "9829:169:15"
											},
											{
												"body": {
													"nativeSrc": "10096:285:15",
													"nodeType": "YulBlock",
													"src": "10096:285:15",
													"statements": [
														{
															"nativeSrc": "10106:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10106:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10153:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "10153:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "10120:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "10120:32:15"
																},
																"nativeSrc": "10120:39:15",
																"nodeType": "YulFunctionCall",
																"src": "10120:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10110:6:15",
																	"nodeType": "YulTypedName",
																	"src": "10110:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10168:78:15",
															"nodeType": "YulAssignment",
															"src": "10168:78:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10234:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10234:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10239:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10239:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10175:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "10175:58:15"
																},
																"nativeSrc": "10175:71:15",
																"nodeType": "YulFunctionCall",
																"src": "10175:71:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10168:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10168:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10294:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10294:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10301:4:15",
																				"nodeType": "YulLiteral",
																				"src": "10301:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10290:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10290:3:15"
																		},
																		"nativeSrc": "10290:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10290:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10308:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10308:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10313:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10313:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10255:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "10255:34:15"
																},
																"nativeSrc": "10255:65:15",
																"nodeType": "YulFunctionCall",
																"src": "10255:65:15"
															},
															"nativeSrc": "10255:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "10255:65:15"
														},
														{
															"nativeSrc": "10329:46:15",
															"nodeType": "YulAssignment",
															"src": "10329:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10340:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10340:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10367:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10367:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "10345:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "10345:21:15"
																		},
																		"nativeSrc": "10345:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10345:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10336:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10336:3:15"
																},
																"nativeSrc": "10336:39:15",
																"nodeType": "YulFunctionCall",
																"src": "10336:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10329:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10329:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10004:377:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10077:5:15",
														"nodeType": "YulTypedName",
														"src": "10077:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10084:3:15",
														"nodeType": "YulTypedName",
														"src": "10084:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10092:3:15",
														"nodeType": "YulTypedName",
														"src": "10092:3:15",
														"type": ""
													}
												],
												"src": "10004:377:15"
											},
											{
												"body": {
													"nativeSrc": "10505:195:15",
													"nodeType": "YulBlock",
													"src": "10505:195:15",
													"statements": [
														{
															"nativeSrc": "10515:26:15",
															"nodeType": "YulAssignment",
															"src": "10515:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10527:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "10527:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10538:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10538:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10523:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10523:3:15"
																},
																"nativeSrc": "10523:18:15",
																"nodeType": "YulFunctionCall",
																"src": "10523:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10515:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10515:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10562:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10562:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10573:1:15",
																				"nodeType": "YulLiteral",
																				"src": "10573:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10558:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10558:3:15"
																		},
																		"nativeSrc": "10558:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10558:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10581:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "10581:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10587:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10587:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10577:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10577:3:15"
																		},
																		"nativeSrc": "10577:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10577:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10551:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10551:6:15"
																},
																"nativeSrc": "10551:47:15",
																"nodeType": "YulFunctionCall",
																"src": "10551:47:15"
															},
															"nativeSrc": "10551:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "10551:47:15"
														},
														{
															"nativeSrc": "10607:86:15",
															"nodeType": "YulAssignment",
															"src": "10607:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10679:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10679:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10688:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10688:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10615:63:15",
																	"nodeType": "YulIdentifier",
																	"src": "10615:63:15"
																},
																"nativeSrc": "10615:78:15",
																"nodeType": "YulFunctionCall",
																"src": "10615:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10607:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10607:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10387:313:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10477:9:15",
														"nodeType": "YulTypedName",
														"src": "10477:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10489:6:15",
														"nodeType": "YulTypedName",
														"src": "10489:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10500:4:15",
														"nodeType": "YulTypedName",
														"src": "10500:4:15",
														"type": ""
													}
												],
												"src": "10387:313:15"
											},
											{
												"body": {
													"nativeSrc": "10764:40:15",
													"nodeType": "YulBlock",
													"src": "10764:40:15",
													"statements": [
														{
															"nativeSrc": "10775:22:15",
															"nodeType": "YulAssignment",
															"src": "10775:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10791:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "10791:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10785:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10785:5:15"
																},
																"nativeSrc": "10785:12:15",
																"nodeType": "YulFunctionCall",
																"src": "10785:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10775:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10775:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "10706:98:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10747:5:15",
														"nodeType": "YulTypedName",
														"src": "10747:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10757:6:15",
														"nodeType": "YulTypedName",
														"src": "10757:6:15",
														"type": ""
													}
												],
												"src": "10706:98:15"
											},
											{
												"body": {
													"nativeSrc": "10866:60:15",
													"nodeType": "YulBlock",
													"src": "10866:60:15",
													"statements": [
														{
															"nativeSrc": "10876:11:15",
															"nodeType": "YulAssignment",
															"src": "10876:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "10884:3:15",
																"nodeType": "YulIdentifier",
																"src": "10884:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "10876:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10876:4:15"
																}
															]
														},
														{
															"nativeSrc": "10897:22:15",
															"nodeType": "YulAssignment",
															"src": "10897:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "10909:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10909:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10914:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10914:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10905:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10905:3:15"
																},
																"nativeSrc": "10905:14:15",
																"nodeType": "YulFunctionCall",
																"src": "10905:14:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "10897:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10897:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_memory_ptr",
												"nativeSrc": "10810:116:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "10853:3:15",
														"nodeType": "YulTypedName",
														"src": "10853:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "10861:4:15",
														"nodeType": "YulTypedName",
														"src": "10861:4:15",
														"type": ""
													}
												],
												"src": "10810:116:15"
											},
											{
												"body": {
													"nativeSrc": "10987:99:15",
													"nodeType": "YulBlock",
													"src": "10987:99:15",
													"statements": [
														{
															"nativeSrc": "10998:42:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10998:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "11035:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "11035:3:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11029:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "11029:5:15"
																		},
																		"nativeSrc": "11029:10:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11029:10:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes32",
																	"nativeSrc": "11011:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "11011:17:15"
																},
																"nativeSrc": "11011:29:15",
																"nodeType": "YulFunctionCall",
																"src": "11011:29:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "11002:5:15",
																	"nodeType": "YulTypedName",
																	"src": "11002:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11050:29:15",
															"nodeType": "YulAssignment",
															"src": "11050:29:15",
															"value": {
																"name": "value",
																"nativeSrc": "11074:5:15",
																"nodeType": "YulIdentifier",
																"src": "11074:5:15"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "11050:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "11050:11:15"
																}
															]
														}
													]
												},
												"name": "read_from_memoryt_bytes32",
												"nativeSrc": "10932:154:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "10967:3:15",
														"nodeType": "YulTypedName",
														"src": "10967:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "returnValue",
														"nativeSrc": "10975:11:15",
														"nodeType": "YulTypedName",
														"src": "10975:11:15",
														"type": ""
													}
												],
												"src": "10932:154:15"
											},
											{
												"body": {
													"nativeSrc": "11182:504:15",
													"nodeType": "YulBlock",
													"src": "11182:504:15",
													"statements": [
														{
															"nativeSrc": "11193:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "11193:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11239:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11239:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "11207:31:15",
																	"nodeType": "YulIdentifier",
																	"src": "11207:31:15"
																},
																"nativeSrc": "11207:38:15",
																"nodeType": "YulFunctionCall",
																"src": "11207:38:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11197:6:15",
																	"nodeType": "YulTypedName",
																	"src": "11197:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11254:21:15",
															"nodeType": "YulVariableDeclaration",
															"src": "11254:21:15",
															"value": {
																"name": "array",
																"nativeSrc": "11270:5:15",
																"nodeType": "YulIdentifier",
																"src": "11270:5:15"
															},
															"variables": [
																{
																	"name": "dataArea",
																	"nativeSrc": "11258:8:15",
																	"nodeType": "YulTypedName",
																	"src": "11258:8:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11285:52:15",
															"nodeType": "YulAssignment",
															"src": "11285:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11331:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11331:5:15"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_bytes_memory_ptr",
																	"nativeSrc": "11297:33:15",
																	"nodeType": "YulIdentifier",
																	"src": "11297:33:15"
																},
																"nativeSrc": "11297:40:15",
																"nodeType": "YulFunctionCall",
																"src": "11297:40:15"
															},
															"variableNames": [
																{
																	"name": "dataArea",
																	"nativeSrc": "11285:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "11285:8:15"
																}
															]
														},
														{
															"nativeSrc": "11347:44:15",
															"nodeType": "YulAssignment",
															"src": "11347:44:15",
															"value": {
																"arguments": [
																	{
																		"name": "dataArea",
																		"nativeSrc": "11382:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "11382:8:15"
																	}
																],
																"functionName": {
																	"name": "read_from_memoryt_bytes32",
																	"nativeSrc": "11356:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "11356:25:15"
																},
																"nativeSrc": "11356:35:15",
																"nodeType": "YulFunctionCall",
																"src": "11356:35:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11347:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "11347:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11419:260:15",
																"nodeType": "YulBlock",
																"src": "11419:260:15",
																"statements": [
																	{
																		"nativeSrc": "11433:236:15",
																		"nodeType": "YulAssignment",
																		"src": "11433:236:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "11463:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "11463:5:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "11530:1:15",
																									"nodeType": "YulLiteral",
																									"src": "11530:1:15",
																									"type": "",
																									"value": "8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "11537:2:15",
																											"nodeType": "YulLiteral",
																											"src": "11537:2:15",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "11541:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "11541:6:15"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "11533:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "11533:3:15"
																									},
																									"nativeSrc": "11533:15:15",
																									"nodeType": "YulFunctionCall",
																									"src": "11533:15:15"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "11526:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "11526:3:15"
																							},
																							"nativeSrc": "11526:23:15",
																							"nodeType": "YulFunctionCall",
																							"src": "11526:23:15"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11571:66:15",
																							"nodeType": "YulLiteral",
																							"src": "11571:66:15",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "shift_left_dynamic",
																						"nativeSrc": "11486:18:15",
																						"nodeType": "YulIdentifier",
																						"src": "11486:18:15"
																					},
																					"nativeSrc": "11486:169:15",
																					"nodeType": "YulFunctionCall",
																					"src": "11486:169:15"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11442:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "11442:3:15"
																			},
																			"nativeSrc": "11442:227:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11442:227:15"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "11433:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11433:5:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11407:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11407:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11415:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11415:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11404:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "11404:2:15"
																},
																"nativeSrc": "11404:14:15",
																"nodeType": "YulFunctionCall",
																"src": "11404:14:15"
															},
															"nativeSrc": "11401:278:15",
															"nodeType": "YulIf",
															"src": "11401:278:15"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nativeSrc": "11092:594:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "11166:5:15",
														"nodeType": "YulTypedName",
														"src": "11166:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11176:5:15",
														"nodeType": "YulTypedName",
														"src": "11176:5:15",
														"type": ""
													}
												],
												"src": "11092:594:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "610160604052348015610010575f5ffd5b50604051612613380380612613833981810160405281019061003291906103a0565b816040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508383816003908161007a9190610626565b50806004908161008a9190610626565b5050506100a160058361013e60201b90919060201c565b61012081815250506100bd60068261013e60201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a081815250506100fa61018b60201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050505050506108a7565b5f60208351101561015f57610158836101e560201b60201c565b9050610185565b8261016f8361024a60201b60201c565b5f01908161017d9190610626565b5060ff5f1b90505b92915050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e0516101005146306040516020016101ca95949392919061075b565b60405160208183030381529060405280519060200120905090565b5f5f829050601f8151111561023157826040517f305a27a900000000000000000000000000000000000000000000000000000000815260040161022891906107f4565b60405180910390fd5b80518161023d90610841565b5f1c175f1b915050919050565b5f819050919050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6102b28261026c565b810181811067ffffffffffffffff821117156102d1576102d061027c565b5b80604052505050565b5f6102e3610253565b90506102ef82826102a9565b919050565b5f67ffffffffffffffff82111561030e5761030d61027c565b5b6103178261026c565b9050602081019050919050565b8281835e5f83830152505050565b5f61034461033f846102f4565b6102da565b9050828152602081018484840111156103605761035f610268565b5b61036b848285610324565b509392505050565b5f82601f83011261038757610386610264565b5b8151610397848260208601610332565b91505092915050565b5f5f604083850312156103b6576103b561025c565b5b5f83015167ffffffffffffffff8111156103d3576103d2610260565b5b6103df85828601610373565b925050602083015167ffffffffffffffff811115610400576103ff610260565b5b61040c85828601610373565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061046457607f821691505b60208210810361047757610476610420565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104d97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261049e565b6104e3868361049e565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61052761052261051d846104fb565b610504565b6104fb565b9050919050565b5f819050919050565b6105408361050d565b61055461054c8261052e565b8484546104aa565b825550505050565b5f5f905090565b61056b61055c565b610576818484610537565b505050565b5b818110156105995761058e5f82610563565b60018101905061057c565b5050565b601f8211156105de576105af8161047d565b6105b88461048f565b810160208510156105c7578190505b6105db6105d38561048f565b83018261057b565b50505b505050565b5f82821c905092915050565b5f6105fe5f19846008026105e3565b1980831691505092915050565b5f61061683836105ef565b9150826002028217905092915050565b61062f82610416565b67ffffffffffffffff8111156106485761064761027c565b5b610652825461044d565b61065d82828561059d565b5f60209050601f83116001811461068e575f841561067c578287015190505b610686858261060b565b8655506106ed565b601f19841661069c8661047d565b5f5b828110156106c35784890151825560018201915060208501945060208101905061069e565b868310156106e057848901516106dc601f8916826105ef565b8355505b6001600288020188555050505b505050505050565b5f819050919050565b610707816106f5565b82525050565b610716816104fb565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107458261071c565b9050919050565b6107558161073b565b82525050565b5f60a08201905061076e5f8301886106fe565b61077b60208301876106fe565b61078860408301866106fe565b610795606083018561070d565b6107a2608083018461074c565b9695505050505050565b5f82825260208201905092915050565b5f6107c682610416565b6107d081856107ac565b93506107e0818560208601610324565b6107e98161026c565b840191505092915050565b5f6020820190508181035f83015261080c81846107bc565b905092915050565b5f81519050919050565b5f819050602082019050919050565b5f61083882516106f5565b80915050919050565b5f61084b82610814565b826108558461081e565b90506108608161082d565b925060208210156108a05761089b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261049e565b831692505b5050919050565b60805160a05160c05160e051610100516101205161014051611d1b6108f85f395f610a4201525f610a0701525f61100101525f610fe001525f61094b01525f6109a101525f6109ca0152611d1b5ff3fe608060405234801561000f575f5ffd5b50600436106100e8575f3560e01c80637ecebe001161008a578063a0712d6811610064578063a0712d6814610266578063a9059cbb14610282578063d505accf146102b2578063dd62ed3e146102ce576100e8565b80637ecebe00146101f457806384b0196e1461022457806395d89b4114610248576100e8565b806323b872dd116100c657806323b872dd14610158578063313ce567146101885780633644e515146101a657806370a08231146101c4576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f5ffd5b6100f46102fe565b60405161010191906114b7565b60405180910390f35b610124600480360381019061011f9190611568565b61038e565b60405161013191906115c0565b60405180910390f35b6101426103b0565b60405161014f91906115e8565b60405180910390f35b610172600480360381019061016d9190611601565b6103b9565b60405161017f91906115c0565b60405180910390f35b6101906103e7565b60405161019d919061166c565b60405180910390f35b6101ae6103ef565b6040516101bb919061169d565b60405180910390f35b6101de60048036038101906101d991906116b6565b6103fd565b6040516101eb91906115e8565b60405180910390f35b61020e600480360381019061020991906116b6565b610442565b60405161021b91906115e8565b60405180910390f35b61022c610488565b60405161023f97969594939291906117e1565b60405180910390f35b61025061052d565b60405161025d91906114b7565b60405180910390f35b610280600480360381019061027b9190611863565b6105bd565b005b61029c60048036038101906102979190611568565b6105ca565b6040516102a991906115c0565b60405180910390f35b6102cc60048036038101906102c791906118e2565b6105ec565b005b6102e860048036038101906102e3919061197f565b61072b565b6040516102f591906115e8565b60405180910390f35b60606003805461030d906119ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610339906119ea565b80156103845780601f1061035b57610100808354040283529160200191610384565b820191905f5260205f20905b81548152906001019060200180831161036757829003601f168201915b5050505050905090565b5f5f6103986107ad565b90506103a58185856107b4565b600191505092915050565b5f600254905090565b5f5f6103c36107ad565b90506103d08582856107c6565b6103db858585610858565b60019150509392505050565b5f6012905090565b5f6103f8610948565b905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f6060805f5f5f60606104996109fe565b6104a1610a39565b46305f5f1b5f67ffffffffffffffff8111156104c0576104bf611a1a565b5b6040519080825280602002602001820160405280156104ee5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b60606004805461053c906119ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610568906119ea565b80156105b35780601f1061058a576101008083540402835291602001916105b3565b820191905f5260205f20905b81548152906001019060200180831161059657829003601f168201915b5050505050905090565b6105c73382610a74565b50565b5f5f6105d46107ad565b90506105e1818585610858565b600191505092915050565b8342111561062f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062690611a91565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861065d8c610af3565b8960405160200161067396959493929190611aaf565b6040516020818303038152906040528051906020012090505f61069582610b8d565b90505f6106a482878787610ba6565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b90611b58565b60405180910390fd5b61071f8a8a8a6107b4565b50505050505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6107c18383836001610bd4565b505050565b5f6107d1848461072b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108525781811015610843578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161083a93929190611b76565b60405180910390fd5b61085184848484035f610bd4565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108c8575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108bf9190611bab565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610938575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161092f9190611bab565b60405180910390fd5b610943838383610da3565b505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480156109c357507f000000000000000000000000000000000000000000000000000000000000000046145b156109f0577f000000000000000000000000000000000000000000000000000000000000000090506109fb565b6109f8610fbc565b90505b90565b6060610a3460057f000000000000000000000000000000000000000000000000000000000000000061105190919063ffffffff16565b905090565b6060610a6f60067f000000000000000000000000000000000000000000000000000000000000000061105190919063ffffffff16565b905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ae4575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610adb9190611bab565b60405180910390fd5b610aef5f8383610da3565b5050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050600160075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b819190611bf1565b92505081905550919050565b5f610b9f610b99610948565b836110fe565b9050919050565b5f5f5f5f610bb68888888861113e565b925092509250610bc68282611225565b829350505050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c44575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c3b9190611bab565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cb4575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610cab9190611bab565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610d9d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d9491906115e8565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610df3578060025f828254610de79190611bf1565b92505081905550610ec1565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e7c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e7393929190611b76565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f08578060025f8282540392505081905550610f52565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610faf91906115e8565b60405180910390a3505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611036959493929190611c24565b60405160208183030381529060405280519060200120905090565b606060ff5f1b831461106d5761106683611387565b90506110f8565b818054611079906119ea565b80601f01602080910402602001604051908101604052809291908181526020018280546110a5906119ea565b80156110f05780601f106110c7576101008083540402835291602001916110f0565b820191905f5260205f20905b8154815290600101906020018083116110d357829003601f168201915b505050505090505b92915050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f5f5f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c111561117a575f60038592509250925061121b565b5f6001888888886040515f815260200160405260405161119d9493929190611c75565b6020604051602081039080840390855afa1580156111bd573d5f5f3e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361120e575f60015f5f1b9350935093505061121b565b805f5f5f1b935093509350505b9450945094915050565b5f600381111561123857611237611cb8565b5b82600381111561124b5761124a611cb8565b5b0315611383576001600381111561126557611264611cb8565b5b82600381111561127857611277611cb8565b5b036112af576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156112c3576112c2611cb8565b5b8260038111156112d6576112d5611cb8565b5b0361131a57805f1c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161131191906115e8565b60405180910390fd5b60038081111561132d5761132c611cb8565b5b8260038111156113405761133f611cb8565b5b0361138257806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401611379919061169d565b60405180910390fd5b5b5050565b60605f611393836113f9565b90505f602067ffffffffffffffff8111156113b1576113b0611a1a565b5b6040519080825280601f01601f1916602001820160405280156113e35781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f5f60ff835f1c169050601f81111561143e576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61148982611447565b6114938185611451565b93506114a3818560208601611461565b6114ac8161146f565b840191505092915050565b5f6020820190508181035f8301526114cf818461147f565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611504826114db565b9050919050565b611514816114fa565b811461151e575f5ffd5b50565b5f8135905061152f8161150b565b92915050565b5f819050919050565b61154781611535565b8114611551575f5ffd5b50565b5f813590506115628161153e565b92915050565b5f5f6040838503121561157e5761157d6114d7565b5b5f61158b85828601611521565b925050602061159c85828601611554565b9150509250929050565b5f8115159050919050565b6115ba816115a6565b82525050565b5f6020820190506115d35f8301846115b1565b92915050565b6115e281611535565b82525050565b5f6020820190506115fb5f8301846115d9565b92915050565b5f5f5f60608486031215611618576116176114d7565b5b5f61162586828701611521565b935050602061163686828701611521565b925050604061164786828701611554565b9150509250925092565b5f60ff82169050919050565b61166681611651565b82525050565b5f60208201905061167f5f83018461165d565b92915050565b5f819050919050565b61169781611685565b82525050565b5f6020820190506116b05f83018461168e565b92915050565b5f602082840312156116cb576116ca6114d7565b5b5f6116d884828501611521565b91505092915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611715816116e1565b82525050565b611724816114fa565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61175c81611535565b82525050565b5f61176d8383611753565b60208301905092915050565b5f602082019050919050565b5f61178f8261172a565b6117998185611734565b93506117a483611744565b805f5b838110156117d45781516117bb8882611762565b97506117c683611779565b9250506001810190506117a7565b5085935050505092915050565b5f60e0820190506117f45f83018a61170c565b8181036020830152611806818961147f565b9050818103604083015261181a818861147f565b905061182960608301876115d9565b611836608083018661171b565b61184360a083018561168e565b81810360c08301526118558184611785565b905098975050505050505050565b5f60208284031215611878576118776114d7565b5b5f61188584828501611554565b91505092915050565b61189781611651565b81146118a1575f5ffd5b50565b5f813590506118b28161188e565b92915050565b6118c181611685565b81146118cb575f5ffd5b50565b5f813590506118dc816118b8565b92915050565b5f5f5f5f5f5f5f60e0888a0312156118fd576118fc6114d7565b5b5f61190a8a828b01611521565b975050602061191b8a828b01611521565b965050604061192c8a828b01611554565b955050606061193d8a828b01611554565b945050608061194e8a828b016118a4565b93505060a061195f8a828b016118ce565b92505060c06119708a828b016118ce565b91505092959891949750929550565b5f5f60408385031215611995576119946114d7565b5b5f6119a285828601611521565b92505060206119b385828601611521565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a0157607f821691505b602082108103611a1457611a136119bd565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f45524332305065726d69743a206578706972656420646561646c696e650000005f82015250565b5f611a7b601d83611451565b9150611a8682611a47565b602082019050919050565b5f6020820190508181035f830152611aa881611a6f565b9050919050565b5f60c082019050611ac25f83018961168e565b611acf602083018861171b565b611adc604083018761171b565b611ae960608301866115d9565b611af660808301856115d9565b611b0360a08301846115d9565b979650505050505050565b7f45524332305065726d69743a20696e76616c6964207369676e617475726500005f82015250565b5f611b42601e83611451565b9150611b4d82611b0e565b602082019050919050565b5f6020820190508181035f830152611b6f81611b36565b9050919050565b5f606082019050611b895f83018661171b565b611b9660208301856115d9565b611ba360408301846115d9565b949350505050565b5f602082019050611bbe5f83018461171b565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611bfb82611535565b9150611c0683611535565b9250828201905080821115611c1e57611c1d611bc4565b5b92915050565b5f60a082019050611c375f83018861168e565b611c44602083018761168e565b611c51604083018661168e565b611c5e60608301856115d9565b611c6b608083018461171b565b9695505050505050565b5f608082019050611c885f83018761168e565b611c95602083018661165d565b611ca2604083018561168e565b611caf606083018461168e565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea2646970667358221220121e0328fbb19f1c9562b8215af2f13afe49012b95f6e3a4b9009b03791d430564736f6c634300081b0033",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2613 CODESIZE SUB DUP1 PUSH2 0x2613 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x3A0 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP4 DUP4 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x7A SWAP2 SWAP1 PUSH2 0x626 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x626 JUMP JUMPDEST POP POP POP PUSH2 0xA1 PUSH1 0x5 DUP4 PUSH2 0x13E PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH2 0xBD PUSH1 0x6 DUP3 PUSH2 0x13E PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH2 0xFA PUSH2 0x18B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP POP PUSH2 0x8A7 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x15F JUMPI PUSH2 0x158 DUP4 PUSH2 0x1E5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH2 0x185 JUMP JUMPDEST DUP3 PUSH2 0x16F DUP4 PUSH2 0x24A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD SWAP1 DUP2 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x626 JUMP JUMPDEST POP PUSH1 0xFF PUSH0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x231 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH2 0x23D SWAP1 PUSH2 0x841 JUMP JUMPDEST PUSH0 SHR OR PUSH0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2B2 DUP3 PUSH2 0x26C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2D1 JUMPI PUSH2 0x2D0 PUSH2 0x27C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2E3 PUSH2 0x253 JUMP JUMPDEST SWAP1 POP PUSH2 0x2EF DUP3 DUP3 PUSH2 0x2A9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x30E JUMPI PUSH2 0x30D PUSH2 0x27C JUMP JUMPDEST JUMPDEST PUSH2 0x317 DUP3 PUSH2 0x26C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x344 PUSH2 0x33F DUP5 PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x360 JUMPI PUSH2 0x35F PUSH2 0x268 JUMP JUMPDEST JUMPDEST PUSH2 0x36B DUP5 DUP3 DUP6 PUSH2 0x324 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x387 JUMPI PUSH2 0x386 PUSH2 0x264 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x397 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x332 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B6 JUMPI PUSH2 0x3B5 PUSH2 0x25C JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D3 JUMPI PUSH2 0x3D2 PUSH2 0x260 JUMP JUMPDEST JUMPDEST PUSH2 0x3DF DUP6 DUP3 DUP7 ADD PUSH2 0x373 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x400 JUMPI PUSH2 0x3FF PUSH2 0x260 JUMP JUMPDEST JUMPDEST PUSH2 0x40C DUP6 DUP3 DUP7 ADD PUSH2 0x373 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x464 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x477 JUMPI PUSH2 0x476 PUSH2 0x420 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x4D9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x49E JUMP JUMPDEST PUSH2 0x4E3 DUP7 DUP4 PUSH2 0x49E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x527 PUSH2 0x522 PUSH2 0x51D DUP5 PUSH2 0x4FB JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST PUSH2 0x4FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x540 DUP4 PUSH2 0x50D JUMP JUMPDEST PUSH2 0x554 PUSH2 0x54C DUP3 PUSH2 0x52E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4AA JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x56B PUSH2 0x55C JUMP JUMPDEST PUSH2 0x576 DUP2 DUP5 DUP5 PUSH2 0x537 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x599 JUMPI PUSH2 0x58E PUSH0 DUP3 PUSH2 0x563 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x57C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5DE JUMPI PUSH2 0x5AF DUP2 PUSH2 0x47D JUMP JUMPDEST PUSH2 0x5B8 DUP5 PUSH2 0x48F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5C7 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5DB PUSH2 0x5D3 DUP6 PUSH2 0x48F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x57B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5FE PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5E3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x616 DUP4 DUP4 PUSH2 0x5EF JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x62F DUP3 PUSH2 0x416 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x648 JUMPI PUSH2 0x647 PUSH2 0x27C JUMP JUMPDEST JUMPDEST PUSH2 0x652 DUP3 SLOAD PUSH2 0x44D JUMP JUMPDEST PUSH2 0x65D DUP3 DUP3 DUP6 PUSH2 0x59D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x68E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x67C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x686 DUP6 DUP3 PUSH2 0x60B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x69C DUP7 PUSH2 0x47D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x6C3 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x69E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x6E0 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x6DC PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x5EF JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x707 DUP2 PUSH2 0x6F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x716 DUP2 PUSH2 0x4FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x745 DUP3 PUSH2 0x71C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x755 DUP2 PUSH2 0x73B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x76E PUSH0 DUP4 ADD DUP9 PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x77B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x788 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x795 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x7A2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x74C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7C6 DUP3 PUSH2 0x416 JUMP JUMPDEST PUSH2 0x7D0 DUP2 DUP6 PUSH2 0x7AC JUMP JUMPDEST SWAP4 POP PUSH2 0x7E0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x324 JUMP JUMPDEST PUSH2 0x7E9 DUP2 PUSH2 0x26C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x80C DUP2 DUP5 PUSH2 0x7BC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x838 DUP3 MLOAD PUSH2 0x6F5 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x84B DUP3 PUSH2 0x814 JUMP JUMPDEST DUP3 PUSH2 0x855 DUP5 PUSH2 0x81E JUMP JUMPDEST SWAP1 POP PUSH2 0x860 DUP2 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x8A0 JUMPI PUSH2 0x89B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x49E JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1D1B PUSH2 0x8F8 PUSH0 CODECOPY PUSH0 PUSH2 0xA42 ADD MSTORE PUSH0 PUSH2 0xA07 ADD MSTORE PUSH0 PUSH2 0x1001 ADD MSTORE PUSH0 PUSH2 0xFE0 ADD MSTORE PUSH0 PUSH2 0x94B ADD MSTORE PUSH0 PUSH2 0x9A1 ADD MSTORE PUSH0 PUSH2 0x9CA ADD MSTORE PUSH2 0x1D1B PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2CE JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x248 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C4 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x14B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x169D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH2 0x442 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x14B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x1863 JUMP JUMPDEST PUSH2 0x5BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0x5EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x30D SWAP1 PUSH2 0x19EA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x339 SWAP1 PUSH2 0x19EA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x384 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x384 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x367 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x398 PUSH2 0x7AD JUMP JUMPDEST SWAP1 POP PUSH2 0x3A5 DUP2 DUP6 DUP6 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3C3 PUSH2 0x7AD JUMP JUMPDEST SWAP1 POP PUSH2 0x3D0 DUP6 DUP3 DUP6 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x3DB DUP6 DUP6 DUP6 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3F8 PUSH2 0x948 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 PUSH0 PUSH0 PUSH1 0x60 PUSH2 0x499 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x4A1 PUSH2 0xA39 JUMP JUMPDEST CHAINID ADDRESS PUSH0 PUSH0 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4BF PUSH2 0x1A1A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4EE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x53C SWAP1 PUSH2 0x19EA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x568 SWAP1 PUSH2 0x19EA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x58A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x596 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5C7 CALLER DUP3 PUSH2 0xA74 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5D4 PUSH2 0x7AD JUMP JUMPDEST SWAP1 POP PUSH2 0x5E1 DUP2 DUP6 DUP6 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x62F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x626 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x65D DUP13 PUSH2 0xAF3 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x673 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x695 DUP3 PUSH2 0xB8D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x6A4 DUP3 DUP8 DUP8 DUP8 PUSH2 0xBA6 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x714 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70B SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71F DUP11 DUP11 DUP11 PUSH2 0x7B4 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7C1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBD4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7D1 DUP5 DUP5 PUSH2 0x72B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x852 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x843 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xBD4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BF SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x938 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x943 DUP4 DUP4 DUP4 PUSH2 0xDA3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x9C3 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x9F0 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x9FB JUMP JUMPDEST PUSH2 0x9F8 PUSH2 0xFBC JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA34 PUSH1 0x5 PUSH32 0x0 PUSH2 0x1051 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA6F PUSH1 0x6 PUSH32 0x0 PUSH2 0x1051 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAE4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADB SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAEF PUSH0 DUP4 DUP4 PUSH2 0xDA3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB81 SWAP2 SWAP1 PUSH2 0x1BF1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB9F PUSH2 0xB99 PUSH2 0x948 JUMP JUMPDEST DUP4 PUSH2 0x10FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0xBB6 DUP9 DUP9 DUP9 DUP9 PUSH2 0x113E JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xBC6 DUP3 DUP3 PUSH2 0x1225 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC44 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAB SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD9D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD94 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF3 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDE7 SWAP2 SWAP1 PUSH2 0x1BF1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEC1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE7C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE73 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF08 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFAF SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1036 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x106D JUMPI PUSH2 0x1066 DUP4 PUSH2 0x1387 JUMP JUMPDEST SWAP1 POP PUSH2 0x10F8 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1079 SWAP1 PUSH2 0x19EA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10A5 SWAP1 PUSH2 0x19EA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10F0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10C7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10F0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10D3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x117A JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x121B JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x119D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11BD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x120E JUMPI PUSH0 PUSH1 0x1 PUSH0 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x121B JUMP JUMPDEST DUP1 PUSH0 PUSH0 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1238 JUMPI PUSH2 0x1237 PUSH2 0x1CB8 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x124B JUMPI PUSH2 0x124A PUSH2 0x1CB8 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1383 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1265 JUMPI PUSH2 0x1264 PUSH2 0x1CB8 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1278 JUMPI PUSH2 0x1277 PUSH2 0x1CB8 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x12AF JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12C3 JUMPI PUSH2 0x12C2 PUSH2 0x1CB8 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12D6 JUMPI PUSH2 0x12D5 PUSH2 0x1CB8 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x131A JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1311 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x132D JUMPI PUSH2 0x132C PUSH2 0x1CB8 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1340 JUMPI PUSH2 0x133F PUSH2 0x1CB8 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1382 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1379 SWAP2 SWAP1 PUSH2 0x169D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x1393 DUP4 PUSH2 0x13F9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13B1 JUMPI PUSH2 0x13B0 PUSH2 0x1A1A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13E3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x143E JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1489 DUP3 PUSH2 0x1447 JUMP JUMPDEST PUSH2 0x1493 DUP2 DUP6 PUSH2 0x1451 JUMP JUMPDEST SWAP4 POP PUSH2 0x14A3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1461 JUMP JUMPDEST PUSH2 0x14AC DUP2 PUSH2 0x146F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14CF DUP2 DUP5 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1504 DUP3 PUSH2 0x14DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1514 DUP2 PUSH2 0x14FA JUMP JUMPDEST DUP2 EQ PUSH2 0x151E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x152F DUP2 PUSH2 0x150B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1547 DUP2 PUSH2 0x1535 JUMP JUMPDEST DUP2 EQ PUSH2 0x1551 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1562 DUP2 PUSH2 0x153E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x157E JUMPI PUSH2 0x157D PUSH2 0x14D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x158B DUP6 DUP3 DUP7 ADD PUSH2 0x1521 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x159C DUP6 DUP3 DUP7 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15BA DUP2 PUSH2 0x15A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D3 PUSH0 DUP4 ADD DUP5 PUSH2 0x15B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15E2 DUP2 PUSH2 0x1535 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15FB PUSH0 DUP4 ADD DUP5 PUSH2 0x15D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1618 JUMPI PUSH2 0x1617 PUSH2 0x14D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1625 DUP7 DUP3 DUP8 ADD PUSH2 0x1521 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1636 DUP7 DUP3 DUP8 ADD PUSH2 0x1521 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1647 DUP7 DUP3 DUP8 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1666 DUP2 PUSH2 0x1651 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x167F PUSH0 DUP4 ADD DUP5 PUSH2 0x165D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1697 DUP2 PUSH2 0x1685 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x168E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16CB JUMPI PUSH2 0x16CA PUSH2 0x14D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D8 DUP5 DUP3 DUP6 ADD PUSH2 0x1521 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1715 DUP2 PUSH2 0x16E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1724 DUP2 PUSH2 0x14FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175C DUP2 PUSH2 0x1535 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x176D DUP4 DUP4 PUSH2 0x1753 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x178F DUP3 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x1799 DUP2 DUP6 PUSH2 0x1734 JUMP JUMPDEST SWAP4 POP PUSH2 0x17A4 DUP4 PUSH2 0x1744 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17D4 JUMPI DUP2 MLOAD PUSH2 0x17BB DUP9 DUP3 PUSH2 0x1762 JUMP JUMPDEST SWAP8 POP PUSH2 0x17C6 DUP4 PUSH2 0x1779 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x17A7 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x17F4 PUSH0 DUP4 ADD DUP11 PUSH2 0x170C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1806 DUP2 DUP10 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x181A DUP2 DUP9 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP PUSH2 0x1829 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x1836 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x171B JUMP JUMPDEST PUSH2 0x1843 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x168E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1855 DUP2 DUP5 PUSH2 0x1785 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1878 JUMPI PUSH2 0x1877 PUSH2 0x14D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1885 DUP5 DUP3 DUP6 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1897 DUP2 PUSH2 0x1651 JUMP JUMPDEST DUP2 EQ PUSH2 0x18A1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18B2 DUP2 PUSH2 0x188E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18C1 DUP2 PUSH2 0x1685 JUMP JUMPDEST DUP2 EQ PUSH2 0x18CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18DC DUP2 PUSH2 0x18B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x18FD JUMPI PUSH2 0x18FC PUSH2 0x14D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x190A DUP11 DUP3 DUP12 ADD PUSH2 0x1521 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x191B DUP11 DUP3 DUP12 ADD PUSH2 0x1521 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x192C DUP11 DUP3 DUP12 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x193D DUP11 DUP3 DUP12 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x194E DUP11 DUP3 DUP12 ADD PUSH2 0x18A4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x195F DUP11 DUP3 DUP12 ADD PUSH2 0x18CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1970 DUP11 DUP3 DUP12 ADD PUSH2 0x18CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1995 JUMPI PUSH2 0x1994 PUSH2 0x14D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19A2 DUP6 DUP3 DUP7 ADD PUSH2 0x1521 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19B3 DUP6 DUP3 DUP7 ADD PUSH2 0x1521 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A01 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A14 JUMPI PUSH2 0x1A13 PUSH2 0x19BD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7B PUSH1 0x1D DUP4 PUSH2 0x1451 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A86 DUP3 PUSH2 0x1A47 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AA8 DUP2 PUSH2 0x1A6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1AC2 PUSH0 DUP4 ADD DUP10 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x1ACF PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x171B JUMP JUMPDEST PUSH2 0x1ADC PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x171B JUMP JUMPDEST PUSH2 0x1AE9 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x1AF6 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x1B03 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x15D9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B42 PUSH1 0x1E DUP4 PUSH2 0x1451 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B4D DUP3 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B6F DUP2 PUSH2 0x1B36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B89 PUSH0 DUP4 ADD DUP7 PUSH2 0x171B JUMP JUMPDEST PUSH2 0x1B96 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x1BA3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15D9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BBE PUSH0 DUP4 ADD DUP5 PUSH2 0x171B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BFB DUP3 PUSH2 0x1535 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C06 DUP4 PUSH2 0x1535 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C1E JUMPI PUSH2 0x1C1D PUSH2 0x1BC4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1C37 PUSH0 DUP4 ADD DUP9 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x1C44 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x1C51 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x1C5E PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x1C6B PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x171B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1C88 PUSH0 DUP4 ADD DUP8 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x1C95 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x165D JUMP JUMPDEST PUSH2 0x1CA2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x1CAF PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x168E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0x1E SUB 0x28 0xFB 0xB1 SWAP16 SHR SWAP6 PUSH3 0xB8215A CALLCODE CALL GASPRICE INVALID BLOBHASH ADD 0x2B SWAP6 0xF6 0xE3 LOG4 0xB9 STOP SWAP12 SUB PUSH26 0x1D430564736F6C634300081B0033000000000000000000000000 ",
							"sourceMap": "741:2539:14:-:0;;;1013:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1074:4;3328:431:10;;;;;;;;;;;;;;;;;1091:4:14;1097:6;1970:5:2;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;3401:45:10;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1013:94:14;;741:2539;;2914:340:6;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:10:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;1708:286:6:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:7:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:853::-;2669:6;2677;2726:2;2714:9;2705:7;2701:23;2697:32;2694:119;;;2732:79;;:::i;:::-;2694:119;2873:1;2862:9;2858:17;2852:24;2903:18;2895:6;2892:30;2889:117;;;2925:79;;:::i;:::-;2889:117;3030:74;3096:7;3087:6;3076:9;3072:22;3030:74;:::i;:::-;3020:84;;2823:291;3174:2;3163:9;3159:18;3153:25;3205:18;3197:6;3194:30;3191:117;;;3227:79;;:::i;:::-;3191:117;3332:74;3398:7;3389:6;3378:9;3374:22;3332:74;:::i;:::-;3322:84;;3124:292;2570:853;;;;;:::o;3429:99::-;3481:6;3515:5;3509:12;3499:22;;3429:99;;;:::o;3534:180::-;3582:77;3579:1;3572:88;3679:4;3676:1;3669:15;3703:4;3700:1;3693:15;3720:320;3764:6;3801:1;3795:4;3791:12;3781:22;;3848:1;3842:4;3838:12;3869:18;3859:81;;3925:4;3917:6;3913:17;3903:27;;3859:81;3987:2;3979:6;3976:14;3956:18;3953:38;3950:84;;4006:18;;:::i;:::-;3950:84;3771:269;3720:320;;;:::o;4046:141::-;4095:4;4118:3;4110:11;;4141:3;4138:1;4131:14;4175:4;4172:1;4162:18;4154:26;;4046:141;;;:::o;4193:93::-;4230:6;4277:2;4272;4265:5;4261:14;4257:23;4247:33;;4193:93;;;:::o;4292:107::-;4336:8;4386:5;4380:4;4376:16;4355:37;;4292:107;;;;:::o;4405:393::-;4474:6;4524:1;4512:10;4508:18;4547:97;4577:66;4566:9;4547:97;:::i;:::-;4665:39;4695:8;4684:9;4665:39;:::i;:::-;4653:51;;4737:4;4733:9;4726:5;4722:21;4713:30;;4786:4;4776:8;4772:19;4765:5;4762:30;4752:40;;4481:317;;4405:393;;;;;:::o;4804:77::-;4841:7;4870:5;4859:16;;4804:77;;;:::o;4887:60::-;4915:3;4936:5;4929:12;;4887:60;;;:::o;4953:142::-;5003:9;5036:53;5054:34;5063:24;5081:5;5063:24;:::i;:::-;5054:34;:::i;:::-;5036:53;:::i;:::-;5023:66;;4953:142;;;:::o;5101:75::-;5144:3;5165:5;5158:12;;5101:75;;;:::o;5182:269::-;5292:39;5323:7;5292:39;:::i;:::-;5353:91;5402:41;5426:16;5402:41;:::i;:::-;5394:6;5387:4;5381:11;5353:91;:::i;:::-;5347:4;5340:105;5258:193;5182:269;;;:::o;5457:73::-;5502:3;5523:1;5516:8;;5457:73;:::o;5536:189::-;5613:32;;:::i;:::-;5654:65;5712:6;5704;5698:4;5654:65;:::i;:::-;5589:136;5536:189;;:::o;5731:186::-;5791:120;5808:3;5801:5;5798:14;5791:120;;;5862:39;5899:1;5892:5;5862:39;:::i;:::-;5835:1;5828:5;5824:13;5815:22;;5791:120;;;5731:186;;:::o;5923:543::-;6024:2;6019:3;6016:11;6013:446;;;6058:38;6090:5;6058:38;:::i;:::-;6142:29;6160:10;6142:29;:::i;:::-;6132:8;6128:44;6325:2;6313:10;6310:18;6307:49;;;6346:8;6331:23;;6307:49;6369:80;6425:22;6443:3;6425:22;:::i;:::-;6415:8;6411:37;6398:11;6369:80;:::i;:::-;6028:431;;6013:446;5923:543;;;:::o;6472:117::-;6526:8;6576:5;6570:4;6566:16;6545:37;;6472:117;;;;:::o;6595:169::-;6639:6;6672:51;6720:1;6716:6;6708:5;6705:1;6701:13;6672:51;:::i;:::-;6668:56;6753:4;6747;6743:15;6733:25;;6646:118;6595:169;;;;:::o;6769:295::-;6845:4;6991:29;7016:3;7010:4;6991:29;:::i;:::-;6983:37;;7053:3;7050:1;7046:11;7040:4;7037:21;7029:29;;6769:295;;;;:::o;7069:1395::-;7186:37;7219:3;7186:37;:::i;:::-;7288:18;7280:6;7277:30;7274:56;;;7310:18;;:::i;:::-;7274:56;7354:38;7386:4;7380:11;7354:38;:::i;:::-;7439:67;7499:6;7491;7485:4;7439:67;:::i;:::-;7533:1;7557:4;7544:17;;7589:2;7581:6;7578:14;7606:1;7601:618;;;;8263:1;8280:6;8277:77;;;8329:9;8324:3;8320:19;8314:26;8305:35;;8277:77;8380:67;8440:6;8433:5;8380:67;:::i;:::-;8374:4;8367:81;8236:222;7571:887;;7601:618;7653:4;7649:9;7641:6;7637:22;7687:37;7719:4;7687:37;:::i;:::-;7746:1;7760:208;7774:7;7771:1;7768:14;7760:208;;;7853:9;7848:3;7844:19;7838:26;7830:6;7823:42;7904:1;7896:6;7892:14;7882:24;;7951:2;7940:9;7936:18;7923:31;;7797:4;7794:1;7790:12;7785:17;;7760:208;;;7996:6;7987:7;7984:19;7981:179;;;8054:9;8049:3;8045:19;8039:26;8097:48;8139:4;8131:6;8127:17;8116:9;8097:48;:::i;:::-;8089:6;8082:64;8004:156;7981:179;8206:1;8202;8194:6;8190:14;8186:22;8180:4;8173:36;7608:611;;;7571:887;;7161:1303;;;7069:1395;;:::o;8470:77::-;8507:7;8536:5;8525:16;;8470:77;;;:::o;8553:118::-;8640:24;8658:5;8640:24;:::i;:::-;8635:3;8628:37;8553:118;;:::o;8677:::-;8764:24;8782:5;8764:24;:::i;:::-;8759:3;8752:37;8677:118;;:::o;8801:126::-;8838:7;8878:42;8871:5;8867:54;8856:65;;8801:126;;;:::o;8933:96::-;8970:7;8999:24;9017:5;8999:24;:::i;:::-;8988:35;;8933:96;;;:::o;9035:118::-;9122:24;9140:5;9122:24;:::i;:::-;9117:3;9110:37;9035:118;;:::o;9159:664::-;9364:4;9402:3;9391:9;9387:19;9379:27;;9416:71;9484:1;9473:9;9469:17;9460:6;9416:71;:::i;:::-;9497:72;9565:2;9554:9;9550:18;9541:6;9497:72;:::i;:::-;9579;9647:2;9636:9;9632:18;9623:6;9579:72;:::i;:::-;9661;9729:2;9718:9;9714:18;9705:6;9661:72;:::i;:::-;9743:73;9811:3;9800:9;9796:19;9787:6;9743:73;:::i;:::-;9159:664;;;;;;;;:::o;9829:169::-;9913:11;9947:6;9942:3;9935:19;9987:4;9982:3;9978:14;9963:29;;9829:169;;;;:::o;10004:377::-;10092:3;10120:39;10153:5;10120:39;:::i;:::-;10175:71;10239:6;10234:3;10175:71;:::i;:::-;10168:78;;10255:65;10313:6;10308:3;10301:4;10294:5;10290:16;10255:65;:::i;:::-;10345:29;10367:6;10345:29;:::i;:::-;10340:3;10336:39;10329:46;;10096:285;10004:377;;;;:::o;10387:313::-;10500:4;10538:2;10527:9;10523:18;10515:26;;10587:9;10581:4;10577:20;10573:1;10562:9;10558:17;10551:47;10615:78;10688:4;10679:6;10615:78;:::i;:::-;10607:86;;10387:313;;;;:::o;10706:98::-;10757:6;10791:5;10785:12;10775:22;;10706:98;;;:::o;10810:116::-;10861:4;10884:3;10876:11;;10914:4;10909:3;10905:14;10897:22;;10810:116;;;:::o;10932:154::-;10975:11;11011:29;11035:3;11029:10;11011:29;:::i;:::-;11074:5;11050:29;;10987:99;10932:154;;;:::o;11092:594::-;11176:5;11207:38;11239:5;11207:38;:::i;:::-;11270:5;11297:40;11331:5;11297:40;:::i;:::-;11285:52;;11356:35;11382:8;11356:35;:::i;:::-;11347:44;;11415:2;11407:6;11404:14;11401:278;;;11486:169;11571:66;11541:6;11537:2;11533:15;11530:1;11526:23;11486:169;:::i;:::-;11463:5;11442:227;11433:236;;11401:278;11182:504;;11092:594;;;:::o;741:2539:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_3361": {
									"entryPoint": 1007,
									"id": 3361,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Name_1954": {
									"entryPoint": 2558,
									"id": 1954,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Version_1966": {
									"entryPoint": 2617,
									"id": 1966,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_approve_567": {
									"entryPoint": 1972,
									"id": 567,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_627": {
									"entryPoint": 3028,
									"id": 627,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_1884": {
									"entryPoint": 4028,
									"id": 1884,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_domainSeparatorV4_1863": {
									"entryPoint": 2376,
									"id": 1863,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_hashTypedDataV4_1900": {
									"entryPoint": 2957,
									"id": 1900,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_mint_516": {
									"entryPoint": 2676,
									"id": 516,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_792": {
									"entryPoint": 1965,
									"id": 792,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_675": {
									"entryPoint": 1990,
									"id": 675,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_throwError_1739": {
									"entryPoint": 4645,
									"id": 1739,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transfer_406": {
									"entryPoint": 2136,
									"id": 406,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_483": {
									"entryPoint": 3491,
									"id": 483,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_useNonce_3381": {
									"entryPoint": 2803,
									"id": 3381,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@allowance_303": {
									"entryPoint": 1835,
									"id": 303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_327": {
									"entryPoint": 910,
									"id": 327,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_262": {
									"entryPoint": 1021,
									"id": 262,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@byteLength_928": {
									"entryPoint": 5113,
									"id": 928,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_240": {
									"entryPoint": 999,
									"id": 240,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@eip712Domain_1942": {
									"entryPoint": 1160,
									"id": 1942,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@mint_3393": {
									"entryPoint": 1469,
									"id": 3393,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_222": {
									"entryPoint": 766,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_3351": {
									"entryPoint": 1090,
									"id": 3351,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@permit_3338": {
									"entryPoint": 1516,
									"id": 3338,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@recover_1690": {
									"entryPoint": 2982,
									"id": 1690,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@symbol_231": {
									"entryPoint": 1325,
									"id": 231,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toStringWithFallback_995": {
									"entryPoint": 4177,
									"id": 995,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_896": {
									"entryPoint": 4999,
									"id": 896,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toTypedDataHash_2040": {
									"entryPoint": 4350,
									"id": 2040,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_249": {
									"entryPoint": 944,
									"id": 249,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_359": {
									"entryPoint": 953,
									"id": 359,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_286": {
									"entryPoint": 1482,
									"id": 286,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tryRecover_1654": {
									"entryPoint": 4414,
									"id": 1654,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"abi_decode_t_address": {
									"entryPoint": 5409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 6350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 6308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 6370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 5986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes1_to_t_bytes1_fromStack": {
									"entryPoint": 5900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7030,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6113,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6831,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7204,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 7285,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes1": {
									"entryPoint": 5857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5217,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7108,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7352,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6589,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6682,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5335,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd": {
									"entryPoint": 6727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124": {
									"entryPoint": 6926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 6328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 6286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17236:15",
										"nodeType": "YulBlock",
										"src": "0:17236:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:15",
													"nodeType": "YulBlock",
													"src": "66:40:15",
													"statements": [
														{
															"nativeSrc": "77:22:15",
															"nodeType": "YulAssignment",
															"src": "77:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:15"
																},
																"nativeSrc": "87:12:15",
																"nodeType": "YulFunctionCall",
																"src": "87:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:15",
														"nodeType": "YulTypedName",
														"src": "49:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:15",
														"nodeType": "YulTypedName",
														"src": "59:6:15",
														"type": ""
													}
												],
												"src": "7:99:15"
											},
											{
												"body": {
													"nativeSrc": "208:73:15",
													"nodeType": "YulBlock",
													"src": "208:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:15"
																},
																"nativeSrc": "218:19:15",
																"nodeType": "YulFunctionCall",
																"src": "218:19:15"
															},
															"nativeSrc": "218:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:15"
														},
														{
															"nativeSrc": "246:29:15",
															"nodeType": "YulAssignment",
															"src": "246:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:15",
																		"nodeType": "YulLiteral",
																		"src": "270:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:15"
																},
																"nativeSrc": "261:14:15",
																"nodeType": "YulFunctionCall",
																"src": "261:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:15",
														"nodeType": "YulTypedName",
														"src": "180:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:15",
														"nodeType": "YulTypedName",
														"src": "185:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:15",
														"nodeType": "YulTypedName",
														"src": "196:11:15",
														"type": ""
													}
												],
												"src": "112:169:15"
											},
											{
												"body": {
													"nativeSrc": "349:77:15",
													"nodeType": "YulBlock",
													"src": "349:77:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:15"
																},
																"nativeSrc": "360:23:15",
																"nodeType": "YulFunctionCall",
																"src": "360:23:15"
															},
															"nativeSrc": "360:23:15",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:15"
																		},
																		"nativeSrc": "399:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:15",
																		"nodeType": "YulLiteral",
																		"src": "417:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:15"
																},
																"nativeSrc": "392:27:15",
																"nodeType": "YulFunctionCall",
																"src": "392:27:15"
															},
															"nativeSrc": "392:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:15",
														"nodeType": "YulTypedName",
														"src": "331:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:15",
														"nodeType": "YulTypedName",
														"src": "336:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:15",
														"nodeType": "YulTypedName",
														"src": "341:6:15",
														"type": ""
													}
												],
												"src": "287:139:15"
											},
											{
												"body": {
													"nativeSrc": "480:54:15",
													"nodeType": "YulBlock",
													"src": "480:54:15",
													"statements": [
														{
															"nativeSrc": "490:38:15",
															"nodeType": "YulAssignment",
															"src": "490:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:15",
																				"nodeType": "YulLiteral",
																				"src": "515:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:15"
																		},
																		"nativeSrc": "504:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:15",
																				"nodeType": "YulLiteral",
																				"src": "524:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:15"
																		},
																		"nativeSrc": "520:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:15"
																},
																"nativeSrc": "500:28:15",
																"nodeType": "YulFunctionCall",
																"src": "500:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:15",
														"nodeType": "YulTypedName",
														"src": "463:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:15",
														"nodeType": "YulTypedName",
														"src": "473:6:15",
														"type": ""
													}
												],
												"src": "432:102:15"
											},
											{
												"body": {
													"nativeSrc": "632:285:15",
													"nodeType": "YulBlock",
													"src": "632:285:15",
													"statements": [
														{
															"nativeSrc": "642:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:15"
																},
																"nativeSrc": "656:39:15",
																"nodeType": "YulFunctionCall",
																"src": "656:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:15",
																	"nodeType": "YulTypedName",
																	"src": "646:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:15",
															"nodeType": "YulAssignment",
															"src": "704:78:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:15"
																},
																"nativeSrc": "711:71:15",
																"nodeType": "YulFunctionCall",
																"src": "711:71:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:15",
																				"nodeType": "YulLiteral",
																				"src": "837:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:15"
																		},
																		"nativeSrc": "826:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:15"
																},
																"nativeSrc": "791:65:15",
																"nodeType": "YulFunctionCall",
																"src": "791:65:15"
															},
															"nativeSrc": "791:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:15"
														},
														{
															"nativeSrc": "865:46:15",
															"nodeType": "YulAssignment",
															"src": "865:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:15"
																		},
																		"nativeSrc": "881:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:15"
																},
																"nativeSrc": "872:39:15",
																"nodeType": "YulFunctionCall",
																"src": "872:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:15",
														"nodeType": "YulTypedName",
														"src": "613:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:15",
														"nodeType": "YulTypedName",
														"src": "620:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:15",
														"nodeType": "YulTypedName",
														"src": "628:3:15",
														"type": ""
													}
												],
												"src": "540:377:15"
											},
											{
												"body": {
													"nativeSrc": "1041:195:15",
													"nodeType": "YulBlock",
													"src": "1041:195:15",
													"statements": [
														{
															"nativeSrc": "1051:26:15",
															"nodeType": "YulAssignment",
															"src": "1051:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:15"
																},
																"nativeSrc": "1059:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:15"
																		},
																		"nativeSrc": "1094:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:15"
																		},
																		"nativeSrc": "1113:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:15"
																},
																"nativeSrc": "1087:47:15",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:15"
															},
															"nativeSrc": "1087:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:15"
														},
														{
															"nativeSrc": "1143:86:15",
															"nodeType": "YulAssignment",
															"src": "1143:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:15",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:15"
																},
																"nativeSrc": "1151:78:15",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:15",
														"nodeType": "YulTypedName",
														"src": "1013:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:15",
														"nodeType": "YulTypedName",
														"src": "1025:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:15",
														"nodeType": "YulTypedName",
														"src": "1036:4:15",
														"type": ""
													}
												],
												"src": "923:313:15"
											},
											{
												"body": {
													"nativeSrc": "1282:35:15",
													"nodeType": "YulBlock",
													"src": "1282:35:15",
													"statements": [
														{
															"nativeSrc": "1292:19:15",
															"nodeType": "YulAssignment",
															"src": "1292:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:15"
																},
																"nativeSrc": "1302:9:15",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:15",
														"nodeType": "YulTypedName",
														"src": "1275:6:15",
														"type": ""
													}
												],
												"src": "1242:75:15"
											},
											{
												"body": {
													"nativeSrc": "1412:28:15",
													"nodeType": "YulBlock",
													"src": "1412:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:15"
																},
																"nativeSrc": "1422:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:15"
															},
															"nativeSrc": "1422:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:15"
											},
											{
												"body": {
													"nativeSrc": "1535:28:15",
													"nodeType": "YulBlock",
													"src": "1535:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:15"
																},
																"nativeSrc": "1545:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:15"
															},
															"nativeSrc": "1545:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:15"
											},
											{
												"body": {
													"nativeSrc": "1614:81:15",
													"nodeType": "YulBlock",
													"src": "1614:81:15",
													"statements": [
														{
															"nativeSrc": "1624:65:15",
															"nodeType": "YulAssignment",
															"src": "1624:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:15",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:15"
																},
																"nativeSrc": "1635:54:15",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:15",
														"nodeType": "YulTypedName",
														"src": "1596:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:15",
														"nodeType": "YulTypedName",
														"src": "1606:7:15",
														"type": ""
													}
												],
												"src": "1569:126:15"
											},
											{
												"body": {
													"nativeSrc": "1746:51:15",
													"nodeType": "YulBlock",
													"src": "1746:51:15",
													"statements": [
														{
															"nativeSrc": "1756:35:15",
															"nodeType": "YulAssignment",
															"src": "1756:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:15"
																},
																"nativeSrc": "1767:24:15",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:15",
														"nodeType": "YulTypedName",
														"src": "1728:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:15",
														"nodeType": "YulTypedName",
														"src": "1738:7:15",
														"type": ""
													}
												],
												"src": "1701:96:15"
											},
											{
												"body": {
													"nativeSrc": "1846:79:15",
													"nodeType": "YulBlock",
													"src": "1846:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:15",
																"nodeType": "YulBlock",
																"src": "1903:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:15"
																			},
																			"nativeSrc": "1905:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:15"
																		},
																		"nativeSrc": "1905:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:15"
																				},
																				"nativeSrc": "1876:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:15"
																		},
																		"nativeSrc": "1866:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:15"
																},
																"nativeSrc": "1859:43:15",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:15"
															},
															"nativeSrc": "1856:63:15",
															"nodeType": "YulIf",
															"src": "1856:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:15",
														"nodeType": "YulTypedName",
														"src": "1839:5:15",
														"type": ""
													}
												],
												"src": "1803:122:15"
											},
											{
												"body": {
													"nativeSrc": "1983:87:15",
													"nodeType": "YulBlock",
													"src": "1983:87:15",
													"statements": [
														{
															"nativeSrc": "1993:29:15",
															"nodeType": "YulAssignment",
															"src": "1993:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:15"
																},
																"nativeSrc": "2002:20:15",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:15"
																},
																"nativeSrc": "2031:33:15",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:15"
															},
															"nativeSrc": "2031:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:15",
														"nodeType": "YulTypedName",
														"src": "1961:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:15",
														"nodeType": "YulTypedName",
														"src": "1969:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:15",
														"nodeType": "YulTypedName",
														"src": "1977:5:15",
														"type": ""
													}
												],
												"src": "1931:139:15"
											},
											{
												"body": {
													"nativeSrc": "2121:32:15",
													"nodeType": "YulBlock",
													"src": "2121:32:15",
													"statements": [
														{
															"nativeSrc": "2131:16:15",
															"nodeType": "YulAssignment",
															"src": "2131:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:15",
																"nodeType": "YulIdentifier",
																"src": "2142:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:15",
														"nodeType": "YulTypedName",
														"src": "2103:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:15",
														"nodeType": "YulTypedName",
														"src": "2113:7:15",
														"type": ""
													}
												],
												"src": "2076:77:15"
											},
											{
												"body": {
													"nativeSrc": "2202:79:15",
													"nodeType": "YulBlock",
													"src": "2202:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:15",
																"nodeType": "YulBlock",
																"src": "2259:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:15"
																			},
																			"nativeSrc": "2261:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:15"
																		},
																		"nativeSrc": "2261:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:15"
																				},
																				"nativeSrc": "2232:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:15"
																		},
																		"nativeSrc": "2222:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:15"
																},
																"nativeSrc": "2215:43:15",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:15"
															},
															"nativeSrc": "2212:63:15",
															"nodeType": "YulIf",
															"src": "2212:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:15",
														"nodeType": "YulTypedName",
														"src": "2195:5:15",
														"type": ""
													}
												],
												"src": "2159:122:15"
											},
											{
												"body": {
													"nativeSrc": "2339:87:15",
													"nodeType": "YulBlock",
													"src": "2339:87:15",
													"statements": [
														{
															"nativeSrc": "2349:29:15",
															"nodeType": "YulAssignment",
															"src": "2349:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:15"
																},
																"nativeSrc": "2358:20:15",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:15"
																},
																"nativeSrc": "2387:33:15",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:15"
															},
															"nativeSrc": "2387:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:15",
														"nodeType": "YulTypedName",
														"src": "2317:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:15",
														"nodeType": "YulTypedName",
														"src": "2325:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:15",
														"nodeType": "YulTypedName",
														"src": "2333:5:15",
														"type": ""
													}
												],
												"src": "2287:139:15"
											},
											{
												"body": {
													"nativeSrc": "2515:391:15",
													"nodeType": "YulBlock",
													"src": "2515:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:15",
																"nodeType": "YulBlock",
																"src": "2561:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:15"
																			},
																			"nativeSrc": "2563:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:15"
																		},
																		"nativeSrc": "2563:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:15"
																		},
																		"nativeSrc": "2532:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:15"
																},
																"nativeSrc": "2528:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:15"
															},
															"nativeSrc": "2525:119:15",
															"nodeType": "YulIf",
															"src": "2525:119:15"
														},
														{
															"nativeSrc": "2654:117:15",
															"nodeType": "YulBlock",
															"src": "2654:117:15",
															"statements": [
																{
																	"nativeSrc": "2669:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:15",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:15",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:15"
																				},
																				"nativeSrc": "2729:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:15"
																		},
																		"nativeSrc": "2708:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:15",
															"nodeType": "YulBlock",
															"src": "2781:118:15",
															"statements": [
																{
																	"nativeSrc": "2796:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:15",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:15",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:15"
																				},
																				"nativeSrc": "2857:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:15"
																		},
																		"nativeSrc": "2836:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:15",
														"nodeType": "YulTypedName",
														"src": "2477:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:15",
														"nodeType": "YulTypedName",
														"src": "2488:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:15",
														"nodeType": "YulTypedName",
														"src": "2500:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:15",
														"nodeType": "YulTypedName",
														"src": "2508:6:15",
														"type": ""
													}
												],
												"src": "2432:474:15"
											},
											{
												"body": {
													"nativeSrc": "2954:48:15",
													"nodeType": "YulBlock",
													"src": "2954:48:15",
													"statements": [
														{
															"nativeSrc": "2964:32:15",
															"nodeType": "YulAssignment",
															"src": "2964:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:15"
																		},
																		"nativeSrc": "2982:13:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:15"
																},
																"nativeSrc": "2975:21:15",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:15",
														"nodeType": "YulTypedName",
														"src": "2936:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:15",
														"nodeType": "YulTypedName",
														"src": "2946:7:15",
														"type": ""
													}
												],
												"src": "2912:90:15"
											},
											{
												"body": {
													"nativeSrc": "3067:50:15",
													"nodeType": "YulBlock",
													"src": "3067:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:15",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:15"
																		},
																		"nativeSrc": "3089:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:15"
																},
																"nativeSrc": "3077:34:15",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:15"
															},
															"nativeSrc": "3077:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:15",
														"nodeType": "YulTypedName",
														"src": "3055:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:15",
														"nodeType": "YulTypedName",
														"src": "3062:3:15",
														"type": ""
													}
												],
												"src": "3008:109:15"
											},
											{
												"body": {
													"nativeSrc": "3215:118:15",
													"nodeType": "YulBlock",
													"src": "3215:118:15",
													"statements": [
														{
															"nativeSrc": "3225:26:15",
															"nodeType": "YulAssignment",
															"src": "3225:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:15"
																},
																"nativeSrc": "3233:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:15"
																		},
																		"nativeSrc": "3308:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:15"
																},
																"nativeSrc": "3261:65:15",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:15"
															},
															"nativeSrc": "3261:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:15",
														"nodeType": "YulTypedName",
														"src": "3187:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:15",
														"nodeType": "YulTypedName",
														"src": "3199:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:15",
														"nodeType": "YulTypedName",
														"src": "3210:4:15",
														"type": ""
													}
												],
												"src": "3123:210:15"
											},
											{
												"body": {
													"nativeSrc": "3404:53:15",
													"nodeType": "YulBlock",
													"src": "3404:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:15"
																		},
																		"nativeSrc": "3426:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:15"
																},
																"nativeSrc": "3414:37:15",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:15"
															},
															"nativeSrc": "3414:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:15",
														"nodeType": "YulTypedName",
														"src": "3392:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:15",
														"nodeType": "YulTypedName",
														"src": "3399:3:15",
														"type": ""
													}
												],
												"src": "3339:118:15"
											},
											{
												"body": {
													"nativeSrc": "3561:124:15",
													"nodeType": "YulBlock",
													"src": "3561:124:15",
													"statements": [
														{
															"nativeSrc": "3571:26:15",
															"nodeType": "YulAssignment",
															"src": "3571:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:15"
																},
																"nativeSrc": "3579:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:15"
																		},
																		"nativeSrc": "3660:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:15"
																},
																"nativeSrc": "3607:71:15",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:15"
															},
															"nativeSrc": "3607:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:15",
														"nodeType": "YulTypedName",
														"src": "3533:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:15",
														"nodeType": "YulTypedName",
														"src": "3545:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:15",
														"nodeType": "YulTypedName",
														"src": "3556:4:15",
														"type": ""
													}
												],
												"src": "3463:222:15"
											},
											{
												"body": {
													"nativeSrc": "3791:519:15",
													"nodeType": "YulBlock",
													"src": "3791:519:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:15",
																"nodeType": "YulBlock",
																"src": "3837:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:15"
																			},
																			"nativeSrc": "3839:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:15"
																		},
																		"nativeSrc": "3839:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:15"
																		},
																		"nativeSrc": "3808:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:15"
																},
																"nativeSrc": "3804:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:15"
															},
															"nativeSrc": "3801:119:15",
															"nodeType": "YulIf",
															"src": "3801:119:15"
														},
														{
															"nativeSrc": "3930:117:15",
															"nodeType": "YulBlock",
															"src": "3930:117:15",
															"statements": [
																{
																	"nativeSrc": "3945:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:15",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:15"
																				},
																				"nativeSrc": "4005:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:15"
																		},
																		"nativeSrc": "3984:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:15",
															"nodeType": "YulBlock",
															"src": "4057:118:15",
															"statements": [
																{
																	"nativeSrc": "4072:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:15",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:15"
																				},
																				"nativeSrc": "4133:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:15"
																		},
																		"nativeSrc": "4112:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:15",
															"nodeType": "YulBlock",
															"src": "4185:118:15",
															"statements": [
																{
																	"nativeSrc": "4200:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:15",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:15"
																				},
																				"nativeSrc": "4261:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:15"
																		},
																		"nativeSrc": "4240:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:15",
														"nodeType": "YulTypedName",
														"src": "3745:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:15",
														"nodeType": "YulTypedName",
														"src": "3756:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:15",
														"nodeType": "YulTypedName",
														"src": "3768:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:15",
														"nodeType": "YulTypedName",
														"src": "3776:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:15",
														"nodeType": "YulTypedName",
														"src": "3784:6:15",
														"type": ""
													}
												],
												"src": "3691:619:15"
											},
											{
												"body": {
													"nativeSrc": "4359:43:15",
													"nodeType": "YulBlock",
													"src": "4359:43:15",
													"statements": [
														{
															"nativeSrc": "4369:27:15",
															"nodeType": "YulAssignment",
															"src": "4369:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:15",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:15"
																},
																"nativeSrc": "4380:16:15",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:15",
														"nodeType": "YulTypedName",
														"src": "4341:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:15",
														"nodeType": "YulTypedName",
														"src": "4351:7:15",
														"type": ""
													}
												],
												"src": "4316:86:15"
											},
											{
												"body": {
													"nativeSrc": "4469:51:15",
													"nodeType": "YulBlock",
													"src": "4469:51:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:15",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:15"
																		},
																		"nativeSrc": "4491:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:15"
																},
																"nativeSrc": "4479:35:15",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:15"
															},
															"nativeSrc": "4479:35:15",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:15"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:15",
														"nodeType": "YulTypedName",
														"src": "4457:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:15",
														"nodeType": "YulTypedName",
														"src": "4464:3:15",
														"type": ""
													}
												],
												"src": "4408:112:15"
											},
											{
												"body": {
													"nativeSrc": "4620:120:15",
													"nodeType": "YulBlock",
													"src": "4620:120:15",
													"statements": [
														{
															"nativeSrc": "4630:26:15",
															"nodeType": "YulAssignment",
															"src": "4630:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:15"
																},
																"nativeSrc": "4638:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:15",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:15"
																		},
																		"nativeSrc": "4715:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:15",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:15"
																},
																"nativeSrc": "4666:67:15",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:15"
															},
															"nativeSrc": "4666:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:15",
														"nodeType": "YulTypedName",
														"src": "4592:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:15",
														"nodeType": "YulTypedName",
														"src": "4604:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:15",
														"nodeType": "YulTypedName",
														"src": "4615:4:15",
														"type": ""
													}
												],
												"src": "4526:214:15"
											},
											{
												"body": {
													"nativeSrc": "4791:32:15",
													"nodeType": "YulBlock",
													"src": "4791:32:15",
													"statements": [
														{
															"nativeSrc": "4801:16:15",
															"nodeType": "YulAssignment",
															"src": "4801:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "4812:5:15",
																"nodeType": "YulIdentifier",
																"src": "4812:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4801:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "4801:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "4746:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4773:5:15",
														"nodeType": "YulTypedName",
														"src": "4773:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4783:7:15",
														"nodeType": "YulTypedName",
														"src": "4783:7:15",
														"type": ""
													}
												],
												"src": "4746:77:15"
											},
											{
												"body": {
													"nativeSrc": "4894:53:15",
													"nodeType": "YulBlock",
													"src": "4894:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4911:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4911:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4934:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4934:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "4916:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "4916:17:15"
																		},
																		"nativeSrc": "4916:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4916:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4904:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4904:6:15"
																},
																"nativeSrc": "4904:37:15",
																"nodeType": "YulFunctionCall",
																"src": "4904:37:15"
															},
															"nativeSrc": "4904:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "4904:37:15"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "4829:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4882:5:15",
														"nodeType": "YulTypedName",
														"src": "4882:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4889:3:15",
														"nodeType": "YulTypedName",
														"src": "4889:3:15",
														"type": ""
													}
												],
												"src": "4829:118:15"
											},
											{
												"body": {
													"nativeSrc": "5051:124:15",
													"nodeType": "YulBlock",
													"src": "5051:124:15",
													"statements": [
														{
															"nativeSrc": "5061:26:15",
															"nodeType": "YulAssignment",
															"src": "5061:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5073:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5073:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5084:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5084:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5069:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5069:3:15"
																},
																"nativeSrc": "5069:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5069:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5061:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5061:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5141:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5141:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5154:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5154:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5165:1:15",
																				"nodeType": "YulLiteral",
																				"src": "5165:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5150:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5150:3:15"
																		},
																		"nativeSrc": "5150:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5150:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "5097:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "5097:43:15"
																},
																"nativeSrc": "5097:71:15",
																"nodeType": "YulFunctionCall",
																"src": "5097:71:15"
															},
															"nativeSrc": "5097:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "5097:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "4953:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5023:9:15",
														"nodeType": "YulTypedName",
														"src": "5023:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5035:6:15",
														"nodeType": "YulTypedName",
														"src": "5035:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5046:4:15",
														"nodeType": "YulTypedName",
														"src": "5046:4:15",
														"type": ""
													}
												],
												"src": "4953:222:15"
											},
											{
												"body": {
													"nativeSrc": "5247:263:15",
													"nodeType": "YulBlock",
													"src": "5247:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5293:83:15",
																"nodeType": "YulBlock",
																"src": "5293:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5295:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "5295:77:15"
																			},
																			"nativeSrc": "5295:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5295:79:15"
																		},
																		"nativeSrc": "5295:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5295:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5268:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5268:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5277:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5277:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5264:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5264:3:15"
																		},
																		"nativeSrc": "5264:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5264:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5289:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5289:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5260:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5260:3:15"
																},
																"nativeSrc": "5260:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5260:32:15"
															},
															"nativeSrc": "5257:119:15",
															"nodeType": "YulIf",
															"src": "5257:119:15"
														},
														{
															"nativeSrc": "5386:117:15",
															"nodeType": "YulBlock",
															"src": "5386:117:15",
															"statements": [
																{
																	"nativeSrc": "5401:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5401:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5415:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5415:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5405:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5405:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5430:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5430:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5465:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5465:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5476:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5476:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5461:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5461:3:15"
																				},
																				"nativeSrc": "5461:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5461:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5485:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5485:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5440:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5440:20:15"
																		},
																		"nativeSrc": "5440:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5440:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5430:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5430:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5181:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5217:9:15",
														"nodeType": "YulTypedName",
														"src": "5217:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5228:7:15",
														"nodeType": "YulTypedName",
														"src": "5228:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5240:6:15",
														"nodeType": "YulTypedName",
														"src": "5240:6:15",
														"type": ""
													}
												],
												"src": "5181:329:15"
											},
											{
												"body": {
													"nativeSrc": "5560:105:15",
													"nodeType": "YulBlock",
													"src": "5560:105:15",
													"statements": [
														{
															"nativeSrc": "5570:89:15",
															"nodeType": "YulAssignment",
															"src": "5570:89:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5585:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5585:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5592:66:15",
																		"nodeType": "YulLiteral",
																		"src": "5592:66:15",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5581:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5581:3:15"
																},
																"nativeSrc": "5581:78:15",
																"nodeType": "YulFunctionCall",
																"src": "5581:78:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5570:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "5570:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes1",
												"nativeSrc": "5516:149:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5542:5:15",
														"nodeType": "YulTypedName",
														"src": "5542:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5552:7:15",
														"nodeType": "YulTypedName",
														"src": "5552:7:15",
														"type": ""
													}
												],
												"src": "5516:149:15"
											},
											{
												"body": {
													"nativeSrc": "5734:52:15",
													"nodeType": "YulBlock",
													"src": "5734:52:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5751:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5751:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5773:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5773:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes1",
																			"nativeSrc": "5756:16:15",
																			"nodeType": "YulIdentifier",
																			"src": "5756:16:15"
																		},
																		"nativeSrc": "5756:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5756:23:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5744:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5744:6:15"
																},
																"nativeSrc": "5744:36:15",
																"nodeType": "YulFunctionCall",
																"src": "5744:36:15"
															},
															"nativeSrc": "5744:36:15",
															"nodeType": "YulExpressionStatement",
															"src": "5744:36:15"
														}
													]
												},
												"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
												"nativeSrc": "5671:115:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5722:5:15",
														"nodeType": "YulTypedName",
														"src": "5722:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5729:3:15",
														"nodeType": "YulTypedName",
														"src": "5729:3:15",
														"type": ""
													}
												],
												"src": "5671:115:15"
											},
											{
												"body": {
													"nativeSrc": "5857:53:15",
													"nodeType": "YulBlock",
													"src": "5857:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5874:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5874:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5897:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5897:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5879:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "5879:17:15"
																		},
																		"nativeSrc": "5879:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5879:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5867:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5867:6:15"
																},
																"nativeSrc": "5867:37:15",
																"nodeType": "YulFunctionCall",
																"src": "5867:37:15"
															},
															"nativeSrc": "5867:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "5867:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5792:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5845:5:15",
														"nodeType": "YulTypedName",
														"src": "5845:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5852:3:15",
														"nodeType": "YulTypedName",
														"src": "5852:3:15",
														"type": ""
													}
												],
												"src": "5792:118:15"
											},
											{
												"body": {
													"nativeSrc": "5990:40:15",
													"nodeType": "YulBlock",
													"src": "5990:40:15",
													"statements": [
														{
															"nativeSrc": "6001:22:15",
															"nodeType": "YulAssignment",
															"src": "6001:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6017:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6017:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6011:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "6011:5:15"
																},
																"nativeSrc": "6011:12:15",
																"nodeType": "YulFunctionCall",
																"src": "6011:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6001:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6001:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5916:114:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5973:5:15",
														"nodeType": "YulTypedName",
														"src": "5973:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5983:6:15",
														"nodeType": "YulTypedName",
														"src": "5983:6:15",
														"type": ""
													}
												],
												"src": "5916:114:15"
											},
											{
												"body": {
													"nativeSrc": "6147:73:15",
													"nodeType": "YulBlock",
													"src": "6147:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6164:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6164:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6169:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6169:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6157:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6157:6:15"
																},
																"nativeSrc": "6157:19:15",
																"nodeType": "YulFunctionCall",
																"src": "6157:19:15"
															},
															"nativeSrc": "6157:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "6157:19:15"
														},
														{
															"nativeSrc": "6185:29:15",
															"nodeType": "YulAssignment",
															"src": "6185:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6204:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6204:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6209:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6209:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6200:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6200:3:15"
																},
																"nativeSrc": "6200:14:15",
																"nodeType": "YulFunctionCall",
																"src": "6200:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6185:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "6185:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6036:184:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6119:3:15",
														"nodeType": "YulTypedName",
														"src": "6119:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6124:6:15",
														"nodeType": "YulTypedName",
														"src": "6124:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6135:11:15",
														"nodeType": "YulTypedName",
														"src": "6135:11:15",
														"type": ""
													}
												],
												"src": "6036:184:15"
											},
											{
												"body": {
													"nativeSrc": "6298:60:15",
													"nodeType": "YulBlock",
													"src": "6298:60:15",
													"statements": [
														{
															"nativeSrc": "6308:11:15",
															"nodeType": "YulAssignment",
															"src": "6308:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "6316:3:15",
																"nodeType": "YulIdentifier",
																"src": "6316:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6308:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6308:4:15"
																}
															]
														},
														{
															"nativeSrc": "6329:22:15",
															"nodeType": "YulAssignment",
															"src": "6329:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6341:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6341:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6346:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6346:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6337:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6337:3:15"
																},
																"nativeSrc": "6337:14:15",
																"nodeType": "YulFunctionCall",
																"src": "6337:14:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6329:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6329:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6226:132:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6285:3:15",
														"nodeType": "YulTypedName",
														"src": "6285:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6293:4:15",
														"nodeType": "YulTypedName",
														"src": "6293:4:15",
														"type": ""
													}
												],
												"src": "6226:132:15"
											},
											{
												"body": {
													"nativeSrc": "6419:53:15",
													"nodeType": "YulBlock",
													"src": "6419:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6436:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6436:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6459:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6459:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6441:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "6441:17:15"
																		},
																		"nativeSrc": "6441:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6441:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6429:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6429:6:15"
																},
																"nativeSrc": "6429:37:15",
																"nodeType": "YulFunctionCall",
																"src": "6429:37:15"
															},
															"nativeSrc": "6429:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "6429:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "6364:108:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6407:5:15",
														"nodeType": "YulTypedName",
														"src": "6407:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6414:3:15",
														"nodeType": "YulTypedName",
														"src": "6414:3:15",
														"type": ""
													}
												],
												"src": "6364:108:15"
											},
											{
												"body": {
													"nativeSrc": "6558:99:15",
													"nodeType": "YulBlock",
													"src": "6558:99:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6602:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6602:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6610:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6610:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "6568:33:15",
																	"nodeType": "YulIdentifier",
																	"src": "6568:33:15"
																},
																"nativeSrc": "6568:46:15",
																"nodeType": "YulFunctionCall",
																"src": "6568:46:15"
															},
															"nativeSrc": "6568:46:15",
															"nodeType": "YulExpressionStatement",
															"src": "6568:46:15"
														},
														{
															"nativeSrc": "6623:28:15",
															"nodeType": "YulAssignment",
															"src": "6623:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6641:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6641:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6646:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6646:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6637:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6637:3:15"
																},
																"nativeSrc": "6637:14:15",
																"nodeType": "YulFunctionCall",
																"src": "6637:14:15"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "6623:10:15",
																	"nodeType": "YulIdentifier",
																	"src": "6623:10:15"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "6478:179:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6531:6:15",
														"nodeType": "YulTypedName",
														"src": "6531:6:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6539:3:15",
														"nodeType": "YulTypedName",
														"src": "6539:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6547:10:15",
														"nodeType": "YulTypedName",
														"src": "6547:10:15",
														"type": ""
													}
												],
												"src": "6478:179:15"
											},
											{
												"body": {
													"nativeSrc": "6738:38:15",
													"nodeType": "YulBlock",
													"src": "6738:38:15",
													"statements": [
														{
															"nativeSrc": "6748:22:15",
															"nodeType": "YulAssignment",
															"src": "6748:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6760:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6760:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6765:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6765:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6756:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6756:3:15"
																},
																"nativeSrc": "6756:14:15",
																"nodeType": "YulFunctionCall",
																"src": "6756:14:15"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "6748:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6748:4:15"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6663:113:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6725:3:15",
														"nodeType": "YulTypedName",
														"src": "6725:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "6733:4:15",
														"nodeType": "YulTypedName",
														"src": "6733:4:15",
														"type": ""
													}
												],
												"src": "6663:113:15"
											},
											{
												"body": {
													"nativeSrc": "6936:608:15",
													"nodeType": "YulBlock",
													"src": "6936:608:15",
													"statements": [
														{
															"nativeSrc": "6946:68:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6946:68:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7008:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "7008:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "6960:47:15",
																	"nodeType": "YulIdentifier",
																	"src": "6960:47:15"
																},
																"nativeSrc": "6960:54:15",
																"nodeType": "YulFunctionCall",
																"src": "6960:54:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6950:6:15",
																	"nodeType": "YulTypedName",
																	"src": "6950:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7023:93:15",
															"nodeType": "YulAssignment",
															"src": "7023:93:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7104:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7104:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7109:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7109:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7030:73:15",
																	"nodeType": "YulIdentifier",
																	"src": "7030:73:15"
																},
																"nativeSrc": "7030:86:15",
																"nodeType": "YulFunctionCall",
																"src": "7030:86:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7023:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7023:3:15"
																}
															]
														},
														{
															"nativeSrc": "7125:71:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7125:71:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7190:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "7190:5:15"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7140:49:15",
																	"nodeType": "YulIdentifier",
																	"src": "7140:49:15"
																},
																"nativeSrc": "7140:56:15",
																"nodeType": "YulFunctionCall",
																"src": "7140:56:15"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7129:7:15",
																	"nodeType": "YulTypedName",
																	"src": "7129:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7205:21:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7205:21:15",
															"value": {
																"name": "baseRef",
																"nativeSrc": "7219:7:15",
																"nodeType": "YulIdentifier",
																"src": "7219:7:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7209:6:15",
																	"nodeType": "YulTypedName",
																	"src": "7209:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7295:224:15",
																"nodeType": "YulBlock",
																"src": "7295:224:15",
																"statements": [
																	{
																		"nativeSrc": "7309:34:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7309:34:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7336:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "7336:6:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7330:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "7330:5:15"
																			},
																			"nativeSrc": "7330:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7330:13:15"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "7313:13:15",
																				"nodeType": "YulTypedName",
																				"src": "7313:13:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7356:70:15",
																		"nodeType": "YulAssignment",
																		"src": "7356:70:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "7407:13:15",
																					"nodeType": "YulIdentifier",
																					"src": "7407:13:15"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7422:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7422:3:15"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "7363:43:15",
																				"nodeType": "YulIdentifier",
																				"src": "7363:43:15"
																			},
																			"nativeSrc": "7363:63:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7363:63:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7356:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7356:3:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7439:70:15",
																		"nodeType": "YulAssignment",
																		"src": "7439:70:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7502:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "7502:6:15"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "7449:52:15",
																				"nodeType": "YulIdentifier",
																				"src": "7449:52:15"
																			},
																			"nativeSrc": "7449:60:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7449:60:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7439:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7439:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7257:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "7257:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7260:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7260:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7254:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7254:2:15"
																},
																"nativeSrc": "7254:13:15",
																"nodeType": "YulFunctionCall",
																"src": "7254:13:15"
															},
															"nativeSrc": "7235:284:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7268:18:15",
																"nodeType": "YulBlock",
																"src": "7268:18:15",
																"statements": [
																	{
																		"nativeSrc": "7270:14:15",
																		"nodeType": "YulAssignment",
																		"src": "7270:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7279:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "7279:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7282:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7282:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7275:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7275:3:15"
																			},
																			"nativeSrc": "7275:9:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7275:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7270:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "7270:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7239:14:15",
																"nodeType": "YulBlock",
																"src": "7239:14:15",
																"statements": [
																	{
																		"nativeSrc": "7241:10:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7241:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7250:1:15",
																			"nodeType": "YulLiteral",
																			"src": "7250:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "7245:1:15",
																				"nodeType": "YulTypedName",
																				"src": "7245:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7235:284:15"
														},
														{
															"nativeSrc": "7528:10:15",
															"nodeType": "YulAssignment",
															"src": "7528:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "7535:3:15",
																"nodeType": "YulIdentifier",
																"src": "7535:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7528:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7528:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6812:732:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6915:5:15",
														"nodeType": "YulTypedName",
														"src": "6915:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6922:3:15",
														"nodeType": "YulTypedName",
														"src": "6922:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6931:3:15",
														"nodeType": "YulTypedName",
														"src": "6931:3:15",
														"type": ""
													}
												],
												"src": "6812:732:15"
											},
											{
												"body": {
													"nativeSrc": "7904:861:15",
													"nodeType": "YulBlock",
													"src": "7904:861:15",
													"statements": [
														{
															"nativeSrc": "7914:27:15",
															"nodeType": "YulAssignment",
															"src": "7914:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7926:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7926:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7937:3:15",
																		"nodeType": "YulLiteral",
																		"src": "7937:3:15",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7922:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7922:3:15"
																},
																"nativeSrc": "7922:19:15",
																"nodeType": "YulFunctionCall",
																"src": "7922:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7914:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7914:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7993:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7993:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8006:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8006:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8017:1:15",
																				"nodeType": "YulLiteral",
																				"src": "8017:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8002:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8002:3:15"
																		},
																		"nativeSrc": "8002:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8002:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
																	"nativeSrc": "7951:41:15",
																	"nodeType": "YulIdentifier",
																	"src": "7951:41:15"
																},
																"nativeSrc": "7951:69:15",
																"nodeType": "YulFunctionCall",
																"src": "7951:69:15"
															},
															"nativeSrc": "7951:69:15",
															"nodeType": "YulExpressionStatement",
															"src": "7951:69:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8041:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8041:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8052:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8052:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8037:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8037:3:15"
																		},
																		"nativeSrc": "8037:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8037:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8061:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "8061:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8067:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8067:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8057:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8057:3:15"
																		},
																		"nativeSrc": "8057:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8057:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8030:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8030:6:15"
																},
																"nativeSrc": "8030:48:15",
																"nodeType": "YulFunctionCall",
																"src": "8030:48:15"
															},
															"nativeSrc": "8030:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "8030:48:15"
														},
														{
															"nativeSrc": "8087:86:15",
															"nodeType": "YulAssignment",
															"src": "8087:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8159:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8159:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8168:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "8168:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8095:63:15",
																	"nodeType": "YulIdentifier",
																	"src": "8095:63:15"
																},
																"nativeSrc": "8095:78:15",
																"nodeType": "YulFunctionCall",
																"src": "8095:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8087:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8087:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8194:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8194:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8205:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8205:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8190:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8190:3:15"
																		},
																		"nativeSrc": "8190:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8190:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8214:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "8214:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8220:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8220:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8210:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8210:3:15"
																		},
																		"nativeSrc": "8210:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8210:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8183:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8183:6:15"
																},
																"nativeSrc": "8183:48:15",
																"nodeType": "YulFunctionCall",
																"src": "8183:48:15"
															},
															"nativeSrc": "8183:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "8183:48:15"
														},
														{
															"nativeSrc": "8240:86:15",
															"nodeType": "YulAssignment",
															"src": "8240:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8312:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8312:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8321:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "8321:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8248:63:15",
																	"nodeType": "YulIdentifier",
																	"src": "8248:63:15"
																},
																"nativeSrc": "8248:78:15",
																"nodeType": "YulFunctionCall",
																"src": "8248:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8240:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8240:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8380:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8380:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8393:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8393:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8404:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8404:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8389:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8389:3:15"
																		},
																		"nativeSrc": "8389:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8389:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8336:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "8336:43:15"
																},
																"nativeSrc": "8336:72:15",
																"nodeType": "YulFunctionCall",
																"src": "8336:72:15"
															},
															"nativeSrc": "8336:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "8336:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "8462:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8462:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8475:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8475:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8486:3:15",
																				"nodeType": "YulLiteral",
																				"src": "8486:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8471:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8471:3:15"
																		},
																		"nativeSrc": "8471:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8471:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8418:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "8418:43:15"
																},
																"nativeSrc": "8418:73:15",
																"nodeType": "YulFunctionCall",
																"src": "8418:73:15"
															},
															"nativeSrc": "8418:73:15",
															"nodeType": "YulExpressionStatement",
															"src": "8418:73:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "8545:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8545:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8558:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8558:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8569:3:15",
																				"nodeType": "YulLiteral",
																				"src": "8569:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8554:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8554:3:15"
																		},
																		"nativeSrc": "8554:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8554:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8501:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "8501:43:15"
																},
																"nativeSrc": "8501:73:15",
																"nodeType": "YulFunctionCall",
																"src": "8501:73:15"
															},
															"nativeSrc": "8501:73:15",
															"nodeType": "YulExpressionStatement",
															"src": "8501:73:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8595:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8595:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8606:3:15",
																				"nodeType": "YulLiteral",
																				"src": "8606:3:15",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8591:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8591:3:15"
																		},
																		"nativeSrc": "8591:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8591:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8616:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "8616:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8622:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8622:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8612:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8612:3:15"
																		},
																		"nativeSrc": "8612:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8612:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8584:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8584:6:15"
																},
																"nativeSrc": "8584:49:15",
																"nodeType": "YulFunctionCall",
																"src": "8584:49:15"
															},
															"nativeSrc": "8584:49:15",
															"nodeType": "YulExpressionStatement",
															"src": "8584:49:15"
														},
														{
															"nativeSrc": "8642:116:15",
															"nodeType": "YulAssignment",
															"src": "8642:116:15",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "8744:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8744:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8753:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "8753:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8650:93:15",
																	"nodeType": "YulIdentifier",
																	"src": "8650:93:15"
																},
																"nativeSrc": "8650:108:15",
																"nodeType": "YulFunctionCall",
																"src": "8650:108:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8642:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8642:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7550:1215:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7828:9:15",
														"nodeType": "YulTypedName",
														"src": "7828:9:15",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "7840:6:15",
														"nodeType": "YulTypedName",
														"src": "7840:6:15",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7848:6:15",
														"nodeType": "YulTypedName",
														"src": "7848:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7856:6:15",
														"nodeType": "YulTypedName",
														"src": "7856:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7864:6:15",
														"nodeType": "YulTypedName",
														"src": "7864:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7872:6:15",
														"nodeType": "YulTypedName",
														"src": "7872:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7880:6:15",
														"nodeType": "YulTypedName",
														"src": "7880:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7888:6:15",
														"nodeType": "YulTypedName",
														"src": "7888:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7899:4:15",
														"nodeType": "YulTypedName",
														"src": "7899:4:15",
														"type": ""
													}
												],
												"src": "7550:1215:15"
											},
											{
												"body": {
													"nativeSrc": "8837:263:15",
													"nodeType": "YulBlock",
													"src": "8837:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8883:83:15",
																"nodeType": "YulBlock",
																"src": "8883:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8885:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8885:77:15"
																			},
																			"nativeSrc": "8885:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8885:79:15"
																		},
																		"nativeSrc": "8885:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8885:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8858:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8858:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8867:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8867:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8854:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8854:3:15"
																		},
																		"nativeSrc": "8854:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8854:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8879:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8879:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8850:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8850:3:15"
																},
																"nativeSrc": "8850:32:15",
																"nodeType": "YulFunctionCall",
																"src": "8850:32:15"
															},
															"nativeSrc": "8847:119:15",
															"nodeType": "YulIf",
															"src": "8847:119:15"
														},
														{
															"nativeSrc": "8976:117:15",
															"nodeType": "YulBlock",
															"src": "8976:117:15",
															"statements": [
																{
																	"nativeSrc": "8991:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8991:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9005:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9005:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8995:6:15",
																			"nodeType": "YulTypedName",
																			"src": "8995:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9020:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9020:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9055:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9055:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9066:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9066:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9051:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9051:3:15"
																				},
																				"nativeSrc": "9051:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9051:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9075:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9075:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9030:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "9030:20:15"
																		},
																		"nativeSrc": "9030:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9030:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9020:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9020:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "8771:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8807:9:15",
														"nodeType": "YulTypedName",
														"src": "8807:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8818:7:15",
														"nodeType": "YulTypedName",
														"src": "8818:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8830:6:15",
														"nodeType": "YulTypedName",
														"src": "8830:6:15",
														"type": ""
													}
												],
												"src": "8771:329:15"
											},
											{
												"body": {
													"nativeSrc": "9147:77:15",
													"nodeType": "YulBlock",
													"src": "9147:77:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9202:16:15",
																"nodeType": "YulBlock",
																"src": "9202:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9211:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9211:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9214:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9214:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9204:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9204:6:15"
																			},
																			"nativeSrc": "9204:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9204:12:15"
																		},
																		"nativeSrc": "9204:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9204:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9170:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "9170:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9193:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "9193:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "9177:15:15",
																					"nodeType": "YulIdentifier",
																					"src": "9177:15:15"
																				},
																				"nativeSrc": "9177:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9177:22:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9167:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9167:2:15"
																		},
																		"nativeSrc": "9167:33:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9167:33:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9160:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9160:6:15"
																},
																"nativeSrc": "9160:41:15",
																"nodeType": "YulFunctionCall",
																"src": "9160:41:15"
															},
															"nativeSrc": "9157:61:15",
															"nodeType": "YulIf",
															"src": "9157:61:15"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "9106:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9140:5:15",
														"nodeType": "YulTypedName",
														"src": "9140:5:15",
														"type": ""
													}
												],
												"src": "9106:118:15"
											},
											{
												"body": {
													"nativeSrc": "9280:85:15",
													"nodeType": "YulBlock",
													"src": "9280:85:15",
													"statements": [
														{
															"nativeSrc": "9290:29:15",
															"nodeType": "YulAssignment",
															"src": "9290:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9312:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9312:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9299:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "9299:12:15"
																},
																"nativeSrc": "9299:20:15",
																"nodeType": "YulFunctionCall",
																"src": "9299:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9290:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "9290:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9353:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "9353:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "9328:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "9328:24:15"
																},
																"nativeSrc": "9328:31:15",
																"nodeType": "YulFunctionCall",
																"src": "9328:31:15"
															},
															"nativeSrc": "9328:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "9328:31:15"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "9230:135:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9258:6:15",
														"nodeType": "YulTypedName",
														"src": "9258:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9266:3:15",
														"nodeType": "YulTypedName",
														"src": "9266:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9274:5:15",
														"nodeType": "YulTypedName",
														"src": "9274:5:15",
														"type": ""
													}
												],
												"src": "9230:135:15"
											},
											{
												"body": {
													"nativeSrc": "9414:79:15",
													"nodeType": "YulBlock",
													"src": "9414:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9471:16:15",
																"nodeType": "YulBlock",
																"src": "9471:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9480:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9480:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9483:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9483:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9473:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9473:6:15"
																			},
																			"nativeSrc": "9473:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9473:12:15"
																		},
																		"nativeSrc": "9473:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9473:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9437:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "9437:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9462:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "9462:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "9444:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "9444:17:15"
																				},
																				"nativeSrc": "9444:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9444:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9434:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9434:2:15"
																		},
																		"nativeSrc": "9434:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9434:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9427:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9427:6:15"
																},
																"nativeSrc": "9427:43:15",
																"nodeType": "YulFunctionCall",
																"src": "9427:43:15"
															},
															"nativeSrc": "9424:63:15",
															"nodeType": "YulIf",
															"src": "9424:63:15"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "9371:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9407:5:15",
														"nodeType": "YulTypedName",
														"src": "9407:5:15",
														"type": ""
													}
												],
												"src": "9371:122:15"
											},
											{
												"body": {
													"nativeSrc": "9551:87:15",
													"nodeType": "YulBlock",
													"src": "9551:87:15",
													"statements": [
														{
															"nativeSrc": "9561:29:15",
															"nodeType": "YulAssignment",
															"src": "9561:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9583:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9583:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9570:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "9570:12:15"
																},
																"nativeSrc": "9570:20:15",
																"nodeType": "YulFunctionCall",
																"src": "9570:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9561:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "9561:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9626:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "9626:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "9599:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "9599:26:15"
																},
																"nativeSrc": "9599:33:15",
																"nodeType": "YulFunctionCall",
																"src": "9599:33:15"
															},
															"nativeSrc": "9599:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "9599:33:15"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "9499:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9529:6:15",
														"nodeType": "YulTypedName",
														"src": "9529:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9537:3:15",
														"nodeType": "YulTypedName",
														"src": "9537:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9545:5:15",
														"nodeType": "YulTypedName",
														"src": "9545:5:15",
														"type": ""
													}
												],
												"src": "9499:139:15"
											},
											{
												"body": {
													"nativeSrc": "9810:1033:15",
													"nodeType": "YulBlock",
													"src": "9810:1033:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9857:83:15",
																"nodeType": "YulBlock",
																"src": "9857:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9859:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "9859:77:15"
																			},
																			"nativeSrc": "9859:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9859:79:15"
																		},
																		"nativeSrc": "9859:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9859:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9831:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9831:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9840:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9840:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9827:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9827:3:15"
																		},
																		"nativeSrc": "9827:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9827:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9852:3:15",
																		"nodeType": "YulLiteral",
																		"src": "9852:3:15",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9823:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9823:3:15"
																},
																"nativeSrc": "9823:33:15",
																"nodeType": "YulFunctionCall",
																"src": "9823:33:15"
															},
															"nativeSrc": "9820:120:15",
															"nodeType": "YulIf",
															"src": "9820:120:15"
														},
														{
															"nativeSrc": "9950:117:15",
															"nodeType": "YulBlock",
															"src": "9950:117:15",
															"statements": [
																{
																	"nativeSrc": "9965:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9965:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9979:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9979:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9969:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9969:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9994:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9994:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10029:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10029:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10040:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10040:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10025:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10025:3:15"
																				},
																				"nativeSrc": "10025:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10025:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10049:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10049:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10004:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "10004:20:15"
																		},
																		"nativeSrc": "10004:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10004:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9994:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9994:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10077:118:15",
															"nodeType": "YulBlock",
															"src": "10077:118:15",
															"statements": [
																{
																	"nativeSrc": "10092:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10092:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10106:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10106:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10096:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10096:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10122:63:15",
																	"nodeType": "YulAssignment",
																	"src": "10122:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10157:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10157:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10168:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10168:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10153:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10153:3:15"
																				},
																				"nativeSrc": "10153:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10153:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10177:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10177:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10132:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "10132:20:15"
																		},
																		"nativeSrc": "10132:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10132:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10122:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10122:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10205:118:15",
															"nodeType": "YulBlock",
															"src": "10205:118:15",
															"statements": [
																{
																	"nativeSrc": "10220:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10220:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10234:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10234:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10224:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10224:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10250:63:15",
																	"nodeType": "YulAssignment",
																	"src": "10250:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10285:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10285:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10296:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10296:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10281:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10281:3:15"
																				},
																				"nativeSrc": "10281:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10281:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10305:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10305:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10260:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "10260:20:15"
																		},
																		"nativeSrc": "10260:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10260:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10250:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10250:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10333:118:15",
															"nodeType": "YulBlock",
															"src": "10333:118:15",
															"statements": [
																{
																	"nativeSrc": "10348:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10348:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10362:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10362:2:15",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10352:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10352:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10378:63:15",
																	"nodeType": "YulAssignment",
																	"src": "10378:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10413:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10413:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10424:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10424:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10409:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10409:3:15"
																				},
																				"nativeSrc": "10409:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10409:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10433:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10433:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10388:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "10388:20:15"
																		},
																		"nativeSrc": "10388:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10388:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10378:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10378:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10461:117:15",
															"nodeType": "YulBlock",
															"src": "10461:117:15",
															"statements": [
																{
																	"nativeSrc": "10476:17:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10476:17:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10490:3:15",
																		"nodeType": "YulLiteral",
																		"src": "10490:3:15",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10480:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10480:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10507:61:15",
																	"nodeType": "YulAssignment",
																	"src": "10507:61:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10540:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10540:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10551:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10551:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10536:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10536:3:15"
																				},
																				"nativeSrc": "10536:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10536:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10560:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10560:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "10517:18:15",
																			"nodeType": "YulIdentifier",
																			"src": "10517:18:15"
																		},
																		"nativeSrc": "10517:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10517:51:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "10507:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10507:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10588:119:15",
															"nodeType": "YulBlock",
															"src": "10588:119:15",
															"statements": [
																{
																	"nativeSrc": "10603:17:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10603:17:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10617:3:15",
																		"nodeType": "YulLiteral",
																		"src": "10617:3:15",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10607:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10607:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10634:63:15",
																	"nodeType": "YulAssignment",
																	"src": "10634:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10669:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10669:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10680:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10680:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10665:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10665:3:15"
																				},
																				"nativeSrc": "10665:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10665:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10689:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10689:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "10644:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "10644:20:15"
																		},
																		"nativeSrc": "10644:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10644:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "10634:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10634:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10717:119:15",
															"nodeType": "YulBlock",
															"src": "10717:119:15",
															"statements": [
																{
																	"nativeSrc": "10732:17:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10732:17:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10746:3:15",
																		"nodeType": "YulLiteral",
																		"src": "10746:3:15",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10736:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10736:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10763:63:15",
																	"nodeType": "YulAssignment",
																	"src": "10763:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10798:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10798:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10809:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10809:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10794:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10794:3:15"
																				},
																				"nativeSrc": "10794:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10794:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10818:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10818:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "10773:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "10773:20:15"
																		},
																		"nativeSrc": "10773:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10773:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "10763:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10763:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "9644:1199:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9732:9:15",
														"nodeType": "YulTypedName",
														"src": "9732:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9743:7:15",
														"nodeType": "YulTypedName",
														"src": "9743:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9755:6:15",
														"nodeType": "YulTypedName",
														"src": "9755:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9763:6:15",
														"nodeType": "YulTypedName",
														"src": "9763:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9771:6:15",
														"nodeType": "YulTypedName",
														"src": "9771:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9779:6:15",
														"nodeType": "YulTypedName",
														"src": "9779:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9787:6:15",
														"nodeType": "YulTypedName",
														"src": "9787:6:15",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9795:6:15",
														"nodeType": "YulTypedName",
														"src": "9795:6:15",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "9803:6:15",
														"nodeType": "YulTypedName",
														"src": "9803:6:15",
														"type": ""
													}
												],
												"src": "9644:1199:15"
											},
											{
												"body": {
													"nativeSrc": "10932:391:15",
													"nodeType": "YulBlock",
													"src": "10932:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10978:83:15",
																"nodeType": "YulBlock",
																"src": "10978:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10980:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "10980:77:15"
																			},
																			"nativeSrc": "10980:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10980:79:15"
																		},
																		"nativeSrc": "10980:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10980:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10953:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10953:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10962:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10962:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10949:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10949:3:15"
																		},
																		"nativeSrc": "10949:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10949:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10974:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10974:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10945:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10945:3:15"
																},
																"nativeSrc": "10945:32:15",
																"nodeType": "YulFunctionCall",
																"src": "10945:32:15"
															},
															"nativeSrc": "10942:119:15",
															"nodeType": "YulIf",
															"src": "10942:119:15"
														},
														{
															"nativeSrc": "11071:117:15",
															"nodeType": "YulBlock",
															"src": "11071:117:15",
															"statements": [
																{
																	"nativeSrc": "11086:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11086:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11100:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11100:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11090:6:15",
																			"nodeType": "YulTypedName",
																			"src": "11090:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11115:63:15",
																	"nodeType": "YulAssignment",
																	"src": "11115:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11150:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11150:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11161:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11161:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11146:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11146:3:15"
																				},
																				"nativeSrc": "11146:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11146:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11170:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11170:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11125:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "11125:20:15"
																		},
																		"nativeSrc": "11125:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11125:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11115:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11115:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11198:118:15",
															"nodeType": "YulBlock",
															"src": "11198:118:15",
															"statements": [
																{
																	"nativeSrc": "11213:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11213:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11227:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11227:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11217:6:15",
																			"nodeType": "YulTypedName",
																			"src": "11217:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11243:63:15",
																	"nodeType": "YulAssignment",
																	"src": "11243:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11278:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11278:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11289:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11289:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11274:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11274:3:15"
																				},
																				"nativeSrc": "11274:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11274:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11298:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11298:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11253:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "11253:20:15"
																		},
																		"nativeSrc": "11253:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11253:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11243:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11243:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "10849:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10894:9:15",
														"nodeType": "YulTypedName",
														"src": "10894:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10905:7:15",
														"nodeType": "YulTypedName",
														"src": "10905:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10917:6:15",
														"nodeType": "YulTypedName",
														"src": "10917:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10925:6:15",
														"nodeType": "YulTypedName",
														"src": "10925:6:15",
														"type": ""
													}
												],
												"src": "10849:474:15"
											},
											{
												"body": {
													"nativeSrc": "11357:152:15",
													"nodeType": "YulBlock",
													"src": "11357:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11374:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11374:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11377:77:15",
																		"nodeType": "YulLiteral",
																		"src": "11377:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11367:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11367:6:15"
																},
																"nativeSrc": "11367:88:15",
																"nodeType": "YulFunctionCall",
																"src": "11367:88:15"
															},
															"nativeSrc": "11367:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "11367:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11471:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11471:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11474:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11474:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11464:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11464:6:15"
																},
																"nativeSrc": "11464:15:15",
																"nodeType": "YulFunctionCall",
																"src": "11464:15:15"
															},
															"nativeSrc": "11464:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "11464:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11495:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11495:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11498:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11498:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11488:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11488:6:15"
																},
																"nativeSrc": "11488:15:15",
																"nodeType": "YulFunctionCall",
																"src": "11488:15:15"
															},
															"nativeSrc": "11488:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "11488:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "11329:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "11329:180:15"
											},
											{
												"body": {
													"nativeSrc": "11566:269:15",
													"nodeType": "YulBlock",
													"src": "11566:269:15",
													"statements": [
														{
															"nativeSrc": "11576:22:15",
															"nodeType": "YulAssignment",
															"src": "11576:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11590:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "11590:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11596:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11596:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11586:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11586:3:15"
																},
																"nativeSrc": "11586:12:15",
																"nodeType": "YulFunctionCall",
																"src": "11586:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11576:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11576:6:15"
																}
															]
														},
														{
															"nativeSrc": "11607:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "11607:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11637:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "11637:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11643:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11643:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11633:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11633:3:15"
																},
																"nativeSrc": "11633:12:15",
																"nodeType": "YulFunctionCall",
																"src": "11633:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11611:18:15",
																	"nodeType": "YulTypedName",
																	"src": "11611:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11684:51:15",
																"nodeType": "YulBlock",
																"src": "11684:51:15",
																"statements": [
																	{
																		"nativeSrc": "11698:27:15",
																		"nodeType": "YulAssignment",
																		"src": "11698:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11712:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "11712:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11720:4:15",
																					"nodeType": "YulLiteral",
																					"src": "11720:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11708:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "11708:3:15"
																			},
																			"nativeSrc": "11708:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11708:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11698:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11698:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11664:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "11664:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11657:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11657:6:15"
																},
																"nativeSrc": "11657:26:15",
																"nodeType": "YulFunctionCall",
																"src": "11657:26:15"
															},
															"nativeSrc": "11654:81:15",
															"nodeType": "YulIf",
															"src": "11654:81:15"
														},
														{
															"body": {
																"nativeSrc": "11787:42:15",
																"nodeType": "YulBlock",
																"src": "11787:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11801:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "11801:16:15"
																			},
																			"nativeSrc": "11801:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11801:18:15"
																		},
																		"nativeSrc": "11801:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11801:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11751:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "11751:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11774:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11774:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11782:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11782:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11771:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "11771:2:15"
																		},
																		"nativeSrc": "11771:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11771:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11748:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "11748:2:15"
																},
																"nativeSrc": "11748:38:15",
																"nodeType": "YulFunctionCall",
																"src": "11748:38:15"
															},
															"nativeSrc": "11745:84:15",
															"nodeType": "YulIf",
															"src": "11745:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11515:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11550:4:15",
														"nodeType": "YulTypedName",
														"src": "11550:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11559:6:15",
														"nodeType": "YulTypedName",
														"src": "11559:6:15",
														"type": ""
													}
												],
												"src": "11515:320:15"
											},
											{
												"body": {
													"nativeSrc": "11869:152:15",
													"nodeType": "YulBlock",
													"src": "11869:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11886:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11886:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11889:77:15",
																		"nodeType": "YulLiteral",
																		"src": "11889:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11879:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11879:6:15"
																},
																"nativeSrc": "11879:88:15",
																"nodeType": "YulFunctionCall",
																"src": "11879:88:15"
															},
															"nativeSrc": "11879:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "11879:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11983:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11983:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11986:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11986:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11976:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11976:6:15"
																},
																"nativeSrc": "11976:15:15",
																"nodeType": "YulFunctionCall",
																"src": "11976:15:15"
															},
															"nativeSrc": "11976:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "11976:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12007:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12007:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12010:4:15",
																		"nodeType": "YulLiteral",
																		"src": "12010:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12000:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12000:6:15"
																},
																"nativeSrc": "12000:15:15",
																"nodeType": "YulFunctionCall",
																"src": "12000:15:15"
															},
															"nativeSrc": "12000:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "12000:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "11841:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "11841:180:15"
											},
											{
												"body": {
													"nativeSrc": "12133:73:15",
													"nodeType": "YulBlock",
													"src": "12133:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12155:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12155:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12163:1:15",
																				"nodeType": "YulLiteral",
																				"src": "12163:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12151:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12151:3:15"
																		},
																		"nativeSrc": "12151:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12151:14:15"
																	},
																	{
																		"hexValue": "45524332305065726d69743a206578706972656420646561646c696e65",
																		"kind": "string",
																		"nativeSrc": "12167:31:15",
																		"nodeType": "YulLiteral",
																		"src": "12167:31:15",
																		"type": "",
																		"value": "ERC20Permit: expired deadline"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12144:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12144:6:15"
																},
																"nativeSrc": "12144:55:15",
																"nodeType": "YulFunctionCall",
																"src": "12144:55:15"
															},
															"nativeSrc": "12144:55:15",
															"nodeType": "YulExpressionStatement",
															"src": "12144:55:15"
														}
													]
												},
												"name": "store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd",
												"nativeSrc": "12027:179:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12125:6:15",
														"nodeType": "YulTypedName",
														"src": "12125:6:15",
														"type": ""
													}
												],
												"src": "12027:179:15"
											},
											{
												"body": {
													"nativeSrc": "12358:220:15",
													"nodeType": "YulBlock",
													"src": "12358:220:15",
													"statements": [
														{
															"nativeSrc": "12368:74:15",
															"nodeType": "YulAssignment",
															"src": "12368:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12434:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12434:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12439:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12439:2:15",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12375:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "12375:58:15"
																},
																"nativeSrc": "12375:67:15",
																"nodeType": "YulFunctionCall",
																"src": "12375:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12368:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12368:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12540:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12540:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd",
																	"nativeSrc": "12451:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "12451:88:15"
																},
																"nativeSrc": "12451:93:15",
																"nodeType": "YulFunctionCall",
																"src": "12451:93:15"
															},
															"nativeSrc": "12451:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "12451:93:15"
														},
														{
															"nativeSrc": "12553:19:15",
															"nodeType": "YulAssignment",
															"src": "12553:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12564:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12564:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12569:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12569:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12560:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12560:3:15"
																},
																"nativeSrc": "12560:12:15",
																"nodeType": "YulFunctionCall",
																"src": "12560:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12553:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12553:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12212:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12346:3:15",
														"nodeType": "YulTypedName",
														"src": "12346:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12354:3:15",
														"nodeType": "YulTypedName",
														"src": "12354:3:15",
														"type": ""
													}
												],
												"src": "12212:366:15"
											},
											{
												"body": {
													"nativeSrc": "12755:248:15",
													"nodeType": "YulBlock",
													"src": "12755:248:15",
													"statements": [
														{
															"nativeSrc": "12765:26:15",
															"nodeType": "YulAssignment",
															"src": "12765:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12777:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12777:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12788:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12788:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12773:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12773:3:15"
																},
																"nativeSrc": "12773:18:15",
																"nodeType": "YulFunctionCall",
																"src": "12773:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12765:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12765:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12812:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12812:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12823:1:15",
																				"nodeType": "YulLiteral",
																				"src": "12823:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12808:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12808:3:15"
																		},
																		"nativeSrc": "12808:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12808:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12831:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "12831:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12837:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12837:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12827:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12827:3:15"
																		},
																		"nativeSrc": "12827:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12827:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12801:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12801:6:15"
																},
																"nativeSrc": "12801:47:15",
																"nodeType": "YulFunctionCall",
																"src": "12801:47:15"
															},
															"nativeSrc": "12801:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "12801:47:15"
														},
														{
															"nativeSrc": "12857:139:15",
															"nodeType": "YulAssignment",
															"src": "12857:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12991:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "12991:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12865:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "12865:124:15"
																},
																"nativeSrc": "12865:131:15",
																"nodeType": "YulFunctionCall",
																"src": "12865:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12857:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12857:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12584:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12735:9:15",
														"nodeType": "YulTypedName",
														"src": "12735:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12750:4:15",
														"nodeType": "YulTypedName",
														"src": "12750:4:15",
														"type": ""
													}
												],
												"src": "12584:419:15"
											},
											{
												"body": {
													"nativeSrc": "13247:537:15",
													"nodeType": "YulBlock",
													"src": "13247:537:15",
													"statements": [
														{
															"nativeSrc": "13257:27:15",
															"nodeType": "YulAssignment",
															"src": "13257:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13269:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13269:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13280:3:15",
																		"nodeType": "YulLiteral",
																		"src": "13280:3:15",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13265:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13265:3:15"
																},
																"nativeSrc": "13265:19:15",
																"nodeType": "YulFunctionCall",
																"src": "13265:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13257:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13257:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13338:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13338:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13351:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13351:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13362:1:15",
																				"nodeType": "YulLiteral",
																				"src": "13362:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13347:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13347:3:15"
																		},
																		"nativeSrc": "13347:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13347:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "13294:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "13294:43:15"
																},
																"nativeSrc": "13294:71:15",
																"nodeType": "YulFunctionCall",
																"src": "13294:71:15"
															},
															"nativeSrc": "13294:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "13294:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13419:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13419:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13432:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13432:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13443:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13443:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13428:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13428:3:15"
																		},
																		"nativeSrc": "13428:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13428:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13375:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "13375:43:15"
																},
																"nativeSrc": "13375:72:15",
																"nodeType": "YulFunctionCall",
																"src": "13375:72:15"
															},
															"nativeSrc": "13375:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "13375:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13501:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13501:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13514:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13514:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13525:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13525:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13510:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13510:3:15"
																		},
																		"nativeSrc": "13510:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13510:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13457:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "13457:43:15"
																},
																"nativeSrc": "13457:72:15",
																"nodeType": "YulFunctionCall",
																"src": "13457:72:15"
															},
															"nativeSrc": "13457:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "13457:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "13583:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13583:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13596:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13596:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13607:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13607:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13592:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13592:3:15"
																		},
																		"nativeSrc": "13592:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13592:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13539:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "13539:43:15"
																},
																"nativeSrc": "13539:72:15",
																"nodeType": "YulFunctionCall",
																"src": "13539:72:15"
															},
															"nativeSrc": "13539:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "13539:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "13665:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13665:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13678:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13678:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13689:3:15",
																				"nodeType": "YulLiteral",
																				"src": "13689:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13674:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13674:3:15"
																		},
																		"nativeSrc": "13674:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13674:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13621:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "13621:43:15"
																},
																"nativeSrc": "13621:73:15",
																"nodeType": "YulFunctionCall",
																"src": "13621:73:15"
															},
															"nativeSrc": "13621:73:15",
															"nodeType": "YulExpressionStatement",
															"src": "13621:73:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "13748:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13748:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13761:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13761:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13772:3:15",
																				"nodeType": "YulLiteral",
																				"src": "13772:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13757:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13757:3:15"
																		},
																		"nativeSrc": "13757:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13757:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13704:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "13704:43:15"
																},
																"nativeSrc": "13704:73:15",
																"nodeType": "YulFunctionCall",
																"src": "13704:73:15"
															},
															"nativeSrc": "13704:73:15",
															"nodeType": "YulExpressionStatement",
															"src": "13704:73:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13009:775:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13179:9:15",
														"nodeType": "YulTypedName",
														"src": "13179:9:15",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "13191:6:15",
														"nodeType": "YulTypedName",
														"src": "13191:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "13199:6:15",
														"nodeType": "YulTypedName",
														"src": "13199:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13207:6:15",
														"nodeType": "YulTypedName",
														"src": "13207:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13215:6:15",
														"nodeType": "YulTypedName",
														"src": "13215:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13223:6:15",
														"nodeType": "YulTypedName",
														"src": "13223:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13231:6:15",
														"nodeType": "YulTypedName",
														"src": "13231:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13242:4:15",
														"nodeType": "YulTypedName",
														"src": "13242:4:15",
														"type": ""
													}
												],
												"src": "13009:775:15"
											},
											{
												"body": {
													"nativeSrc": "13896:74:15",
													"nodeType": "YulBlock",
													"src": "13896:74:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13918:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13918:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13926:1:15",
																				"nodeType": "YulLiteral",
																				"src": "13926:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13914:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13914:3:15"
																		},
																		"nativeSrc": "13914:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13914:14:15"
																	},
																	{
																		"hexValue": "45524332305065726d69743a20696e76616c6964207369676e6174757265",
																		"kind": "string",
																		"nativeSrc": "13930:32:15",
																		"nodeType": "YulLiteral",
																		"src": "13930:32:15",
																		"type": "",
																		"value": "ERC20Permit: invalid signature"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13907:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13907:6:15"
																},
																"nativeSrc": "13907:56:15",
																"nodeType": "YulFunctionCall",
																"src": "13907:56:15"
															},
															"nativeSrc": "13907:56:15",
															"nodeType": "YulExpressionStatement",
															"src": "13907:56:15"
														}
													]
												},
												"name": "store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124",
												"nativeSrc": "13790:180:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13888:6:15",
														"nodeType": "YulTypedName",
														"src": "13888:6:15",
														"type": ""
													}
												],
												"src": "13790:180:15"
											},
											{
												"body": {
													"nativeSrc": "14122:220:15",
													"nodeType": "YulBlock",
													"src": "14122:220:15",
													"statements": [
														{
															"nativeSrc": "14132:74:15",
															"nodeType": "YulAssignment",
															"src": "14132:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14198:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14198:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14203:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14203:2:15",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14139:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "14139:58:15"
																},
																"nativeSrc": "14139:67:15",
																"nodeType": "YulFunctionCall",
																"src": "14139:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14132:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14132:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14304:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14304:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124",
																	"nativeSrc": "14215:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "14215:88:15"
																},
																"nativeSrc": "14215:93:15",
																"nodeType": "YulFunctionCall",
																"src": "14215:93:15"
															},
															"nativeSrc": "14215:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "14215:93:15"
														},
														{
															"nativeSrc": "14317:19:15",
															"nodeType": "YulAssignment",
															"src": "14317:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14328:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14328:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14333:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14333:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14324:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14324:3:15"
																},
																"nativeSrc": "14324:12:15",
																"nodeType": "YulFunctionCall",
																"src": "14324:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14317:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14317:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13976:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14110:3:15",
														"nodeType": "YulTypedName",
														"src": "14110:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14118:3:15",
														"nodeType": "YulTypedName",
														"src": "14118:3:15",
														"type": ""
													}
												],
												"src": "13976:366:15"
											},
											{
												"body": {
													"nativeSrc": "14519:248:15",
													"nodeType": "YulBlock",
													"src": "14519:248:15",
													"statements": [
														{
															"nativeSrc": "14529:26:15",
															"nodeType": "YulAssignment",
															"src": "14529:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14541:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14541:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14552:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14552:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14537:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14537:3:15"
																},
																"nativeSrc": "14537:18:15",
																"nodeType": "YulFunctionCall",
																"src": "14537:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14529:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14529:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14576:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14576:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14587:1:15",
																				"nodeType": "YulLiteral",
																				"src": "14587:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14572:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14572:3:15"
																		},
																		"nativeSrc": "14572:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14572:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14595:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "14595:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14601:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14601:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14591:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14591:3:15"
																		},
																		"nativeSrc": "14591:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14591:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14565:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14565:6:15"
																},
																"nativeSrc": "14565:47:15",
																"nodeType": "YulFunctionCall",
																"src": "14565:47:15"
															},
															"nativeSrc": "14565:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "14565:47:15"
														},
														{
															"nativeSrc": "14621:139:15",
															"nodeType": "YulAssignment",
															"src": "14621:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14755:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "14755:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14629:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "14629:124:15"
																},
																"nativeSrc": "14629:131:15",
																"nodeType": "YulFunctionCall",
																"src": "14629:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14621:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14621:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14348:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14499:9:15",
														"nodeType": "YulTypedName",
														"src": "14499:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14514:4:15",
														"nodeType": "YulTypedName",
														"src": "14514:4:15",
														"type": ""
													}
												],
												"src": "14348:419:15"
											},
											{
												"body": {
													"nativeSrc": "14927:288:15",
													"nodeType": "YulBlock",
													"src": "14927:288:15",
													"statements": [
														{
															"nativeSrc": "14937:26:15",
															"nodeType": "YulAssignment",
															"src": "14937:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14949:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14949:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14960:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14960:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14945:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14945:3:15"
																},
																"nativeSrc": "14945:18:15",
																"nodeType": "YulFunctionCall",
																"src": "14945:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14937:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14937:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15017:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15017:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15030:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15030:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15041:1:15",
																				"nodeType": "YulLiteral",
																				"src": "15041:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15026:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15026:3:15"
																		},
																		"nativeSrc": "15026:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15026:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14973:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "14973:43:15"
																},
																"nativeSrc": "14973:71:15",
																"nodeType": "YulFunctionCall",
																"src": "14973:71:15"
															},
															"nativeSrc": "14973:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "14973:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15098:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15098:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15111:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15111:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15122:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15122:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15107:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15107:3:15"
																		},
																		"nativeSrc": "15107:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15107:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15054:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "15054:43:15"
																},
																"nativeSrc": "15054:72:15",
																"nodeType": "YulFunctionCall",
																"src": "15054:72:15"
															},
															"nativeSrc": "15054:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "15054:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15180:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15180:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15193:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15193:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15204:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15204:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15189:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15189:3:15"
																		},
																		"nativeSrc": "15189:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15189:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15136:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "15136:43:15"
																},
																"nativeSrc": "15136:72:15",
																"nodeType": "YulFunctionCall",
																"src": "15136:72:15"
															},
															"nativeSrc": "15136:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "15136:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14773:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14883:9:15",
														"nodeType": "YulTypedName",
														"src": "14883:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14895:6:15",
														"nodeType": "YulTypedName",
														"src": "14895:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14903:6:15",
														"nodeType": "YulTypedName",
														"src": "14903:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14911:6:15",
														"nodeType": "YulTypedName",
														"src": "14911:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14922:4:15",
														"nodeType": "YulTypedName",
														"src": "14922:4:15",
														"type": ""
													}
												],
												"src": "14773:442:15"
											},
											{
												"body": {
													"nativeSrc": "15319:124:15",
													"nodeType": "YulBlock",
													"src": "15319:124:15",
													"statements": [
														{
															"nativeSrc": "15329:26:15",
															"nodeType": "YulAssignment",
															"src": "15329:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15341:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15341:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15352:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15352:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15337:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15337:3:15"
																},
																"nativeSrc": "15337:18:15",
																"nodeType": "YulFunctionCall",
																"src": "15337:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15329:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15329:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15409:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15409:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15422:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15422:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15433:1:15",
																				"nodeType": "YulLiteral",
																				"src": "15433:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15418:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15418:3:15"
																		},
																		"nativeSrc": "15418:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15418:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15365:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "15365:43:15"
																},
																"nativeSrc": "15365:71:15",
																"nodeType": "YulFunctionCall",
																"src": "15365:71:15"
															},
															"nativeSrc": "15365:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "15365:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "15221:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15291:9:15",
														"nodeType": "YulTypedName",
														"src": "15291:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15303:6:15",
														"nodeType": "YulTypedName",
														"src": "15303:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15314:4:15",
														"nodeType": "YulTypedName",
														"src": "15314:4:15",
														"type": ""
													}
												],
												"src": "15221:222:15"
											},
											{
												"body": {
													"nativeSrc": "15477:152:15",
													"nodeType": "YulBlock",
													"src": "15477:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15494:1:15",
																		"nodeType": "YulLiteral",
																		"src": "15494:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15497:77:15",
																		"nodeType": "YulLiteral",
																		"src": "15497:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15487:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15487:6:15"
																},
																"nativeSrc": "15487:88:15",
																"nodeType": "YulFunctionCall",
																"src": "15487:88:15"
															},
															"nativeSrc": "15487:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "15487:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15591:1:15",
																		"nodeType": "YulLiteral",
																		"src": "15591:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15594:4:15",
																		"nodeType": "YulLiteral",
																		"src": "15594:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15584:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15584:6:15"
																},
																"nativeSrc": "15584:15:15",
																"nodeType": "YulFunctionCall",
																"src": "15584:15:15"
															},
															"nativeSrc": "15584:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "15584:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15615:1:15",
																		"nodeType": "YulLiteral",
																		"src": "15615:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15618:4:15",
																		"nodeType": "YulLiteral",
																		"src": "15618:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15608:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15608:6:15"
																},
																"nativeSrc": "15608:15:15",
																"nodeType": "YulFunctionCall",
																"src": "15608:15:15"
															},
															"nativeSrc": "15608:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "15608:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15449:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "15449:180:15"
											},
											{
												"body": {
													"nativeSrc": "15679:147:15",
													"nodeType": "YulBlock",
													"src": "15679:147:15",
													"statements": [
														{
															"nativeSrc": "15689:25:15",
															"nodeType": "YulAssignment",
															"src": "15689:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15712:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "15712:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15694:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "15694:17:15"
																},
																"nativeSrc": "15694:20:15",
																"nodeType": "YulFunctionCall",
																"src": "15694:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15689:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "15689:1:15"
																}
															]
														},
														{
															"nativeSrc": "15723:25:15",
															"nodeType": "YulAssignment",
															"src": "15723:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15746:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "15746:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15728:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "15728:17:15"
																},
																"nativeSrc": "15728:20:15",
																"nodeType": "YulFunctionCall",
																"src": "15728:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15723:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "15723:1:15"
																}
															]
														},
														{
															"nativeSrc": "15757:16:15",
															"nodeType": "YulAssignment",
															"src": "15757:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15768:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "15768:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15771:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "15771:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15764:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15764:3:15"
																},
																"nativeSrc": "15764:9:15",
																"nodeType": "YulFunctionCall",
																"src": "15764:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15757:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15757:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15797:22:15",
																"nodeType": "YulBlock",
																"src": "15797:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15799:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "15799:16:15"
																			},
																			"nativeSrc": "15799:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15799:18:15"
																		},
																		"nativeSrc": "15799:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "15799:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15789:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "15789:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15792:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15792:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15786:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "15786:2:15"
																},
																"nativeSrc": "15786:10:15",
																"nodeType": "YulFunctionCall",
																"src": "15786:10:15"
															},
															"nativeSrc": "15783:36:15",
															"nodeType": "YulIf",
															"src": "15783:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15635:191:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15666:1:15",
														"nodeType": "YulTypedName",
														"src": "15666:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15669:1:15",
														"nodeType": "YulTypedName",
														"src": "15669:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15675:3:15",
														"nodeType": "YulTypedName",
														"src": "15675:3:15",
														"type": ""
													}
												],
												"src": "15635:191:15"
											},
											{
												"body": {
													"nativeSrc": "16042:454:15",
													"nodeType": "YulBlock",
													"src": "16042:454:15",
													"statements": [
														{
															"nativeSrc": "16052:27:15",
															"nodeType": "YulAssignment",
															"src": "16052:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16064:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16064:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16075:3:15",
																		"nodeType": "YulLiteral",
																		"src": "16075:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16060:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16060:3:15"
																},
																"nativeSrc": "16060:19:15",
																"nodeType": "YulFunctionCall",
																"src": "16060:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16052:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16052:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16133:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16133:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16146:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16146:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16157:1:15",
																				"nodeType": "YulLiteral",
																				"src": "16157:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16142:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16142:3:15"
																		},
																		"nativeSrc": "16142:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16142:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "16089:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16089:43:15"
																},
																"nativeSrc": "16089:71:15",
																"nodeType": "YulFunctionCall",
																"src": "16089:71:15"
															},
															"nativeSrc": "16089:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "16089:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16214:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16214:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16227:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16227:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16238:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16238:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16223:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16223:3:15"
																		},
																		"nativeSrc": "16223:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16223:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "16170:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16170:43:15"
																},
																"nativeSrc": "16170:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16170:72:15"
															},
															"nativeSrc": "16170:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16170:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16296:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16296:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16309:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16309:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16320:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16320:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16305:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16305:3:15"
																		},
																		"nativeSrc": "16305:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16305:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "16252:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16252:43:15"
																},
																"nativeSrc": "16252:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16252:72:15"
															},
															"nativeSrc": "16252:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16252:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "16378:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16378:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16391:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16391:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16402:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16402:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16387:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16387:3:15"
																		},
																		"nativeSrc": "16387:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16387:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16334:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16334:43:15"
																},
																"nativeSrc": "16334:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16334:72:15"
															},
															"nativeSrc": "16334:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16334:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "16460:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16460:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16473:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16473:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16484:3:15",
																				"nodeType": "YulLiteral",
																				"src": "16484:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16469:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16469:3:15"
																		},
																		"nativeSrc": "16469:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16469:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16416:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16416:43:15"
																},
																"nativeSrc": "16416:73:15",
																"nodeType": "YulFunctionCall",
																"src": "16416:73:15"
															},
															"nativeSrc": "16416:73:15",
															"nodeType": "YulExpressionStatement",
															"src": "16416:73:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "15832:664:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15982:9:15",
														"nodeType": "YulTypedName",
														"src": "15982:9:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "15994:6:15",
														"nodeType": "YulTypedName",
														"src": "15994:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16002:6:15",
														"nodeType": "YulTypedName",
														"src": "16002:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16010:6:15",
														"nodeType": "YulTypedName",
														"src": "16010:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16018:6:15",
														"nodeType": "YulTypedName",
														"src": "16018:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16026:6:15",
														"nodeType": "YulTypedName",
														"src": "16026:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16037:4:15",
														"nodeType": "YulTypedName",
														"src": "16037:4:15",
														"type": ""
													}
												],
												"src": "15832:664:15"
											},
											{
												"body": {
													"nativeSrc": "16680:367:15",
													"nodeType": "YulBlock",
													"src": "16680:367:15",
													"statements": [
														{
															"nativeSrc": "16690:27:15",
															"nodeType": "YulAssignment",
															"src": "16690:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16702:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16702:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16713:3:15",
																		"nodeType": "YulLiteral",
																		"src": "16713:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16698:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16698:3:15"
																},
																"nativeSrc": "16698:19:15",
																"nodeType": "YulFunctionCall",
																"src": "16698:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16690:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16690:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16771:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16771:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16784:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16784:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16795:1:15",
																				"nodeType": "YulLiteral",
																				"src": "16795:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16780:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16780:3:15"
																		},
																		"nativeSrc": "16780:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16780:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "16727:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16727:43:15"
																},
																"nativeSrc": "16727:71:15",
																"nodeType": "YulFunctionCall",
																"src": "16727:71:15"
															},
															"nativeSrc": "16727:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "16727:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16848:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16848:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16861:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16861:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16872:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16872:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16857:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16857:3:15"
																		},
																		"nativeSrc": "16857:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16857:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "16808:39:15",
																	"nodeType": "YulIdentifier",
																	"src": "16808:39:15"
																},
																"nativeSrc": "16808:68:15",
																"nodeType": "YulFunctionCall",
																"src": "16808:68:15"
															},
															"nativeSrc": "16808:68:15",
															"nodeType": "YulExpressionStatement",
															"src": "16808:68:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16930:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16930:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16943:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16943:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16954:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16954:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16939:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16939:3:15"
																		},
																		"nativeSrc": "16939:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16939:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "16886:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16886:43:15"
																},
																"nativeSrc": "16886:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16886:72:15"
															},
															"nativeSrc": "16886:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16886:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "17012:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "17012:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17025:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17025:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17036:2:15",
																				"nodeType": "YulLiteral",
																				"src": "17036:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17021:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17021:3:15"
																		},
																		"nativeSrc": "17021:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17021:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "16968:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16968:43:15"
																},
																"nativeSrc": "16968:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16968:72:15"
															},
															"nativeSrc": "16968:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16968:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "16502:545:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16628:9:15",
														"nodeType": "YulTypedName",
														"src": "16628:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16640:6:15",
														"nodeType": "YulTypedName",
														"src": "16640:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16648:6:15",
														"nodeType": "YulTypedName",
														"src": "16648:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16656:6:15",
														"nodeType": "YulTypedName",
														"src": "16656:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16664:6:15",
														"nodeType": "YulTypedName",
														"src": "16664:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16675:4:15",
														"nodeType": "YulTypedName",
														"src": "16675:4:15",
														"type": ""
													}
												],
												"src": "16502:545:15"
											},
											{
												"body": {
													"nativeSrc": "17081:152:15",
													"nodeType": "YulBlock",
													"src": "17081:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17098:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17098:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17101:77:15",
																		"nodeType": "YulLiteral",
																		"src": "17101:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17091:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17091:6:15"
																},
																"nativeSrc": "17091:88:15",
																"nodeType": "YulFunctionCall",
																"src": "17091:88:15"
															},
															"nativeSrc": "17091:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "17091:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17195:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17195:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17198:4:15",
																		"nodeType": "YulLiteral",
																		"src": "17198:4:15",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17188:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17188:6:15"
																},
																"nativeSrc": "17188:15:15",
																"nodeType": "YulFunctionCall",
																"src": "17188:15:15"
															},
															"nativeSrc": "17188:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "17188:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17219:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17219:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17222:4:15",
																		"nodeType": "YulLiteral",
																		"src": "17222:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17212:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17212:6:15"
																},
																"nativeSrc": "17212:15:15",
																"nodeType": "YulFunctionCall",
																"src": "17212:15:15"
															},
															"nativeSrc": "17212:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "17212:15:15"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "17053:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "17053:180:15"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: expired deadline\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1761": [
									{
										"length": 32,
										"start": 2506
									}
								],
								"1763": [
									{
										"length": 32,
										"start": 2465
									}
								],
								"1765": [
									{
										"length": 32,
										"start": 2379
									}
								],
								"1767": [
									{
										"length": 32,
										"start": 4064
									}
								],
								"1769": [
									{
										"length": 32,
										"start": 4097
									}
								],
								"1772": [
									{
										"length": 32,
										"start": 2567
									}
								],
								"1775": [
									{
										"length": 32,
										"start": 2626
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100e8575f3560e01c80637ecebe001161008a578063a0712d6811610064578063a0712d6814610266578063a9059cbb14610282578063d505accf146102b2578063dd62ed3e146102ce576100e8565b80637ecebe00146101f457806384b0196e1461022457806395d89b4114610248576100e8565b806323b872dd116100c657806323b872dd14610158578063313ce567146101885780633644e515146101a657806370a08231146101c4576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f5ffd5b6100f46102fe565b60405161010191906114b7565b60405180910390f35b610124600480360381019061011f9190611568565b61038e565b60405161013191906115c0565b60405180910390f35b6101426103b0565b60405161014f91906115e8565b60405180910390f35b610172600480360381019061016d9190611601565b6103b9565b60405161017f91906115c0565b60405180910390f35b6101906103e7565b60405161019d919061166c565b60405180910390f35b6101ae6103ef565b6040516101bb919061169d565b60405180910390f35b6101de60048036038101906101d991906116b6565b6103fd565b6040516101eb91906115e8565b60405180910390f35b61020e600480360381019061020991906116b6565b610442565b60405161021b91906115e8565b60405180910390f35b61022c610488565b60405161023f97969594939291906117e1565b60405180910390f35b61025061052d565b60405161025d91906114b7565b60405180910390f35b610280600480360381019061027b9190611863565b6105bd565b005b61029c60048036038101906102979190611568565b6105ca565b6040516102a991906115c0565b60405180910390f35b6102cc60048036038101906102c791906118e2565b6105ec565b005b6102e860048036038101906102e3919061197f565b61072b565b6040516102f591906115e8565b60405180910390f35b60606003805461030d906119ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610339906119ea565b80156103845780601f1061035b57610100808354040283529160200191610384565b820191905f5260205f20905b81548152906001019060200180831161036757829003601f168201915b5050505050905090565b5f5f6103986107ad565b90506103a58185856107b4565b600191505092915050565b5f600254905090565b5f5f6103c36107ad565b90506103d08582856107c6565b6103db858585610858565b60019150509392505050565b5f6012905090565b5f6103f8610948565b905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f6060805f5f5f60606104996109fe565b6104a1610a39565b46305f5f1b5f67ffffffffffffffff8111156104c0576104bf611a1a565b5b6040519080825280602002602001820160405280156104ee5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b60606004805461053c906119ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610568906119ea565b80156105b35780601f1061058a576101008083540402835291602001916105b3565b820191905f5260205f20905b81548152906001019060200180831161059657829003601f168201915b5050505050905090565b6105c73382610a74565b50565b5f5f6105d46107ad565b90506105e1818585610858565b600191505092915050565b8342111561062f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062690611a91565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861065d8c610af3565b8960405160200161067396959493929190611aaf565b6040516020818303038152906040528051906020012090505f61069582610b8d565b90505f6106a482878787610ba6565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b90611b58565b60405180910390fd5b61071f8a8a8a6107b4565b50505050505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6107c18383836001610bd4565b505050565b5f6107d1848461072b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108525781811015610843578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161083a93929190611b76565b60405180910390fd5b61085184848484035f610bd4565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108c8575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108bf9190611bab565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610938575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161092f9190611bab565b60405180910390fd5b610943838383610da3565b505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480156109c357507f000000000000000000000000000000000000000000000000000000000000000046145b156109f0577f000000000000000000000000000000000000000000000000000000000000000090506109fb565b6109f8610fbc565b90505b90565b6060610a3460057f000000000000000000000000000000000000000000000000000000000000000061105190919063ffffffff16565b905090565b6060610a6f60067f000000000000000000000000000000000000000000000000000000000000000061105190919063ffffffff16565b905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ae4575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610adb9190611bab565b60405180910390fd5b610aef5f8383610da3565b5050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050600160075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b819190611bf1565b92505081905550919050565b5f610b9f610b99610948565b836110fe565b9050919050565b5f5f5f5f610bb68888888861113e565b925092509250610bc68282611225565b829350505050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c44575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c3b9190611bab565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cb4575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610cab9190611bab565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610d9d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d9491906115e8565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610df3578060025f828254610de79190611bf1565b92505081905550610ec1565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e7c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e7393929190611b76565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f08578060025f8282540392505081905550610f52565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610faf91906115e8565b60405180910390a3505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611036959493929190611c24565b60405160208183030381529060405280519060200120905090565b606060ff5f1b831461106d5761106683611387565b90506110f8565b818054611079906119ea565b80601f01602080910402602001604051908101604052809291908181526020018280546110a5906119ea565b80156110f05780601f106110c7576101008083540402835291602001916110f0565b820191905f5260205f20905b8154815290600101906020018083116110d357829003601f168201915b505050505090505b92915050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f5f5f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c111561117a575f60038592509250925061121b565b5f6001888888886040515f815260200160405260405161119d9493929190611c75565b6020604051602081039080840390855afa1580156111bd573d5f5f3e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361120e575f60015f5f1b9350935093505061121b565b805f5f5f1b935093509350505b9450945094915050565b5f600381111561123857611237611cb8565b5b82600381111561124b5761124a611cb8565b5b0315611383576001600381111561126557611264611cb8565b5b82600381111561127857611277611cb8565b5b036112af576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156112c3576112c2611cb8565b5b8260038111156112d6576112d5611cb8565b5b0361131a57805f1c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161131191906115e8565b60405180910390fd5b60038081111561132d5761132c611cb8565b5b8260038111156113405761133f611cb8565b5b0361138257806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401611379919061169d565b60405180910390fd5b5b5050565b60605f611393836113f9565b90505f602067ffffffffffffffff8111156113b1576113b0611a1a565b5b6040519080825280601f01601f1916602001820160405280156113e35781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f5f60ff835f1c169050601f81111561143e576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61148982611447565b6114938185611451565b93506114a3818560208601611461565b6114ac8161146f565b840191505092915050565b5f6020820190508181035f8301526114cf818461147f565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611504826114db565b9050919050565b611514816114fa565b811461151e575f5ffd5b50565b5f8135905061152f8161150b565b92915050565b5f819050919050565b61154781611535565b8114611551575f5ffd5b50565b5f813590506115628161153e565b92915050565b5f5f6040838503121561157e5761157d6114d7565b5b5f61158b85828601611521565b925050602061159c85828601611554565b9150509250929050565b5f8115159050919050565b6115ba816115a6565b82525050565b5f6020820190506115d35f8301846115b1565b92915050565b6115e281611535565b82525050565b5f6020820190506115fb5f8301846115d9565b92915050565b5f5f5f60608486031215611618576116176114d7565b5b5f61162586828701611521565b935050602061163686828701611521565b925050604061164786828701611554565b9150509250925092565b5f60ff82169050919050565b61166681611651565b82525050565b5f60208201905061167f5f83018461165d565b92915050565b5f819050919050565b61169781611685565b82525050565b5f6020820190506116b05f83018461168e565b92915050565b5f602082840312156116cb576116ca6114d7565b5b5f6116d884828501611521565b91505092915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611715816116e1565b82525050565b611724816114fa565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61175c81611535565b82525050565b5f61176d8383611753565b60208301905092915050565b5f602082019050919050565b5f61178f8261172a565b6117998185611734565b93506117a483611744565b805f5b838110156117d45781516117bb8882611762565b97506117c683611779565b9250506001810190506117a7565b5085935050505092915050565b5f60e0820190506117f45f83018a61170c565b8181036020830152611806818961147f565b9050818103604083015261181a818861147f565b905061182960608301876115d9565b611836608083018661171b565b61184360a083018561168e565b81810360c08301526118558184611785565b905098975050505050505050565b5f60208284031215611878576118776114d7565b5b5f61188584828501611554565b91505092915050565b61189781611651565b81146118a1575f5ffd5b50565b5f813590506118b28161188e565b92915050565b6118c181611685565b81146118cb575f5ffd5b50565b5f813590506118dc816118b8565b92915050565b5f5f5f5f5f5f5f60e0888a0312156118fd576118fc6114d7565b5b5f61190a8a828b01611521565b975050602061191b8a828b01611521565b965050604061192c8a828b01611554565b955050606061193d8a828b01611554565b945050608061194e8a828b016118a4565b93505060a061195f8a828b016118ce565b92505060c06119708a828b016118ce565b91505092959891949750929550565b5f5f60408385031215611995576119946114d7565b5b5f6119a285828601611521565b92505060206119b385828601611521565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a0157607f821691505b602082108103611a1457611a136119bd565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f45524332305065726d69743a206578706972656420646561646c696e650000005f82015250565b5f611a7b601d83611451565b9150611a8682611a47565b602082019050919050565b5f6020820190508181035f830152611aa881611a6f565b9050919050565b5f60c082019050611ac25f83018961168e565b611acf602083018861171b565b611adc604083018761171b565b611ae960608301866115d9565b611af660808301856115d9565b611b0360a08301846115d9565b979650505050505050565b7f45524332305065726d69743a20696e76616c6964207369676e617475726500005f82015250565b5f611b42601e83611451565b9150611b4d82611b0e565b602082019050919050565b5f6020820190508181035f830152611b6f81611b36565b9050919050565b5f606082019050611b895f83018661171b565b611b9660208301856115d9565b611ba360408301846115d9565b949350505050565b5f602082019050611bbe5f83018461171b565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611bfb82611535565b9150611c0683611535565b9250828201905080821115611c1e57611c1d611bc4565b5b92915050565b5f60a082019050611c375f83018861168e565b611c44602083018761168e565b611c51604083018661168e565b611c5e60608301856115d9565b611c6b608083018461171b565b9695505050505050565b5f608082019050611c885f83018761168e565b611c95602083018661165d565b611ca2604083018561168e565b611caf606083018461168e565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea2646970667358221220121e0328fbb19f1c9562b8215af2f13afe49012b95f6e3a4b9009b03791d430564736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2CE JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x248 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C4 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x14B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x169D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH2 0x442 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x14B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x1863 JUMP JUMPDEST PUSH2 0x5BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0x5EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x30D SWAP1 PUSH2 0x19EA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x339 SWAP1 PUSH2 0x19EA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x384 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x384 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x367 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x398 PUSH2 0x7AD JUMP JUMPDEST SWAP1 POP PUSH2 0x3A5 DUP2 DUP6 DUP6 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3C3 PUSH2 0x7AD JUMP JUMPDEST SWAP1 POP PUSH2 0x3D0 DUP6 DUP3 DUP6 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x3DB DUP6 DUP6 DUP6 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3F8 PUSH2 0x948 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 PUSH0 PUSH0 PUSH1 0x60 PUSH2 0x499 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x4A1 PUSH2 0xA39 JUMP JUMPDEST CHAINID ADDRESS PUSH0 PUSH0 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4BF PUSH2 0x1A1A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4EE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x53C SWAP1 PUSH2 0x19EA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x568 SWAP1 PUSH2 0x19EA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x58A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x596 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5C7 CALLER DUP3 PUSH2 0xA74 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5D4 PUSH2 0x7AD JUMP JUMPDEST SWAP1 POP PUSH2 0x5E1 DUP2 DUP6 DUP6 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x62F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x626 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x65D DUP13 PUSH2 0xAF3 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x673 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x695 DUP3 PUSH2 0xB8D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x6A4 DUP3 DUP8 DUP8 DUP8 PUSH2 0xBA6 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x714 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70B SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71F DUP11 DUP11 DUP11 PUSH2 0x7B4 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7C1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBD4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7D1 DUP5 DUP5 PUSH2 0x72B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x852 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x843 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xBD4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BF SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x938 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x943 DUP4 DUP4 DUP4 PUSH2 0xDA3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x9C3 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x9F0 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x9FB JUMP JUMPDEST PUSH2 0x9F8 PUSH2 0xFBC JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA34 PUSH1 0x5 PUSH32 0x0 PUSH2 0x1051 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA6F PUSH1 0x6 PUSH32 0x0 PUSH2 0x1051 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAE4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADB SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAEF PUSH0 DUP4 DUP4 PUSH2 0xDA3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB81 SWAP2 SWAP1 PUSH2 0x1BF1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB9F PUSH2 0xB99 PUSH2 0x948 JUMP JUMPDEST DUP4 PUSH2 0x10FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0xBB6 DUP9 DUP9 DUP9 DUP9 PUSH2 0x113E JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xBC6 DUP3 DUP3 PUSH2 0x1225 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC44 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAB SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD9D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD94 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF3 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDE7 SWAP2 SWAP1 PUSH2 0x1BF1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEC1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE7C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE73 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF08 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFAF SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1036 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x106D JUMPI PUSH2 0x1066 DUP4 PUSH2 0x1387 JUMP JUMPDEST SWAP1 POP PUSH2 0x10F8 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1079 SWAP1 PUSH2 0x19EA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10A5 SWAP1 PUSH2 0x19EA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10F0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10C7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10F0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10D3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x117A JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x121B JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x119D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11BD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x120E JUMPI PUSH0 PUSH1 0x1 PUSH0 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x121B JUMP JUMPDEST DUP1 PUSH0 PUSH0 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1238 JUMPI PUSH2 0x1237 PUSH2 0x1CB8 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x124B JUMPI PUSH2 0x124A PUSH2 0x1CB8 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1383 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1265 JUMPI PUSH2 0x1264 PUSH2 0x1CB8 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1278 JUMPI PUSH2 0x1277 PUSH2 0x1CB8 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x12AF JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12C3 JUMPI PUSH2 0x12C2 PUSH2 0x1CB8 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12D6 JUMPI PUSH2 0x12D5 PUSH2 0x1CB8 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x131A JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1311 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x132D JUMPI PUSH2 0x132C PUSH2 0x1CB8 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1340 JUMPI PUSH2 0x133F PUSH2 0x1CB8 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1382 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1379 SWAP2 SWAP1 PUSH2 0x169D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x1393 DUP4 PUSH2 0x13F9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13B1 JUMPI PUSH2 0x13B0 PUSH2 0x1A1A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13E3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x143E JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1489 DUP3 PUSH2 0x1447 JUMP JUMPDEST PUSH2 0x1493 DUP2 DUP6 PUSH2 0x1451 JUMP JUMPDEST SWAP4 POP PUSH2 0x14A3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1461 JUMP JUMPDEST PUSH2 0x14AC DUP2 PUSH2 0x146F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14CF DUP2 DUP5 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1504 DUP3 PUSH2 0x14DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1514 DUP2 PUSH2 0x14FA JUMP JUMPDEST DUP2 EQ PUSH2 0x151E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x152F DUP2 PUSH2 0x150B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1547 DUP2 PUSH2 0x1535 JUMP JUMPDEST DUP2 EQ PUSH2 0x1551 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1562 DUP2 PUSH2 0x153E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x157E JUMPI PUSH2 0x157D PUSH2 0x14D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x158B DUP6 DUP3 DUP7 ADD PUSH2 0x1521 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x159C DUP6 DUP3 DUP7 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15BA DUP2 PUSH2 0x15A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D3 PUSH0 DUP4 ADD DUP5 PUSH2 0x15B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15E2 DUP2 PUSH2 0x1535 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15FB PUSH0 DUP4 ADD DUP5 PUSH2 0x15D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1618 JUMPI PUSH2 0x1617 PUSH2 0x14D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1625 DUP7 DUP3 DUP8 ADD PUSH2 0x1521 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1636 DUP7 DUP3 DUP8 ADD PUSH2 0x1521 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1647 DUP7 DUP3 DUP8 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1666 DUP2 PUSH2 0x1651 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x167F PUSH0 DUP4 ADD DUP5 PUSH2 0x165D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1697 DUP2 PUSH2 0x1685 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x168E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16CB JUMPI PUSH2 0x16CA PUSH2 0x14D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D8 DUP5 DUP3 DUP6 ADD PUSH2 0x1521 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1715 DUP2 PUSH2 0x16E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1724 DUP2 PUSH2 0x14FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175C DUP2 PUSH2 0x1535 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x176D DUP4 DUP4 PUSH2 0x1753 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x178F DUP3 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x1799 DUP2 DUP6 PUSH2 0x1734 JUMP JUMPDEST SWAP4 POP PUSH2 0x17A4 DUP4 PUSH2 0x1744 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17D4 JUMPI DUP2 MLOAD PUSH2 0x17BB DUP9 DUP3 PUSH2 0x1762 JUMP JUMPDEST SWAP8 POP PUSH2 0x17C6 DUP4 PUSH2 0x1779 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x17A7 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x17F4 PUSH0 DUP4 ADD DUP11 PUSH2 0x170C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1806 DUP2 DUP10 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x181A DUP2 DUP9 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP PUSH2 0x1829 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x1836 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x171B JUMP JUMPDEST PUSH2 0x1843 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x168E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1855 DUP2 DUP5 PUSH2 0x1785 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1878 JUMPI PUSH2 0x1877 PUSH2 0x14D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1885 DUP5 DUP3 DUP6 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1897 DUP2 PUSH2 0x1651 JUMP JUMPDEST DUP2 EQ PUSH2 0x18A1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18B2 DUP2 PUSH2 0x188E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18C1 DUP2 PUSH2 0x1685 JUMP JUMPDEST DUP2 EQ PUSH2 0x18CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18DC DUP2 PUSH2 0x18B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x18FD JUMPI PUSH2 0x18FC PUSH2 0x14D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x190A DUP11 DUP3 DUP12 ADD PUSH2 0x1521 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x191B DUP11 DUP3 DUP12 ADD PUSH2 0x1521 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x192C DUP11 DUP3 DUP12 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x193D DUP11 DUP3 DUP12 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x194E DUP11 DUP3 DUP12 ADD PUSH2 0x18A4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x195F DUP11 DUP3 DUP12 ADD PUSH2 0x18CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1970 DUP11 DUP3 DUP12 ADD PUSH2 0x18CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1995 JUMPI PUSH2 0x1994 PUSH2 0x14D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19A2 DUP6 DUP3 DUP7 ADD PUSH2 0x1521 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19B3 DUP6 DUP3 DUP7 ADD PUSH2 0x1521 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A01 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A14 JUMPI PUSH2 0x1A13 PUSH2 0x19BD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7B PUSH1 0x1D DUP4 PUSH2 0x1451 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A86 DUP3 PUSH2 0x1A47 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AA8 DUP2 PUSH2 0x1A6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1AC2 PUSH0 DUP4 ADD DUP10 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x1ACF PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x171B JUMP JUMPDEST PUSH2 0x1ADC PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x171B JUMP JUMPDEST PUSH2 0x1AE9 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x1AF6 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x1B03 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x15D9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B42 PUSH1 0x1E DUP4 PUSH2 0x1451 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B4D DUP3 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B6F DUP2 PUSH2 0x1B36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B89 PUSH0 DUP4 ADD DUP7 PUSH2 0x171B JUMP JUMPDEST PUSH2 0x1B96 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x1BA3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15D9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BBE PUSH0 DUP4 ADD DUP5 PUSH2 0x171B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BFB DUP3 PUSH2 0x1535 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C06 DUP4 PUSH2 0x1535 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C1E JUMPI PUSH2 0x1C1D PUSH2 0x1BC4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1C37 PUSH0 DUP4 ADD DUP9 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x1C44 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x1C51 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x1C5E PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x1C6B PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x171B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1C88 PUSH0 DUP4 ADD DUP8 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x1C95 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x165D JUMP JUMPDEST PUSH2 0x1CA2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x1CAF PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x168E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0x1E SUB 0x28 0xFB 0xB1 SWAP16 SHR SWAP6 PUSH3 0xB8215A CALLCODE CALL GASPRICE INVALID BLOBHASH ADD 0x2B SWAP6 0xF6 0xE3 LOG4 0xB9 STOP SWAP12 SUB PUSH26 0x1D430564736F6C634300081B0033000000000000000000000000 ",
							"sourceMap": "741:2539:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2914:115:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2786:118:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:10;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3197:80:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3610:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1115:1663:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;2914:115:14:-;2974:7;3001:20;:18;:20::i;:::-;2994:27;;2914:115;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2786:118:14:-;2855:7;2882;:14;2890:5;2882:14;;;;;;;;;;;;;;;;2875:21;;2786:118;;;:::o;5144:557:10:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3197:80:14:-;3244:25;3250:10;3262:6;3244:5;:25::i;:::-;3197:80;:::o;3610:178:2:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1115:1663:14:-;1365:8;1346:15;:27;;1338:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1420:18;893:111;1605:5;1631:7;1658:5;1683:16;1693:5;1683:9;:16::i;:::-;1719:8;1465:277;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1441:312;;;;;;1420:333;;2443:12;2458:28;2475:10;2458:16;:28::i;:::-;2443:43;;2554:14;2571:28;2585:4;2591:1;2594;2597;2571:13;:28::i;:::-;2554:45;;2685:5;2675:15;;:6;:15;;;2667:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2739:31;2748:5;2755:7;2764:5;2739:8;:31::i;:::-;1327:1451;;;1115:1663;;;;;;;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3845:262:10:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;6021:126::-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;3039:150:14:-;3099:15;3137:7;:14;3145:5;3137:14;;;;;;;;;;;;;;;;3127:24;;3180:1;3162:7;:14;3170:5;3162:14;;;;;;;;;;;;;;;;:19;;;;;;;:::i;:::-;;;;;;;;3039:150;;;:::o;4917:176:10:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6803:260:9:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;4113:179:10:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3385:267:6:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;3353:401:11:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:9:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;2078:405:6:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;2555:245::-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;7:99:15:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:77::-;4783:7;4812:5;4801:16;;4746:77;;;:::o;4829:118::-;4916:24;4934:5;4916:24;:::i;:::-;4911:3;4904:37;4829:118;;:::o;4953:222::-;5046:4;5084:2;5073:9;5069:18;5061:26;;5097:71;5165:1;5154:9;5150:17;5141:6;5097:71;:::i;:::-;4953:222;;;;:::o;5181:329::-;5240:6;5289:2;5277:9;5268:7;5264:23;5260:32;5257:119;;;5295:79;;:::i;:::-;5257:119;5415:1;5440:53;5485:7;5476:6;5465:9;5461:22;5440:53;:::i;:::-;5430:63;;5386:117;5181:329;;;;:::o;5516:149::-;5552:7;5592:66;5585:5;5581:78;5570:89;;5516:149;;;:::o;5671:115::-;5756:23;5773:5;5756:23;:::i;:::-;5751:3;5744:36;5671:115;;:::o;5792:118::-;5879:24;5897:5;5879:24;:::i;:::-;5874:3;5867:37;5792:118;;:::o;5916:114::-;5983:6;6017:5;6011:12;6001:22;;5916:114;;;:::o;6036:184::-;6135:11;6169:6;6164:3;6157:19;6209:4;6204:3;6200:14;6185:29;;6036:184;;;;:::o;6226:132::-;6293:4;6316:3;6308:11;;6346:4;6341:3;6337:14;6329:22;;6226:132;;;:::o;6364:108::-;6441:24;6459:5;6441:24;:::i;:::-;6436:3;6429:37;6364:108;;:::o;6478:179::-;6547:10;6568:46;6610:3;6602:6;6568:46;:::i;:::-;6646:4;6641:3;6637:14;6623:28;;6478:179;;;;:::o;6663:113::-;6733:4;6765;6760:3;6756:14;6748:22;;6663:113;;;:::o;6812:732::-;6931:3;6960:54;7008:5;6960:54;:::i;:::-;7030:86;7109:6;7104:3;7030:86;:::i;:::-;7023:93;;7140:56;7190:5;7140:56;:::i;:::-;7219:7;7250:1;7235:284;7260:6;7257:1;7254:13;7235:284;;;7336:6;7330:13;7363:63;7422:3;7407:13;7363:63;:::i;:::-;7356:70;;7449:60;7502:6;7449:60;:::i;:::-;7439:70;;7295:224;7282:1;7279;7275:9;7270:14;;7235:284;;;7239:14;7535:3;7528:10;;6936:608;;;6812:732;;;;:::o;7550:1215::-;7899:4;7937:3;7926:9;7922:19;7914:27;;7951:69;8017:1;8006:9;8002:17;7993:6;7951:69;:::i;:::-;8067:9;8061:4;8057:20;8052:2;8041:9;8037:18;8030:48;8095:78;8168:4;8159:6;8095:78;:::i;:::-;8087:86;;8220:9;8214:4;8210:20;8205:2;8194:9;8190:18;8183:48;8248:78;8321:4;8312:6;8248:78;:::i;:::-;8240:86;;8336:72;8404:2;8393:9;8389:18;8380:6;8336:72;:::i;:::-;8418:73;8486:3;8475:9;8471:19;8462:6;8418:73;:::i;:::-;8501;8569:3;8558:9;8554:19;8545:6;8501:73;:::i;:::-;8622:9;8616:4;8612:20;8606:3;8595:9;8591:19;8584:49;8650:108;8753:4;8744:6;8650:108;:::i;:::-;8642:116;;7550:1215;;;;;;;;;;:::o;8771:329::-;8830:6;8879:2;8867:9;8858:7;8854:23;8850:32;8847:119;;;8885:79;;:::i;:::-;8847:119;9005:1;9030:53;9075:7;9066:6;9055:9;9051:22;9030:53;:::i;:::-;9020:63;;8976:117;8771:329;;;;:::o;9106:118::-;9177:22;9193:5;9177:22;:::i;:::-;9170:5;9167:33;9157:61;;9214:1;9211;9204:12;9157:61;9106:118;:::o;9230:135::-;9274:5;9312:6;9299:20;9290:29;;9328:31;9353:5;9328:31;:::i;:::-;9230:135;;;;:::o;9371:122::-;9444:24;9462:5;9444:24;:::i;:::-;9437:5;9434:35;9424:63;;9483:1;9480;9473:12;9424:63;9371:122;:::o;9499:139::-;9545:5;9583:6;9570:20;9561:29;;9599:33;9626:5;9599:33;:::i;:::-;9499:139;;;;:::o;9644:1199::-;9755:6;9763;9771;9779;9787;9795;9803;9852:3;9840:9;9831:7;9827:23;9823:33;9820:120;;;9859:79;;:::i;:::-;9820:120;9979:1;10004:53;10049:7;10040:6;10029:9;10025:22;10004:53;:::i;:::-;9994:63;;9950:117;10106:2;10132:53;10177:7;10168:6;10157:9;10153:22;10132:53;:::i;:::-;10122:63;;10077:118;10234:2;10260:53;10305:7;10296:6;10285:9;10281:22;10260:53;:::i;:::-;10250:63;;10205:118;10362:2;10388:53;10433:7;10424:6;10413:9;10409:22;10388:53;:::i;:::-;10378:63;;10333:118;10490:3;10517:51;10560:7;10551:6;10540:9;10536:22;10517:51;:::i;:::-;10507:61;;10461:117;10617:3;10644:53;10689:7;10680:6;10669:9;10665:22;10644:53;:::i;:::-;10634:63;;10588:119;10746:3;10773:53;10818:7;10809:6;10798:9;10794:22;10773:53;:::i;:::-;10763:63;;10717:119;9644:1199;;;;;;;;;;:::o;10849:474::-;10917:6;10925;10974:2;10962:9;10953:7;10949:23;10945:32;10942:119;;;10980:79;;:::i;:::-;10942:119;11100:1;11125:53;11170:7;11161:6;11150:9;11146:22;11125:53;:::i;:::-;11115:63;;11071:117;11227:2;11253:53;11298:7;11289:6;11278:9;11274:22;11253:53;:::i;:::-;11243:63;;11198:118;10849:474;;;;;:::o;11329:180::-;11377:77;11374:1;11367:88;11474:4;11471:1;11464:15;11498:4;11495:1;11488:15;11515:320;11559:6;11596:1;11590:4;11586:12;11576:22;;11643:1;11637:4;11633:12;11664:18;11654:81;;11720:4;11712:6;11708:17;11698:27;;11654:81;11782:2;11774:6;11771:14;11751:18;11748:38;11745:84;;11801:18;;:::i;:::-;11745:84;11566:269;11515:320;;;:::o;11841:180::-;11889:77;11886:1;11879:88;11986:4;11983:1;11976:15;12010:4;12007:1;12000:15;12027:179;12167:31;12163:1;12155:6;12151:14;12144:55;12027:179;:::o;12212:366::-;12354:3;12375:67;12439:2;12434:3;12375:67;:::i;:::-;12368:74;;12451:93;12540:3;12451:93;:::i;:::-;12569:2;12564:3;12560:12;12553:19;;12212:366;;;:::o;12584:419::-;12750:4;12788:2;12777:9;12773:18;12765:26;;12837:9;12831:4;12827:20;12823:1;12812:9;12808:17;12801:47;12865:131;12991:4;12865:131;:::i;:::-;12857:139;;12584:419;;;:::o;13009:775::-;13242:4;13280:3;13269:9;13265:19;13257:27;;13294:71;13362:1;13351:9;13347:17;13338:6;13294:71;:::i;:::-;13375:72;13443:2;13432:9;13428:18;13419:6;13375:72;:::i;:::-;13457;13525:2;13514:9;13510:18;13501:6;13457:72;:::i;:::-;13539;13607:2;13596:9;13592:18;13583:6;13539:72;:::i;:::-;13621:73;13689:3;13678:9;13674:19;13665:6;13621:73;:::i;:::-;13704;13772:3;13761:9;13757:19;13748:6;13704:73;:::i;:::-;13009:775;;;;;;;;;:::o;13790:180::-;13930:32;13926:1;13918:6;13914:14;13907:56;13790:180;:::o;13976:366::-;14118:3;14139:67;14203:2;14198:3;14139:67;:::i;:::-;14132:74;;14215:93;14304:3;14215:93;:::i;:::-;14333:2;14328:3;14324:12;14317:19;;13976:366;;;:::o;14348:419::-;14514:4;14552:2;14541:9;14537:18;14529:26;;14601:9;14595:4;14591:20;14587:1;14576:9;14572:17;14565:47;14629:131;14755:4;14629:131;:::i;:::-;14621:139;;14348:419;;;:::o;14773:442::-;14922:4;14960:2;14949:9;14945:18;14937:26;;14973:71;15041:1;15030:9;15026:17;15017:6;14973:71;:::i;:::-;15054:72;15122:2;15111:9;15107:18;15098:6;15054:72;:::i;:::-;15136;15204:2;15193:9;15189:18;15180:6;15136:72;:::i;:::-;14773:442;;;;;;:::o;15221:222::-;15314:4;15352:2;15341:9;15337:18;15329:26;;15365:71;15433:1;15422:9;15418:17;15409:6;15365:71;:::i;:::-;15221:222;;;;:::o;15449:180::-;15497:77;15494:1;15487:88;15594:4;15591:1;15584:15;15618:4;15615:1;15608:15;15635:191;15675:3;15694:20;15712:1;15694:20;:::i;:::-;15689:25;;15728:20;15746:1;15728:20;:::i;:::-;15723:25;;15771:1;15768;15764:9;15757:16;;15792:3;15789:1;15786:10;15783:36;;;15799:18;;:::i;:::-;15783:36;15635:191;;;;:::o;15832:664::-;16037:4;16075:3;16064:9;16060:19;16052:27;;16089:71;16157:1;16146:9;16142:17;16133:6;16089:71;:::i;:::-;16170:72;16238:2;16227:9;16223:18;16214:6;16170:72;:::i;:::-;16252;16320:2;16309:9;16305:18;16296:6;16252:72;:::i;:::-;16334;16402:2;16391:9;16387:18;16378:6;16334:72;:::i;:::-;16416:73;16484:3;16473:9;16469:19;16460:6;16416:73;:::i;:::-;15832:664;;;;;;;;:::o;16502:545::-;16675:4;16713:3;16702:9;16698:19;16690:27;;16727:71;16795:1;16784:9;16780:17;16771:6;16727:71;:::i;:::-;16808:68;16872:2;16861:9;16857:18;16848:6;16808:68;:::i;:::-;16886:72;16954:2;16943:9;16939:18;16930:6;16886:72;:::i;:::-;16968;17036:2;17025:9;17021:18;17012:6;16968:72;:::i;:::-;16502:545;;;;;;;:::o;17053:180::-;17101:77;17098:1;17091:88;17198:4;17195:1;17188:15;17222:4;17219:1;17212:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1490200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2917",
								"decimals()": "383",
								"eip712Domain()": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "2852",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_useNonce(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH",
									"source": 14,
									"value": "160"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "CODESIZE",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 1013,
									"end": 1107,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1074,
									"end": 1078,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 10,
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1091,
									"end": 1095,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1097,
									"end": 1103,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 3432,
									"end": 3445,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 3401,
									"end": 3405,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3401,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "PUSH",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 3501,
									"end": 3517,
									"name": "PUSH",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 3467,
									"end": 3474,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3467,
									"end": 3518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "PUSH",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3558,
									"end": 3562,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3607,
									"end": 3614,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3644,
									"end": 3657,
									"name": "CHAINID",
									"source": 10
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3692,
									"end": 3715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3747,
									"end": 3751,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 10,
									"value": "C0"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1107,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3010,
									"end": 3021,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3059,
									"end": 3061,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3048,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3037,
									"end": 3056,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3037,
									"end": 3061,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 3098,
									"end": 3103,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3084,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3176,
									"end": 3181,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3161,
									"end": 3166,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3167,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3173,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3135,
									"end": 3173,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 3135,
									"end": 3181,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1390,
									"end": 1456,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3219,
									"end": 3236,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3219,
									"end": 3236,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3195,
									"end": 3237,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3195,
									"end": 3237,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2914,
									"end": 3254,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4168,
									"end": 4175,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2079,
									"end": 2174,
									"name": "PUSH",
									"source": 10,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4255,
									"end": 4268,
									"name": "CHAINID",
									"source": 10
								},
								{
									"begin": 4278,
									"end": 4282,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 4204,
									"end": 4284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4113,
									"end": 4292,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1773,
									"end": 1784,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1822,
									"end": 1825,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1856,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1840,
									"end": 1844,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1840,
									"end": 1851,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1840,
									"end": 1856,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1896,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 6,
									"value": "305A27A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1879,
									"end": 1897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1974,
									"end": 1978,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1974,
									"end": 1985,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1965,
									"end": 1969,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1957,
									"end": 1970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1949,
									"end": 1971,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1949,
									"end": 1971,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1949,
									"end": 1985,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1941,
									"end": 1986,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1941,
									"end": 1986,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3203,
									"end": 3223,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3311,
									"end": 3321,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3301,
									"end": 3321,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3301,
									"end": 3321,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3135,
									"end": 3337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "89"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 15,
									"value": "89"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "91"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 15,
									"value": "91"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "93"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 15,
									"value": "93"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "94"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 15,
									"value": "94"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "96"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "97"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 15,
									"value": "97"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 15,
									"value": "96"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "98"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 15,
									"value": "98"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 15
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "102"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 15,
									"value": "102"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "103"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "104"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 15,
									"value": "104"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 15,
									"value": "103"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "105"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 15,
									"value": "105"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "107"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "108"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 15,
									"value": "108"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 15,
									"value": "107"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "109"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 15,
									"value": "109"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2669,
									"end": 2675,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2677,
									"end": 2683,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2726,
									"end": 2728,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 2714,
									"end": 2723,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2705,
									"end": 2712,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2701,
									"end": 2724,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 2697,
									"end": 2729,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "111"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "112"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 2732,
									"end": 2811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "tag",
									"source": 15,
									"value": "112"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "tag",
									"source": 15,
									"value": "111"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2873,
									"end": 2874,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2862,
									"end": 2871,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2852,
									"end": 2876,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 2903,
									"end": 2921,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2895,
									"end": 2901,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2892,
									"end": 2922,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "113"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "114"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 2925,
									"end": 3004,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "tag",
									"source": 15,
									"value": "114"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "tag",
									"source": 15,
									"value": "113"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "115"
								},
								{
									"begin": 3096,
									"end": 3103,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3087,
									"end": 3093,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3076,
									"end": 3085,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 3072,
									"end": 3094,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 3030,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "tag",
									"source": 15,
									"value": "115"
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2823,
									"end": 3114,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3174,
									"end": 3176,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3163,
									"end": 3172,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3159,
									"end": 3177,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3153,
									"end": 3178,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 3205,
									"end": 3223,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3197,
									"end": 3203,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3194,
									"end": 3224,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "116"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "117"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 3227,
									"end": 3306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "tag",
									"source": 15,
									"value": "117"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "tag",
									"source": 15,
									"value": "116"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "118"
								},
								{
									"begin": 3398,
									"end": 3405,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3389,
									"end": 3395,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3378,
									"end": 3387,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 3374,
									"end": 3396,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 3332,
									"end": 3406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "tag",
									"source": 15,
									"value": "118"
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3124,
									"end": 3416,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2570,
									"end": 3423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "tag",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3481,
									"end": 3487,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3515,
									"end": 3520,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3509,
									"end": 3521,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3429,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "tag",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3582,
									"end": 3659,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3579,
									"end": 3580,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3660,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3679,
									"end": 3683,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 3676,
									"end": 3677,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 3669,
									"end": 3684,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3703,
									"end": 3707,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 3700,
									"end": 3701,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3693,
									"end": 3708,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "tag",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3764,
									"end": 3770,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3801,
									"end": 3802,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 3795,
									"end": 3799,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3791,
									"end": 3803,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 3842,
									"end": 3846,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3838,
									"end": 3850,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 3869,
									"end": 3887,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "122"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3925,
									"end": 3929,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 3917,
									"end": 3923,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3913,
									"end": 3930,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "tag",
									"source": 15,
									"value": "122"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3987,
									"end": 3989,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3979,
									"end": 3985,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3976,
									"end": 3990,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 3956,
									"end": 3974,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3953,
									"end": 3991,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "123"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "124"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 4006,
									"end": 4024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "tag",
									"source": 15,
									"value": "124"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "tag",
									"source": 15,
									"value": "123"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3771,
									"end": 4040,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3720,
									"end": 4040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "tag",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4095,
									"end": 4099,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4118,
									"end": 4121,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4141,
									"end": 4144,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4138,
									"end": 4139,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4131,
									"end": 4145,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4175,
									"end": 4179,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4172,
									"end": 4173,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4162,
									"end": 4180,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4046,
									"end": 4187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "tag",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4230,
									"end": 4236,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4277,
									"end": 4279,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4274,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4265,
									"end": 4270,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4261,
									"end": 4275,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4257,
									"end": 4280,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4193,
									"end": 4286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "tag",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4336,
									"end": 4344,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4386,
									"end": 4391,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4376,
									"end": 4392,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4292,
									"end": 4399,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "tag",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4474,
									"end": 4480,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4525,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 4512,
									"end": 4522,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4508,
									"end": 4526,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "129"
								},
								{
									"begin": 4577,
									"end": 4643,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4566,
									"end": 4575,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 4547,
									"end": 4644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "tag",
									"source": 15,
									"value": "129"
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "130"
								},
								{
									"begin": 4695,
									"end": 4703,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 4684,
									"end": 4693,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 4665,
									"end": 4704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "tag",
									"source": 15,
									"value": "130"
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4737,
									"end": 4741,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 4733,
									"end": 4742,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 4726,
									"end": 4731,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4722,
									"end": 4743,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4786,
									"end": 4790,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 4776,
									"end": 4784,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 4772,
									"end": 4791,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4765,
									"end": 4770,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4762,
									"end": 4792,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "tag",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4841,
									"end": 4848,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4870,
									"end": 4875,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4804,
									"end": 4881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "tag",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4915,
									"end": 4918,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4936,
									"end": 4941,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4887,
									"end": 4947,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "tag",
									"source": 15,
									"value": "59"
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "134"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "135"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "136"
								},
								{
									"begin": 5081,
									"end": 5086,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 5063,
									"end": 5087,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "tag",
									"source": 15,
									"value": "136"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 5054,
									"end": 5088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "tag",
									"source": 15,
									"value": "135"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 5036,
									"end": 5089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "tag",
									"source": 15,
									"value": "134"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4953,
									"end": 5095,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "tag",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5144,
									"end": 5147,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5165,
									"end": 5170,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5101,
									"end": 5176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "tag",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "139"
								},
								{
									"begin": 5323,
									"end": 5330,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "59"
								},
								{
									"begin": 5292,
									"end": 5331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "tag",
									"source": 15,
									"value": "139"
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "140"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "141"
								},
								{
									"begin": 5426,
									"end": 5442,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 5402,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "tag",
									"source": 15,
									"value": "141"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5394,
									"end": 5400,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5387,
									"end": 5391,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5381,
									"end": 5392,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 5353,
									"end": 5444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "tag",
									"source": 15,
									"value": "140"
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5347,
									"end": 5351,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5340,
									"end": 5445,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 5258,
									"end": 5451,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5182,
									"end": 5451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "tag",
									"source": 15,
									"value": "62"
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5502,
									"end": 5505,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5523,
									"end": 5524,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5524,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5516,
									"end": 5524,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5457,
									"end": 5530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "tag",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "144"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "62"
								},
								{
									"begin": 5613,
									"end": 5645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "tag",
									"source": 15,
									"value": "144"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "145"
								},
								{
									"begin": 5712,
									"end": 5718,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5704,
									"end": 5710,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5698,
									"end": 5702,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 5654,
									"end": 5719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "tag",
									"source": 15,
									"value": "145"
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5589,
									"end": 5725,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5536,
									"end": 5725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "tag",
									"source": 15,
									"value": "64"
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 15,
									"value": "147"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5808,
									"end": 5811,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5801,
									"end": 5806,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5798,
									"end": 5812,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "149"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "150"
								},
								{
									"begin": 5899,
									"end": 5900,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5892,
									"end": 5897,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 5862,
									"end": 5901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "tag",
									"source": 15,
									"value": "150"
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5835,
									"end": 5836,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 5828,
									"end": 5833,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5824,
									"end": 5837,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "147"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 15,
									"value": "149"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5731,
									"end": 5917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "tag",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6024,
									"end": 6026,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 6019,
									"end": 6022,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6016,
									"end": 6027,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "152"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "153"
								},
								{
									"begin": 6090,
									"end": 6095,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 6058,
									"end": 6096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "tag",
									"source": 15,
									"value": "153"
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "154"
								},
								{
									"begin": 6160,
									"end": 6170,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 6142,
									"end": 6171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "tag",
									"source": 15,
									"value": "154"
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6132,
									"end": 6140,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6128,
									"end": 6172,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6325,
									"end": 6327,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 6313,
									"end": 6323,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 6310,
									"end": 6328,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "155"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6346,
									"end": 6354,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "tag",
									"source": 15,
									"value": "155"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "156"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "157"
								},
								{
									"begin": 6443,
									"end": 6446,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 6425,
									"end": 6447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "tag",
									"source": 15,
									"value": "157"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6415,
									"end": 6423,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 6411,
									"end": 6448,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "64"
								},
								{
									"begin": 6369,
									"end": 6449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "tag",
									"source": 15,
									"value": "156"
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "tag",
									"source": 15,
									"value": "152"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5923,
									"end": 6466,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "tag",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6526,
									"end": 6534,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6576,
									"end": 6581,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6570,
									"end": 6574,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6566,
									"end": 6582,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6472,
									"end": 6589,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "tag",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6639,
									"end": 6645,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "160"
								},
								{
									"begin": 6720,
									"end": 6721,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6716,
									"end": 6722,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 6708,
									"end": 6713,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6705,
									"end": 6706,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 6701,
									"end": 6714,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 6672,
									"end": 6723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "tag",
									"source": 15,
									"value": "160"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6668,
									"end": 6724,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 6753,
									"end": 6757,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 6747,
									"end": 6751,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 6743,
									"end": 6758,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6646,
									"end": 6764,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6595,
									"end": 6764,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "tag",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6845,
									"end": 6849,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "162"
								},
								{
									"begin": 7016,
									"end": 7019,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 7010,
									"end": 7014,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 6991,
									"end": 7020,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "tag",
									"source": 15,
									"value": "162"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7053,
									"end": 7056,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7050,
									"end": 7051,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 7046,
									"end": 7057,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 7040,
									"end": 7044,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7037,
									"end": 7058,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6769,
									"end": 7064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "tag",
									"source": 15,
									"value": "9"
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "164"
								},
								{
									"begin": 7219,
									"end": 7222,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 7186,
									"end": 7223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "tag",
									"source": 15,
									"value": "164"
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7288,
									"end": 7306,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7280,
									"end": 7286,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 7277,
									"end": 7307,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "165"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "166"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 7310,
									"end": 7328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "tag",
									"source": 15,
									"value": "166"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "tag",
									"source": 15,
									"value": "165"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "167"
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7380,
									"end": 7391,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 7354,
									"end": 7392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "tag",
									"source": 15,
									"value": "167"
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "168"
								},
								{
									"begin": 7499,
									"end": 7505,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7491,
									"end": 7497,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7485,
									"end": 7489,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 7439,
									"end": 7506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "tag",
									"source": 15,
									"value": "168"
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7533,
									"end": 7534,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 7557,
									"end": 7561,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7589,
									"end": 7591,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 7581,
									"end": 7587,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 7578,
									"end": 7592,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 7606,
									"end": 7607,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "170"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 8263,
									"end": 8264,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 8280,
									"end": 8286,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "171"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 8329,
									"end": 8338,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8324,
									"end": 8327,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 8320,
									"end": 8339,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 8314,
									"end": 8340,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "tag",
									"source": 15,
									"value": "171"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "172"
								},
								{
									"begin": 8440,
									"end": 8446,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 8433,
									"end": 8438,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 8380,
									"end": 8447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "tag",
									"source": 15,
									"value": "172"
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8374,
									"end": 8378,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 8367,
									"end": 8448,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 8236,
									"end": 8458,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "169"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "tag",
									"source": 15,
									"value": "170"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 7649,
									"end": 7658,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 7641,
									"end": 7647,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 7637,
									"end": 7659,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "173"
								},
								{
									"begin": 7719,
									"end": 7723,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 7687,
									"end": 7724,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "tag",
									"source": 15,
									"value": "173"
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7746,
									"end": 7747,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 15,
									"value": "174"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7774,
									"end": 7781,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7771,
									"end": 7772,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 7768,
									"end": 7782,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "176"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 7853,
									"end": 7862,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 7848,
									"end": 7851,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 7844,
									"end": 7863,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 7838,
									"end": 7864,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 7830,
									"end": 7836,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7823,
									"end": 7865,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 7904,
									"end": 7905,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 7896,
									"end": 7902,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7892,
									"end": 7906,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7951,
									"end": 7953,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 7940,
									"end": 7949,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 7936,
									"end": 7954,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7797,
									"end": 7801,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 7794,
									"end": 7795,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "174"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 15,
									"value": "176"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7996,
									"end": 8002,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 7987,
									"end": 7994,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 7984,
									"end": 8003,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "177"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 8054,
									"end": 8063,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 8049,
									"end": 8052,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 8045,
									"end": 8064,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 8039,
									"end": 8065,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "178"
								},
								{
									"begin": 8139,
									"end": 8143,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 8131,
									"end": 8137,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 8127,
									"end": 8144,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 8116,
									"end": 8125,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 8097,
									"end": 8145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "tag",
									"source": 15,
									"value": "178"
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8089,
									"end": 8095,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 8082,
									"end": 8146,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 8004,
									"end": 8160,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "tag",
									"source": 15,
									"value": "177"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8206,
									"end": 8207,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 8202,
									"end": 8203,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 8194,
									"end": 8200,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 8190,
									"end": 8204,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 8186,
									"end": 8208,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 8180,
									"end": 8184,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 8173,
									"end": 8209,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "tag",
									"source": 15,
									"value": "169"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7069,
									"end": 8464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8470,
									"end": 8547,
									"name": "tag",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 8470,
									"end": 8547,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8507,
									"end": 8514,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 8536,
									"end": 8541,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 8525,
									"end": 8541,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 8525,
									"end": 8541,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8470,
									"end": 8547,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 8470,
									"end": 8547,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 8470,
									"end": 8547,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8470,
									"end": 8547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8553,
									"end": 8671,
									"name": "tag",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 8553,
									"end": 8671,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8640,
									"end": 8664,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "181"
								},
								{
									"begin": 8658,
									"end": 8663,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 8640,
									"end": 8664,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 8640,
									"end": 8664,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8640,
									"end": 8664,
									"name": "tag",
									"source": 15,
									"value": "181"
								},
								{
									"begin": 8640,
									"end": 8664,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8635,
									"end": 8638,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8628,
									"end": 8665,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 8553,
									"end": 8671,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8553,
									"end": 8671,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8553,
									"end": 8671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8677,
									"end": 8795,
									"name": "tag",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 8677,
									"end": 8795,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8764,
									"end": 8788,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "183"
								},
								{
									"begin": 8782,
									"end": 8787,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 8764,
									"end": 8788,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 8764,
									"end": 8788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8764,
									"end": 8788,
									"name": "tag",
									"source": 15,
									"value": "183"
								},
								{
									"begin": 8764,
									"end": 8788,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8759,
									"end": 8762,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8752,
									"end": 8789,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 8677,
									"end": 8795,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8677,
									"end": 8795,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8677,
									"end": 8795,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8801,
									"end": 8927,
									"name": "tag",
									"source": 15,
									"value": "72"
								},
								{
									"begin": 8801,
									"end": 8927,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8838,
									"end": 8845,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 8878,
									"end": 8920,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8871,
									"end": 8876,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8867,
									"end": 8921,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 8856,
									"end": 8921,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 8856,
									"end": 8921,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8801,
									"end": 8927,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 8801,
									"end": 8927,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 8801,
									"end": 8927,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8801,
									"end": 8927,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8933,
									"end": 9029,
									"name": "tag",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 8933,
									"end": 9029,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8970,
									"end": 8977,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 8999,
									"end": 9023,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "186"
								},
								{
									"begin": 9017,
									"end": 9022,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8999,
									"end": 9023,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "72"
								},
								{
									"begin": 8999,
									"end": 9023,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8999,
									"end": 9023,
									"name": "tag",
									"source": 15,
									"value": "186"
								},
								{
									"begin": 8999,
									"end": 9023,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8988,
									"end": 9023,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 8988,
									"end": 9023,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8933,
									"end": 9029,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 8933,
									"end": 9029,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 8933,
									"end": 9029,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8933,
									"end": 9029,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9035,
									"end": 9153,
									"name": "tag",
									"source": 15,
									"value": "74"
								},
								{
									"begin": 9035,
									"end": 9153,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9122,
									"end": 9146,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "188"
								},
								{
									"begin": 9140,
									"end": 9145,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 9122,
									"end": 9146,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 9122,
									"end": 9146,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9122,
									"end": 9146,
									"name": "tag",
									"source": 15,
									"value": "188"
								},
								{
									"begin": 9122,
									"end": 9146,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9117,
									"end": 9120,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9110,
									"end": 9147,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 9035,
									"end": 9153,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9035,
									"end": 9153,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9035,
									"end": 9153,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9159,
									"end": 9823,
									"name": "tag",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 9159,
									"end": 9823,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9364,
									"end": 9368,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 9402,
									"end": 9405,
									"name": "PUSH",
									"source": 15,
									"value": "A0"
								},
								{
									"begin": 9391,
									"end": 9400,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9387,
									"end": 9406,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 9379,
									"end": 9406,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 9379,
									"end": 9406,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9416,
									"end": 9487,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "190"
								},
								{
									"begin": 9484,
									"end": 9485,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 9473,
									"end": 9482,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 9469,
									"end": 9486,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 9460,
									"end": 9466,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 9416,
									"end": 9487,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 9416,
									"end": 9487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9416,
									"end": 9487,
									"name": "tag",
									"source": 15,
									"value": "190"
								},
								{
									"begin": 9416,
									"end": 9487,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9497,
									"end": 9569,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "191"
								},
								{
									"begin": 9565,
									"end": 9567,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 9554,
									"end": 9563,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 9550,
									"end": 9568,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 9541,
									"end": 9547,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 9497,
									"end": 9569,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 9497,
									"end": 9569,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9497,
									"end": 9569,
									"name": "tag",
									"source": 15,
									"value": "191"
								},
								{
									"begin": 9497,
									"end": 9569,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9579,
									"end": 9651,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "192"
								},
								{
									"begin": 9647,
									"end": 9649,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 9636,
									"end": 9645,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 9632,
									"end": 9650,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 9623,
									"end": 9629,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 9579,
									"end": 9651,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 9579,
									"end": 9651,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9579,
									"end": 9651,
									"name": "tag",
									"source": 15,
									"value": "192"
								},
								{
									"begin": 9579,
									"end": 9651,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9661,
									"end": 9733,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "193"
								},
								{
									"begin": 9729,
									"end": 9731,
									"name": "PUSH",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 9718,
									"end": 9727,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 9714,
									"end": 9732,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 9705,
									"end": 9711,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 9661,
									"end": 9733,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 9661,
									"end": 9733,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9661,
									"end": 9733,
									"name": "tag",
									"source": 15,
									"value": "193"
								},
								{
									"begin": 9661,
									"end": 9733,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9743,
									"end": 9816,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "194"
								},
								{
									"begin": 9811,
									"end": 9814,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 9800,
									"end": 9809,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 9796,
									"end": 9815,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 9787,
									"end": 9793,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 9743,
									"end": 9816,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "74"
								},
								{
									"begin": 9743,
									"end": 9816,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9743,
									"end": 9816,
									"name": "tag",
									"source": 15,
									"value": "194"
								},
								{
									"begin": 9743,
									"end": 9816,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9159,
									"end": 9823,
									"name": "SWAP7",
									"source": 15
								},
								{
									"begin": 9159,
									"end": 9823,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": 9159,
									"end": 9823,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9159,
									"end": 9823,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9159,
									"end": 9823,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9159,
									"end": 9823,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9159,
									"end": 9823,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9159,
									"end": 9823,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9159,
									"end": 9823,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9829,
									"end": 9998,
									"name": "tag",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 9829,
									"end": 9998,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9913,
									"end": 9924,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 9947,
									"end": 9953,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9942,
									"end": 9945,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9935,
									"end": 9954,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 9987,
									"end": 9991,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 9982,
									"end": 9985,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9978,
									"end": 9992,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 9963,
									"end": 9992,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 9963,
									"end": 9992,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9829,
									"end": 9998,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 9829,
									"end": 9998,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 9829,
									"end": 9998,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9829,
									"end": 9998,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9829,
									"end": 9998,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10004,
									"end": 10381,
									"name": "tag",
									"source": 15,
									"value": "76"
								},
								{
									"begin": 10004,
									"end": 10381,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10092,
									"end": 10095,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 10120,
									"end": 10159,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "197"
								},
								{
									"begin": 10153,
									"end": 10158,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 10120,
									"end": 10159,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 10120,
									"end": 10159,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10120,
									"end": 10159,
									"name": "tag",
									"source": 15,
									"value": "197"
								},
								{
									"begin": 10120,
									"end": 10159,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10175,
									"end": 10246,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "198"
								},
								{
									"begin": 10239,
									"end": 10245,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 10234,
									"end": 10237,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 10175,
									"end": 10246,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 10175,
									"end": 10246,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10175,
									"end": 10246,
									"name": "tag",
									"source": 15,
									"value": "198"
								},
								{
									"begin": 10175,
									"end": 10246,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10168,
									"end": 10246,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 10168,
									"end": 10246,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10255,
									"end": 10320,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "199"
								},
								{
									"begin": 10313,
									"end": 10319,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 10308,
									"end": 10311,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 10301,
									"end": 10305,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 10294,
									"end": 10299,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 10290,
									"end": 10306,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 10255,
									"end": 10320,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 10255,
									"end": 10320,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10255,
									"end": 10320,
									"name": "tag",
									"source": 15,
									"value": "199"
								},
								{
									"begin": 10255,
									"end": 10320,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10345,
									"end": 10374,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "200"
								},
								{
									"begin": 10367,
									"end": 10373,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 10345,
									"end": 10374,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 10345,
									"end": 10374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10345,
									"end": 10374,
									"name": "tag",
									"source": 15,
									"value": "200"
								},
								{
									"begin": 10345,
									"end": 10374,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10340,
									"end": 10343,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 10336,
									"end": 10375,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 10329,
									"end": 10375,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 10329,
									"end": 10375,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10096,
									"end": 10381,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10004,
									"end": 10381,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 10004,
									"end": 10381,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 10004,
									"end": 10381,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10004,
									"end": 10381,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10004,
									"end": 10381,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10387,
									"end": 10700,
									"name": "tag",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 10387,
									"end": 10700,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10500,
									"end": 10504,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 10538,
									"end": 10540,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 10527,
									"end": 10536,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 10523,
									"end": 10541,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 10515,
									"end": 10541,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 10515,
									"end": 10541,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10587,
									"end": 10596,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 10581,
									"end": 10585,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 10577,
									"end": 10597,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 10573,
									"end": 10574,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 10562,
									"end": 10571,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 10558,
									"end": 10575,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 10551,
									"end": 10598,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 10615,
									"end": 10693,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "202"
								},
								{
									"begin": 10688,
									"end": 10692,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 10679,
									"end": 10685,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 10615,
									"end": 10693,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "76"
								},
								{
									"begin": 10615,
									"end": 10693,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10615,
									"end": 10693,
									"name": "tag",
									"source": 15,
									"value": "202"
								},
								{
									"begin": 10615,
									"end": 10693,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10607,
									"end": 10693,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 10607,
									"end": 10693,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10387,
									"end": 10700,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 10387,
									"end": 10700,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 10387,
									"end": 10700,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10387,
									"end": 10700,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10387,
									"end": 10700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10706,
									"end": 10804,
									"name": "tag",
									"source": 15,
									"value": "77"
								},
								{
									"begin": 10706,
									"end": 10804,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10757,
									"end": 10763,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 10791,
									"end": 10796,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 10785,
									"end": 10797,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 10775,
									"end": 10797,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 10775,
									"end": 10797,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10706,
									"end": 10804,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 10706,
									"end": 10804,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 10706,
									"end": 10804,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10706,
									"end": 10804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10810,
									"end": 10926,
									"name": "tag",
									"source": 15,
									"value": "78"
								},
								{
									"begin": 10810,
									"end": 10926,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10861,
									"end": 10865,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 10884,
									"end": 10887,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 10876,
									"end": 10887,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 10876,
									"end": 10887,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10914,
									"end": 10918,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 10909,
									"end": 10912,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 10905,
									"end": 10919,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 10897,
									"end": 10919,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 10897,
									"end": 10919,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10810,
									"end": 10926,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 10810,
									"end": 10926,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 10810,
									"end": 10926,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10810,
									"end": 10926,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10932,
									"end": 11086,
									"name": "tag",
									"source": 15,
									"value": "79"
								},
								{
									"begin": 10932,
									"end": 11086,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10975,
									"end": 10986,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 11011,
									"end": 11040,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "206"
								},
								{
									"begin": 11035,
									"end": 11038,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 11029,
									"end": 11039,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 11011,
									"end": 11040,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 11011,
									"end": 11040,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11011,
									"end": 11040,
									"name": "tag",
									"source": 15,
									"value": "206"
								},
								{
									"begin": 11011,
									"end": 11040,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11074,
									"end": 11079,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 11050,
									"end": 11079,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 11050,
									"end": 11079,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10987,
									"end": 11086,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10932,
									"end": 11086,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 10932,
									"end": 11086,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 10932,
									"end": 11086,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10932,
									"end": 11086,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11092,
									"end": 11686,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 11092,
									"end": 11686,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11176,
									"end": 11181,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 11207,
									"end": 11245,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "208"
								},
								{
									"begin": 11239,
									"end": 11244,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 11207,
									"end": 11245,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "77"
								},
								{
									"begin": 11207,
									"end": 11245,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11207,
									"end": 11245,
									"name": "tag",
									"source": 15,
									"value": "208"
								},
								{
									"begin": 11207,
									"end": 11245,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11270,
									"end": 11275,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 11297,
									"end": 11337,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "209"
								},
								{
									"begin": 11331,
									"end": 11336,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 11297,
									"end": 11337,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "78"
								},
								{
									"begin": 11297,
									"end": 11337,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11297,
									"end": 11337,
									"name": "tag",
									"source": 15,
									"value": "209"
								},
								{
									"begin": 11297,
									"end": 11337,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11285,
									"end": 11337,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 11285,
									"end": 11337,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11356,
									"end": 11391,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "210"
								},
								{
									"begin": 11382,
									"end": 11390,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 11356,
									"end": 11391,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "79"
								},
								{
									"begin": 11356,
									"end": 11391,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11356,
									"end": 11391,
									"name": "tag",
									"source": 15,
									"value": "210"
								},
								{
									"begin": 11356,
									"end": 11391,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11347,
									"end": 11391,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 11347,
									"end": 11391,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11415,
									"end": 11417,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 11407,
									"end": 11413,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 11404,
									"end": 11418,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 11401,
									"end": 11679,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 11401,
									"end": 11679,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "211"
								},
								{
									"begin": 11401,
									"end": 11679,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 11486,
									"end": 11655,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "212"
								},
								{
									"begin": 11571,
									"end": 11637,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11541,
									"end": 11547,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 11537,
									"end": 11539,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 11533,
									"end": 11548,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 11530,
									"end": 11531,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 11526,
									"end": 11549,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 11486,
									"end": 11655,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 11486,
									"end": 11655,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11486,
									"end": 11655,
									"name": "tag",
									"source": 15,
									"value": "212"
								},
								{
									"begin": 11486,
									"end": 11655,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11463,
									"end": 11468,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 11442,
									"end": 11669,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 11433,
									"end": 11669,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 11433,
									"end": 11669,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11401,
									"end": 11679,
									"name": "tag",
									"source": 15,
									"value": "211"
								},
								{
									"begin": 11401,
									"end": 11679,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11182,
									"end": 11686,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11182,
									"end": 11686,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11092,
									"end": 11686,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 11092,
									"end": 11686,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 11092,
									"end": 11686,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11092,
									"end": 11686,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "tag",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH",
									"source": 14,
									"value": "A0"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH",
									"source": 14,
									"value": "C0"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH",
									"source": 14,
									"value": "120"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH",
									"source": 14,
									"value": "140"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "ASSIGNIMMUTABLE",
									"source": 14,
									"value": "1775"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "ASSIGNIMMUTABLE",
									"source": 14,
									"value": "1772"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "ASSIGNIMMUTABLE",
									"source": 14,
									"value": "1769"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "ASSIGNIMMUTABLE",
									"source": 14,
									"value": "1767"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "ASSIGNIMMUTABLE",
									"source": 14,
									"value": "1765"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "ASSIGNIMMUTABLE",
									"source": 14,
									"value": "1763"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "ASSIGNIMMUTABLE",
									"source": 14,
									"value": "1761"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 3280,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220121e0328fbb19f1c9562b8215af2f13afe49012b95f6e3a4b9009b03791d430564736f6c634300081b0033",
									".code": [
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "7ECEBE00"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "A0712D68"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "A0712D68"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "A9059CBB"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "D505ACCF"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "DD62ED3E"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "tag",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "7ECEBE00"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "84B0196E"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "95D89B41"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "tag",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "313CE567"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "3644E515"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "6FDDE03"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "95EA7B3"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "18160DDD"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 3280,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "tag",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 2914,
											"end": 3029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 2914,
											"end": 3029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "tag",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "tag",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 2786,
											"end": 2904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "tag",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 2786,
											"end": 2904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "tag",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 2786,
											"end": 2904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "tag",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "tag",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 3197,
											"end": 3277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 3197,
											"end": 3277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "tag",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "tag",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 1115,
											"end": 2778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "tag",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "74"
										},
										{
											"begin": 1115,
											"end": 2778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "tag",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2974,
											"end": 2981,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3001,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 3001,
											"end": 3021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3001,
											"end": 3021,
											"name": "tag",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 3001,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2994,
											"end": 3021,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2994,
											"end": 3021,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 3029,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 3029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 2882,
											"end": 2896,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2895,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2896,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2882,
											"end": 2896,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2896,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2882,
											"end": 2896,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2896,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2896,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2896,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2882,
											"end": 2896,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2896,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2896,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2896,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2896,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2882,
											"end": 2896,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2896,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2896,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2896,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2875,
											"end": 2896,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2875,
											"end": 2896,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 5255,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5287,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5301,
											"end": 5322,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5336,
											"end": 5351,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5404,
											"end": 5416,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5457,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 5533,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 5533,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 5560,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 5560,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5590,
											"end": 5603,
											"name": "CHAINID",
											"source": 10
										},
										{
											"begin": 5625,
											"end": 5629,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 5652,
											"end": 5653,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5654,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5654,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5682,
											"end": 5683,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 5668,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "PUSH",
											"source": 10,
											"value": "F00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3244,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 3250,
											"end": 3260,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 3262,
											"end": 3268,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3244,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 3244,
											"end": 3269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3244,
											"end": 3269,
											"name": "tag",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 3244,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3197,
											"end": 3277,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3197,
											"end": 3277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "tag",
											"source": 14,
											"value": "74"
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1365,
											"end": 1373,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1346,
											"end": 1361,
											"name": "TIMESTAMP",
											"source": 14
										},
										{
											"begin": 1346,
											"end": 1373,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1346,
											"end": 1373,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 1338,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "tag",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 1338,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 1004,
											"name": "PUSH",
											"source": 14,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 1605,
											"end": 1610,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 1631,
											"end": 1638,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 1658,
											"end": 1663,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 1683,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 1693,
											"end": 1698,
											"name": "DUP13",
											"source": 14
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 1683,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1683,
											"end": 1699,
											"name": "tag",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 1683,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1719,
											"end": 1727,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 1465,
											"end": 1742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "tag",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1465,
											"end": 1742,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1441,
											"end": 1753,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1441,
											"end": 1753,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1441,
											"end": 1753,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1441,
											"end": 1753,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1441,
											"end": 1753,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1441,
											"end": 1753,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1420,
											"end": 1753,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1420,
											"end": 1753,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2443,
											"end": 2455,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 2475,
											"end": 2485,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2458,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 2458,
											"end": 2486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2458,
											"end": 2486,
											"name": "tag",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 2458,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2443,
											"end": 2486,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2443,
											"end": 2486,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2554,
											"end": 2568,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2571,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "136"
										},
										{
											"begin": 2585,
											"end": 2589,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2591,
											"end": 2592,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2594,
											"end": 2595,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2597,
											"end": 2598,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 2571,
											"end": 2599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2571,
											"end": 2599,
											"name": "tag",
											"source": 14,
											"value": "136"
										},
										{
											"begin": 2571,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2554,
											"end": 2599,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2554,
											"end": 2599,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2685,
											"end": 2690,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 2675,
											"end": 2690,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2675,
											"end": 2690,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2675,
											"end": 2681,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2675,
											"end": 2690,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2675,
											"end": 2690,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2675,
											"end": 2690,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 2667,
											"end": 2726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "tag",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "tag",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 2667,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2739,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 2748,
											"end": 2753,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 2764,
											"end": 2769,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 2739,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 2739,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2739,
											"end": 2770,
											"name": "tag",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 2739,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 2778,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 2778,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 2778,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 2778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3905,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3949,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1765"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3929,
											"end": 3933,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3970,
											"end": 3984,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1763"
										},
										{
											"begin": 3953,
											"end": 3966,
											"name": "CHAINID",
											"source": 10
										},
										{
											"begin": 3953,
											"end": 3984,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4007,
											"end": 4029,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1761"
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 4067,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 4067,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3845,
											"end": 4107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6067,
											"end": 6080,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 6126,
											"end": 6139,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6099,
											"end": 6104,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1772"
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6099,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6092,
											"end": 6140,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6092,
											"end": 6140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6021,
											"end": 6147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6535,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 6584,
											"end": 6600,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 6554,
											"end": 6562,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1775"
										},
										{
											"begin": 6554,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 6554,
											"end": 6583,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6554,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6547,
											"end": 6601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6547,
											"end": 6601,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6473,
											"end": 6608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3189,
											"name": "tag",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 3039,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3144,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3145,
											"end": 3150,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3137,
											"end": 3151,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3127,
											"end": 3151,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3127,
											"end": 3151,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3180,
											"end": 3181,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3162,
											"end": 3169,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3175,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 3162,
											"end": 3181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "tag",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3039,
											"end": 3189,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3039,
											"end": 3189,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3039,
											"end": 3189,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3039,
											"end": 3189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4994,
											"end": 5001,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 5053,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 5053,
											"end": 5073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5075,
											"end": 5085,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5020,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 5020,
											"end": 5086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5013,
											"end": 5086,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5013,
											"end": 5086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4917,
											"end": 5093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6908,
											"end": 6925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6927,
											"end": 6945,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 6978,
											"end": 6982,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6984,
											"end": 6985,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 6988,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6990,
											"end": 6991,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6967,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 6967,
											"end": 6992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 7014,
											"end": 7019,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7021,
											"end": 7029,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7002,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 7002,
											"end": 7030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7047,
											"end": 7056,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6803,
											"end": 7063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 4226,
											"end": 4237,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1767"
										},
										{
											"begin": 4239,
											"end": 4253,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1769"
										},
										{
											"begin": 4255,
											"end": 4268,
											"name": "CHAINID",
											"source": 10
										},
										{
											"begin": 4278,
											"end": 4282,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 4204,
											"end": 4284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4187,
											"end": 4285,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4187,
											"end": 4285,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4113,
											"end": 4292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3492,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3527,
											"end": 3532,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3508,
											"end": 3554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3577,
											"end": 3592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3460,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3559,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3585,
											"end": 3595,
											"name": "PUSH",
											"source": 11,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3580,
											"end": 3583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3632,
											"end": 3647,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3625,
											"end": 3629,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3620,
											"end": 3623,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 3630,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3648,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3684,
											"end": 3694,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3677,
											"end": 3681,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 3672,
											"end": 3675,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3668,
											"end": 3682,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3661,
											"end": 3695,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3733,
											"end": 3737,
											"name": "PUSH",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 3728,
											"end": 3731,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3718,
											"end": 3738,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3738,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3738,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3524,
											"end": 3748,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3353,
											"end": 3754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5273,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5296,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6265,
											"name": "PUSH",
											"source": 9,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6194,
											"end": 6195,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6186,
											"end": 6196,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6186,
											"end": 6196,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 6186,
											"end": 6265,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6297,
											"end": 6298,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6331,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6333,
											"end": 6334,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6440,
											"end": 6454,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6467,
											"end": 6471,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6473,
											"end": 6474,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6477,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6479,
											"end": 6480,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 6457,
											"end": 6481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6440,
											"end": 6481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6440,
											"end": 6481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6513,
											"end": 6514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6495,
											"end": 6501,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6580,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6590,
											"end": 6591,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6592,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6592,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 6670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7291,
											"end": 7311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 7282,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7282,
											"end": 7287,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 7282,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7387,
											"end": 7416,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 7378,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7378,
											"end": 7383,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 7378,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 9,
											"value": "F645EEDF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7492,
											"end": 7527,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 7483,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7488,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 7483,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7586,
											"end": 7594,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7578,
											"end": 7595,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7595,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 9,
											"value": "FCE698F700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 7550,
											"end": 7596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7626,
											"end": 7656,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 7617,
											"end": 7656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7617,
											"end": 7622,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 7617,
											"end": 7656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7702,
											"end": 7710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 9,
											"value": "D78BCE0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 7679,
											"end": 7711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7196,
											"end": 7728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2150,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2162,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2187,
											"end": 2191,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2176,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2313,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2300,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2280,
											"end": 2314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2280,
											"end": 2314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2402,
											"end": 2405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2400,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2406,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2446,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2433,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2419,
											"end": 2447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2476,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2623,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 2649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2692,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2679,
											"end": 2683,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2685,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2692,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 2717,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2706,
											"end": 2712,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2717,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 6,
											"value": "B3512B0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2793,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 2800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 15
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "tag",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 4790,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4812,
											"end": 4817,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4801,
											"end": 4817,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4801,
											"end": 4817,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4746,
											"end": 4823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4829,
											"end": 4947,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 4829,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4916,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 4934,
											"end": 4939,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4916,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 4916,
											"end": 4940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4916,
											"end": 4940,
											"name": "tag",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 4916,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4911,
											"end": 4914,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4904,
											"end": 4941,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4829,
											"end": 4947,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4829,
											"end": 4947,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4829,
											"end": 4947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "tag",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5046,
											"end": 5050,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5084,
											"end": 5086,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5073,
											"end": 5082,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5069,
											"end": 5087,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5061,
											"end": 5087,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5061,
											"end": 5087,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5097,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 5165,
											"end": 5166,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5154,
											"end": 5163,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5150,
											"end": 5167,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5141,
											"end": 5147,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5097,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 5097,
											"end": 5168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5097,
											"end": 5168,
											"name": "tag",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 5097,
											"end": 5168,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4953,
											"end": 5175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5181,
											"end": 5510,
											"name": "tag",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 5181,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5291,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5277,
											"end": 5286,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5268,
											"end": 5275,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5264,
											"end": 5287,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5260,
											"end": 5292,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5257,
											"end": 5376,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5257,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 5257,
											"end": 5376,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5295,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 5295,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 5295,
											"end": 5374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5295,
											"end": 5374,
											"name": "tag",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 5295,
											"end": 5374,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5257,
											"end": 5376,
											"name": "tag",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 5257,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5415,
											"end": 5416,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5440,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 5485,
											"end": 5492,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5476,
											"end": 5482,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5465,
											"end": 5474,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5461,
											"end": 5483,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5440,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 5440,
											"end": 5493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5440,
											"end": 5493,
											"name": "tag",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 5440,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5430,
											"end": 5493,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5430,
											"end": 5493,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5386,
											"end": 5503,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5181,
											"end": 5510,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5181,
											"end": 5510,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5181,
											"end": 5510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5181,
											"end": 5510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5181,
											"end": 5510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5516,
											"end": 5665,
											"name": "tag",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 5516,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5552,
											"end": 5559,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5592,
											"end": 5658,
											"name": "PUSH",
											"source": 15,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5585,
											"end": 5590,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5581,
											"end": 5659,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5570,
											"end": 5659,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5570,
											"end": 5659,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5516,
											"end": 5665,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5516,
											"end": 5665,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5516,
											"end": 5665,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5516,
											"end": 5665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5671,
											"end": 5786,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 5671,
											"end": 5786,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5756,
											"end": 5779,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 5773,
											"end": 5778,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5756,
											"end": 5779,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 5756,
											"end": 5779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5756,
											"end": 5779,
											"name": "tag",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 5756,
											"end": 5779,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5751,
											"end": 5754,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5744,
											"end": 5780,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5671,
											"end": 5786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5671,
											"end": 5786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5671,
											"end": 5786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5792,
											"end": 5910,
											"name": "tag",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 5792,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5879,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 5897,
											"end": 5902,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5879,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 5879,
											"end": 5903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5879,
											"end": 5903,
											"name": "tag",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 5879,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5874,
											"end": 5877,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5867,
											"end": 5904,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5792,
											"end": 5910,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5792,
											"end": 5910,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5792,
											"end": 5910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5916,
											"end": 6030,
											"name": "tag",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 5916,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5983,
											"end": 5989,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6017,
											"end": 6022,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6001,
											"end": 6023,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6001,
											"end": 6023,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5916,
											"end": 6030,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5916,
											"end": 6030,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5916,
											"end": 6030,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5916,
											"end": 6030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6036,
											"end": 6220,
											"name": "tag",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 6036,
											"end": 6220,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6135,
											"end": 6146,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6169,
											"end": 6175,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6164,
											"end": 6167,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6157,
											"end": 6176,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6209,
											"end": 6213,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6204,
											"end": 6207,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6200,
											"end": 6214,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6185,
											"end": 6214,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6185,
											"end": 6214,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6036,
											"end": 6220,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6036,
											"end": 6220,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6036,
											"end": 6220,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6036,
											"end": 6220,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6036,
											"end": 6220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6358,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 6226,
											"end": 6358,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6293,
											"end": 6297,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6316,
											"end": 6319,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6308,
											"end": 6319,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6308,
											"end": 6319,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6346,
											"end": 6350,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6341,
											"end": 6344,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6337,
											"end": 6351,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6329,
											"end": 6351,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6329,
											"end": 6351,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6358,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6358,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6364,
											"end": 6472,
											"name": "tag",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 6364,
											"end": 6472,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 6459,
											"end": 6464,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 6441,
											"end": 6465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "tag",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6436,
											"end": 6439,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6429,
											"end": 6466,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6364,
											"end": 6472,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6364,
											"end": 6472,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6364,
											"end": 6472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6478,
											"end": 6657,
											"name": "tag",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 6478,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6547,
											"end": 6557,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6568,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 6610,
											"end": 6613,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6602,
											"end": 6608,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6568,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 6568,
											"end": 6614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6568,
											"end": 6614,
											"name": "tag",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 6568,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6646,
											"end": 6650,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6641,
											"end": 6644,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6637,
											"end": 6651,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6623,
											"end": 6651,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6623,
											"end": 6651,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6478,
											"end": 6657,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6478,
											"end": 6657,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6478,
											"end": 6657,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6478,
											"end": 6657,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6478,
											"end": 6657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6663,
											"end": 6776,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 6663,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6733,
											"end": 6737,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6765,
											"end": 6769,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6760,
											"end": 6763,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6756,
											"end": 6770,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6748,
											"end": 6770,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6748,
											"end": 6770,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6663,
											"end": 6776,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6663,
											"end": 6776,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6663,
											"end": 6776,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6663,
											"end": 6776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6812,
											"end": 7544,
											"name": "tag",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 6812,
											"end": 7544,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6931,
											"end": 6934,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6960,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 7008,
											"end": 7013,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6960,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 6960,
											"end": 7014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6960,
											"end": 7014,
											"name": "tag",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 6960,
											"end": 7014,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7030,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 7109,
											"end": 7115,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7104,
											"end": 7107,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7030,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 7030,
											"end": 7116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7030,
											"end": 7116,
											"name": "tag",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 7030,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7023,
											"end": 7116,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7023,
											"end": 7116,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7140,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 7190,
											"end": 7195,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7140,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 7140,
											"end": 7196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7140,
											"end": 7196,
											"name": "tag",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 7140,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7219,
											"end": 7226,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7250,
											"end": 7251,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "tag",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7260,
											"end": 7266,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7257,
											"end": 7258,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7254,
											"end": 7267,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7336,
											"end": 7342,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7330,
											"end": 7343,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7363,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 7422,
											"end": 7425,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 7407,
											"end": 7420,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7363,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 7363,
											"end": 7426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7363,
											"end": 7426,
											"name": "tag",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 7363,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7356,
											"end": 7426,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 7356,
											"end": 7426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7449,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 7502,
											"end": 7508,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7449,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 7449,
											"end": 7509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7449,
											"end": 7509,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 7449,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7439,
											"end": 7509,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7439,
											"end": 7509,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7295,
											"end": 7519,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7283,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 7279,
											"end": 7280,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7275,
											"end": 7284,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7270,
											"end": 7284,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7270,
											"end": 7284,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "tag",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7239,
											"end": 7253,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7535,
											"end": 7538,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7528,
											"end": 7538,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7528,
											"end": 7538,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6936,
											"end": 7544,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6936,
											"end": 7544,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6936,
											"end": 7544,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6812,
											"end": 7544,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6812,
											"end": 7544,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6812,
											"end": 7544,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6812,
											"end": 7544,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6812,
											"end": 7544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "tag",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7899,
											"end": 7903,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7937,
											"end": 7940,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 7926,
											"end": 7935,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7922,
											"end": 7941,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7914,
											"end": 7941,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7914,
											"end": 7941,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7951,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 8017,
											"end": 8018,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8015,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8002,
											"end": 8019,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 7951,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 7951,
											"end": 8020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7951,
											"end": 8020,
											"name": "tag",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 7951,
											"end": 8020,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8067,
											"end": 8076,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8061,
											"end": 8065,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8057,
											"end": 8077,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8052,
											"end": 8054,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8041,
											"end": 8050,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8037,
											"end": 8055,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8030,
											"end": 8078,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8095,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 8168,
											"end": 8172,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8159,
											"end": 8165,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 8095,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 8095,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8095,
											"end": 8173,
											"name": "tag",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 8095,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8087,
											"end": 8173,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8087,
											"end": 8173,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8220,
											"end": 8229,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8214,
											"end": 8218,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8210,
											"end": 8230,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8205,
											"end": 8207,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8194,
											"end": 8203,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8190,
											"end": 8208,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8183,
											"end": 8231,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8248,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 8321,
											"end": 8325,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8312,
											"end": 8318,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 8248,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 8248,
											"end": 8326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8248,
											"end": 8326,
											"name": "tag",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 8248,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8240,
											"end": 8326,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8240,
											"end": 8326,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8336,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 8404,
											"end": 8406,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 8393,
											"end": 8402,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8380,
											"end": 8386,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 8336,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 8336,
											"end": 8408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8336,
											"end": 8408,
											"name": "tag",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 8336,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8418,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 8486,
											"end": 8489,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 8475,
											"end": 8484,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8471,
											"end": 8490,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8462,
											"end": 8468,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8418,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 8418,
											"end": 8491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8418,
											"end": 8491,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 8418,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8501,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 8569,
											"end": 8572,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 8558,
											"end": 8567,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8554,
											"end": 8573,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8545,
											"end": 8551,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8501,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 8501,
											"end": 8574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8501,
											"end": 8574,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 8501,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8622,
											"end": 8631,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8612,
											"end": 8632,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8606,
											"end": 8609,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 8595,
											"end": 8604,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8591,
											"end": 8610,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8584,
											"end": 8633,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8650,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 8753,
											"end": 8757,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8744,
											"end": 8750,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8650,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 8650,
											"end": 8758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8650,
											"end": 8758,
											"name": "tag",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 8650,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8642,
											"end": 8758,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8642,
											"end": 8758,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "SWAP9",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 8765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8771,
											"end": 9100,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 8771,
											"end": 9100,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8830,
											"end": 8836,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8879,
											"end": 8881,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8867,
											"end": 8876,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8858,
											"end": 8865,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8854,
											"end": 8877,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8850,
											"end": 8882,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8847,
											"end": 8966,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8847,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 8847,
											"end": 8966,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8885,
											"end": 8964,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 8885,
											"end": 8964,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 8885,
											"end": 8964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8885,
											"end": 8964,
											"name": "tag",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 8885,
											"end": 8964,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8847,
											"end": 8966,
											"name": "tag",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 8847,
											"end": 8966,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9005,
											"end": 9006,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9030,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 9075,
											"end": 9082,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9066,
											"end": 9072,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9051,
											"end": 9073,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9030,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 9030,
											"end": 9083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9030,
											"end": 9083,
											"name": "tag",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 9030,
											"end": 9083,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9020,
											"end": 9083,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9020,
											"end": 9083,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8976,
											"end": 9093,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8771,
											"end": 9100,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8771,
											"end": 9100,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8771,
											"end": 9100,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8771,
											"end": 9100,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8771,
											"end": 9100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9106,
											"end": 9224,
											"name": "tag",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 9106,
											"end": 9224,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9177,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 9193,
											"end": 9198,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9177,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 9177,
											"end": 9199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9177,
											"end": 9199,
											"name": "tag",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 9177,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9170,
											"end": 9175,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9167,
											"end": 9200,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 9157,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 9157,
											"end": 9218,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9214,
											"end": 9215,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9211,
											"end": 9212,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9216,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9157,
											"end": 9218,
											"name": "tag",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 9157,
											"end": 9218,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9106,
											"end": 9224,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9106,
											"end": 9224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "tag",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9274,
											"end": 9279,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9312,
											"end": 9318,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9290,
											"end": 9319,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9290,
											"end": 9319,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9328,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 9353,
											"end": 9358,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9328,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 9328,
											"end": 9359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9328,
											"end": 9359,
											"name": "tag",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 9328,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9230,
											"end": 9365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "tag",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9444,
											"end": 9468,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 9462,
											"end": 9467,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9444,
											"end": 9468,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 9444,
											"end": 9468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9444,
											"end": 9468,
											"name": "tag",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 9444,
											"end": 9468,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9437,
											"end": 9442,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9434,
											"end": 9469,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9483,
											"end": 9484,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9480,
											"end": 9481,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9473,
											"end": 9485,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "tag",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9371,
											"end": 9493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "tag",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9545,
											"end": 9550,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9583,
											"end": 9589,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9570,
											"end": 9590,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9561,
											"end": 9590,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9561,
											"end": 9590,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9599,
											"end": 9632,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 9626,
											"end": 9631,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9599,
											"end": 9632,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 9599,
											"end": 9632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9599,
											"end": 9632,
											"name": "tag",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 9599,
											"end": 9632,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9499,
											"end": 9638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "tag",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9755,
											"end": 9761,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9763,
											"end": 9769,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9779,
											"end": 9785,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9787,
											"end": 9793,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9801,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9803,
											"end": 9809,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9852,
											"end": 9855,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9831,
											"end": 9838,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 9827,
											"end": 9850,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9823,
											"end": 9856,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9859,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 9859,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 9859,
											"end": 9938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9859,
											"end": 9938,
											"name": "tag",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 9859,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9979,
											"end": 9980,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10004,
											"end": 10057,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 10049,
											"end": 10056,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 10040,
											"end": 10046,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10029,
											"end": 10038,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 10025,
											"end": 10047,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10004,
											"end": 10057,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 10004,
											"end": 10057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10004,
											"end": 10057,
											"name": "tag",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 10004,
											"end": 10057,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9994,
											"end": 10057,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 9994,
											"end": 10057,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9950,
											"end": 10067,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10106,
											"end": 10108,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10132,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 10177,
											"end": 10184,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 10168,
											"end": 10174,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10157,
											"end": 10166,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 10153,
											"end": 10175,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10132,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 10132,
											"end": 10185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10132,
											"end": 10185,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 10132,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10122,
											"end": 10185,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 10122,
											"end": 10185,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10077,
											"end": 10195,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10234,
											"end": 10236,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 10305,
											"end": 10312,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 10296,
											"end": 10302,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10285,
											"end": 10294,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 10281,
											"end": 10303,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 10260,
											"end": 10313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "tag",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10250,
											"end": 10313,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 10250,
											"end": 10313,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10205,
											"end": 10323,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10362,
											"end": 10364,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 10433,
											"end": 10440,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 10424,
											"end": 10430,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10413,
											"end": 10422,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 10409,
											"end": 10431,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 10388,
											"end": 10441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "tag",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10378,
											"end": 10441,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 10378,
											"end": 10441,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10333,
											"end": 10451,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10490,
											"end": 10493,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 10517,
											"end": 10568,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 10560,
											"end": 10567,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 10551,
											"end": 10557,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10540,
											"end": 10549,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 10536,
											"end": 10558,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10517,
											"end": 10568,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 10517,
											"end": 10568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10517,
											"end": 10568,
											"name": "tag",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 10517,
											"end": 10568,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10507,
											"end": 10568,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 10507,
											"end": 10568,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10461,
											"end": 10578,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10617,
											"end": 10620,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 10644,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 10689,
											"end": 10696,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 10680,
											"end": 10686,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10669,
											"end": 10678,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 10665,
											"end": 10687,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10644,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 10644,
											"end": 10697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10644,
											"end": 10697,
											"name": "tag",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 10644,
											"end": 10697,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10634,
											"end": 10697,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10634,
											"end": 10697,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10588,
											"end": 10707,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10746,
											"end": 10749,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 10773,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 10818,
											"end": 10825,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 10809,
											"end": 10815,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10798,
											"end": 10807,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 10794,
											"end": 10816,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10773,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 10773,
											"end": 10826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10773,
											"end": 10826,
											"name": "tag",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 10773,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10763,
											"end": 10826,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10763,
											"end": 10826,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10717,
											"end": 10836,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP9",
											"source": 15
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9644,
											"end": 10843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "tag",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10917,
											"end": 10923,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10925,
											"end": 10931,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10974,
											"end": 10976,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 10962,
											"end": 10971,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10953,
											"end": 10960,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10949,
											"end": 10972,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10945,
											"end": 10977,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10980,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 10980,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 10980,
											"end": 11059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10980,
											"end": 11059,
											"name": "tag",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 10980,
											"end": 11059,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11100,
											"end": 11101,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11125,
											"end": 11178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 11170,
											"end": 11177,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11161,
											"end": 11167,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11150,
											"end": 11159,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11146,
											"end": 11168,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11125,
											"end": 11178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 11125,
											"end": 11178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11125,
											"end": 11178,
											"name": "tag",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 11125,
											"end": 11178,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11115,
											"end": 11178,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11115,
											"end": 11178,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11071,
											"end": 11188,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11227,
											"end": 11229,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11253,
											"end": 11306,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 11298,
											"end": 11305,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11289,
											"end": 11295,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11278,
											"end": 11287,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11274,
											"end": 11296,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11253,
											"end": 11306,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 11253,
											"end": 11306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11253,
											"end": 11306,
											"name": "tag",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 11253,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11243,
											"end": 11306,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11243,
											"end": 11306,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11198,
											"end": 11316,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10849,
											"end": 11323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11329,
											"end": 11509,
											"name": "tag",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 11329,
											"end": 11509,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11377,
											"end": 11454,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11374,
											"end": 11375,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11367,
											"end": 11455,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11474,
											"end": 11478,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 11471,
											"end": 11472,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 11464,
											"end": 11479,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11498,
											"end": 11502,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11495,
											"end": 11496,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11488,
											"end": 11503,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "tag",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11559,
											"end": 11565,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11596,
											"end": 11597,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 11590,
											"end": 11594,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11586,
											"end": 11598,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 11576,
											"end": 11598,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11576,
											"end": 11598,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11643,
											"end": 11644,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 11637,
											"end": 11641,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11633,
											"end": 11645,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11664,
											"end": 11682,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11654,
											"end": 11735,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 11654,
											"end": 11735,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11720,
											"end": 11724,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 11712,
											"end": 11718,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11708,
											"end": 11725,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11698,
											"end": 11725,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11698,
											"end": 11725,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11654,
											"end": 11735,
											"name": "tag",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 11654,
											"end": 11735,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11782,
											"end": 11784,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11774,
											"end": 11780,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11771,
											"end": 11785,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 11751,
											"end": 11769,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11748,
											"end": 11786,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 11745,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 11745,
											"end": 11829,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 11801,
											"end": 11819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "tag",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11745,
											"end": 11829,
											"name": "tag",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 11745,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11566,
											"end": 11835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11515,
											"end": 11835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11841,
											"end": 12021,
											"name": "tag",
											"source": 15,
											"value": "112"
										},
										{
											"begin": 11841,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11889,
											"end": 11966,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11886,
											"end": 11887,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11879,
											"end": 11967,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11986,
											"end": 11990,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 11983,
											"end": 11984,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 11976,
											"end": 11991,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12010,
											"end": 12014,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12007,
											"end": 12008,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12000,
											"end": 12015,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 12027,
											"end": 12206,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 12027,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12167,
											"end": 12198,
											"name": "PUSH",
											"source": 15,
											"value": "45524332305065726D69743A206578706972656420646561646C696E65000000"
										},
										{
											"begin": 12163,
											"end": 12164,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12155,
											"end": 12161,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12151,
											"end": 12165,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12144,
											"end": 12199,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12027,
											"end": 12206,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12027,
											"end": 12206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "tag",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12354,
											"end": 12357,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12375,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 12439,
											"end": 12441,
											"name": "PUSH",
											"source": 15,
											"value": "1D"
										},
										{
											"begin": 12434,
											"end": 12437,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12375,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 12375,
											"end": 12442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12375,
											"end": 12442,
											"name": "tag",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 12375,
											"end": 12442,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12368,
											"end": 12442,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12368,
											"end": 12442,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12451,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 12540,
											"end": 12543,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12451,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 12451,
											"end": 12544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12451,
											"end": 12544,
											"name": "tag",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 12451,
											"end": 12544,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12569,
											"end": 12571,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12564,
											"end": 12567,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12560,
											"end": 12572,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12553,
											"end": 12572,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12553,
											"end": 12572,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12212,
											"end": 12578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "tag",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12750,
											"end": 12754,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12788,
											"end": 12790,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12777,
											"end": 12786,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12773,
											"end": 12791,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12765,
											"end": 12791,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12765,
											"end": 12791,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12837,
											"end": 12846,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12831,
											"end": 12835,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12827,
											"end": 12847,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12823,
											"end": 12824,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12812,
											"end": 12821,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12808,
											"end": 12825,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12801,
											"end": 12848,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12865,
											"end": 12996,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 12991,
											"end": 12995,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12865,
											"end": 12996,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 12865,
											"end": 12996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12865,
											"end": 12996,
											"name": "tag",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 12865,
											"end": 12996,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12857,
											"end": 12996,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12857,
											"end": 12996,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12584,
											"end": 13003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13009,
											"end": 13784,
											"name": "tag",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 13009,
											"end": 13784,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13242,
											"end": 13246,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13280,
											"end": 13283,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 13269,
											"end": 13278,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13265,
											"end": 13284,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13257,
											"end": 13284,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13257,
											"end": 13284,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13294,
											"end": 13365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 13362,
											"end": 13363,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13351,
											"end": 13360,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13347,
											"end": 13364,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13338,
											"end": 13344,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 13294,
											"end": 13365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 13294,
											"end": 13365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13294,
											"end": 13365,
											"name": "tag",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 13294,
											"end": 13365,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13375,
											"end": 13447,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 13443,
											"end": 13445,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13432,
											"end": 13441,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13428,
											"end": 13446,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13419,
											"end": 13425,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 13375,
											"end": 13447,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 13375,
											"end": 13447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13375,
											"end": 13447,
											"name": "tag",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 13375,
											"end": 13447,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13457,
											"end": 13529,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 13525,
											"end": 13527,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 13514,
											"end": 13523,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13510,
											"end": 13528,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13501,
											"end": 13507,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 13457,
											"end": 13529,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 13457,
											"end": 13529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13457,
											"end": 13529,
											"name": "tag",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 13457,
											"end": 13529,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13539,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 13607,
											"end": 13609,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 13596,
											"end": 13605,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13592,
											"end": 13610,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13583,
											"end": 13589,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 13539,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 13539,
											"end": 13611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13539,
											"end": 13611,
											"name": "tag",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 13539,
											"end": 13611,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13621,
											"end": 13694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 13689,
											"end": 13692,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 13678,
											"end": 13687,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13674,
											"end": 13693,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13665,
											"end": 13671,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13621,
											"end": 13694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 13621,
											"end": 13694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13621,
											"end": 13694,
											"name": "tag",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 13621,
											"end": 13694,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13704,
											"end": 13777,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 13772,
											"end": 13775,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 13761,
											"end": 13770,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13757,
											"end": 13776,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13748,
											"end": 13754,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13704,
											"end": 13777,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 13704,
											"end": 13777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13704,
											"end": 13777,
											"name": "tag",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 13704,
											"end": 13777,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13009,
											"end": 13784,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 13009,
											"end": 13784,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 13009,
											"end": 13784,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13009,
											"end": 13784,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13009,
											"end": 13784,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13009,
											"end": 13784,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13009,
											"end": 13784,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13009,
											"end": 13784,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13009,
											"end": 13784,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13009,
											"end": 13784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13790,
											"end": 13970,
											"name": "tag",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 13790,
											"end": 13970,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13930,
											"end": 13962,
											"name": "PUSH",
											"source": 15,
											"value": "45524332305065726D69743A20696E76616C6964207369676E61747572650000"
										},
										{
											"begin": 13926,
											"end": 13927,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13918,
											"end": 13924,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13914,
											"end": 13928,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13907,
											"end": 13963,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13790,
											"end": 13970,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13790,
											"end": 13970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13976,
											"end": 14342,
											"name": "tag",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 13976,
											"end": 14342,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14118,
											"end": 14121,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14139,
											"end": 14206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 14203,
											"end": 14205,
											"name": "PUSH",
											"source": 15,
											"value": "1E"
										},
										{
											"begin": 14198,
											"end": 14201,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14139,
											"end": 14206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 14139,
											"end": 14206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14139,
											"end": 14206,
											"name": "tag",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 14139,
											"end": 14206,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14132,
											"end": 14206,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14132,
											"end": 14206,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14215,
											"end": 14308,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 14304,
											"end": 14307,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14215,
											"end": 14308,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 14215,
											"end": 14308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14215,
											"end": 14308,
											"name": "tag",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 14215,
											"end": 14308,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14333,
											"end": 14335,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14328,
											"end": 14331,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14324,
											"end": 14336,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14317,
											"end": 14336,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14317,
											"end": 14336,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13976,
											"end": 14342,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13976,
											"end": 14342,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13976,
											"end": 14342,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13976,
											"end": 14342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14348,
											"end": 14767,
											"name": "tag",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 14348,
											"end": 14767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14514,
											"end": 14518,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14552,
											"end": 14554,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14541,
											"end": 14550,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14537,
											"end": 14555,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14529,
											"end": 14555,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14529,
											"end": 14555,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14601,
											"end": 14610,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14595,
											"end": 14599,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14591,
											"end": 14611,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14587,
											"end": 14588,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14576,
											"end": 14585,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14572,
											"end": 14589,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14565,
											"end": 14612,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14629,
											"end": 14760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 14755,
											"end": 14759,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14629,
											"end": 14760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 14629,
											"end": 14760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14629,
											"end": 14760,
											"name": "tag",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 14629,
											"end": 14760,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14621,
											"end": 14760,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14621,
											"end": 14760,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14348,
											"end": 14767,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14348,
											"end": 14767,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14348,
											"end": 14767,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14348,
											"end": 14767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14773,
											"end": 15215,
											"name": "tag",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 14773,
											"end": 15215,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14922,
											"end": 14926,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14960,
											"end": 14962,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 14949,
											"end": 14958,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14945,
											"end": 14963,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14937,
											"end": 14963,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14937,
											"end": 14963,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14973,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 15041,
											"end": 15042,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15030,
											"end": 15039,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15026,
											"end": 15043,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15017,
											"end": 15023,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 14973,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 14973,
											"end": 15044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14973,
											"end": 15044,
											"name": "tag",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 14973,
											"end": 15044,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15054,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 15122,
											"end": 15124,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15111,
											"end": 15120,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15107,
											"end": 15125,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15098,
											"end": 15104,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15054,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 15054,
											"end": 15126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15054,
											"end": 15126,
											"name": "tag",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 15054,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15136,
											"end": 15208,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 15204,
											"end": 15206,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 15193,
											"end": 15202,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15189,
											"end": 15207,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15180,
											"end": 15186,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15136,
											"end": 15208,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 15136,
											"end": 15208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15136,
											"end": 15208,
											"name": "tag",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 15136,
											"end": 15208,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14773,
											"end": 15215,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 14773,
											"end": 15215,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 14773,
											"end": 15215,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14773,
											"end": 15215,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14773,
											"end": 15215,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14773,
											"end": 15215,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14773,
											"end": 15215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15221,
											"end": 15443,
											"name": "tag",
											"source": 15,
											"value": "157"
										},
										{
											"begin": 15221,
											"end": 15443,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15314,
											"end": 15318,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15352,
											"end": 15354,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15341,
											"end": 15350,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15337,
											"end": 15355,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15329,
											"end": 15355,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15329,
											"end": 15355,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15365,
											"end": 15436,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 15433,
											"end": 15434,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15422,
											"end": 15431,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15418,
											"end": 15435,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15409,
											"end": 15415,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15365,
											"end": 15436,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 15365,
											"end": 15436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15365,
											"end": 15436,
											"name": "tag",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 15365,
											"end": 15436,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15221,
											"end": 15443,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15221,
											"end": 15443,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15221,
											"end": 15443,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15221,
											"end": 15443,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15221,
											"end": 15443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15449,
											"end": 15629,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 15449,
											"end": 15629,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15497,
											"end": 15574,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15494,
											"end": 15495,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15487,
											"end": 15575,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15594,
											"end": 15598,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 15591,
											"end": 15592,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 15584,
											"end": 15599,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15618,
											"end": 15622,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 15615,
											"end": 15616,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15608,
											"end": 15623,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15635,
											"end": 15826,
											"name": "tag",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 15635,
											"end": 15826,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15675,
											"end": 15678,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15694,
											"end": 15714,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 15712,
											"end": 15713,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15694,
											"end": 15714,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 15694,
											"end": 15714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15694,
											"end": 15714,
											"name": "tag",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 15694,
											"end": 15714,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15689,
											"end": 15714,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15689,
											"end": 15714,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15728,
											"end": 15748,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 15746,
											"end": 15747,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15728,
											"end": 15748,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 15728,
											"end": 15748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15728,
											"end": 15748,
											"name": "tag",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 15728,
											"end": 15748,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15723,
											"end": 15748,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15723,
											"end": 15748,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15771,
											"end": 15772,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15768,
											"end": 15769,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15764,
											"end": 15773,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15757,
											"end": 15773,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15757,
											"end": 15773,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15792,
											"end": 15795,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15789,
											"end": 15790,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15786,
											"end": 15796,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 15783,
											"end": 15819,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15783,
											"end": 15819,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "460"
										},
										{
											"begin": 15783,
											"end": 15819,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15799,
											"end": 15817,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 15799,
											"end": 15817,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 15799,
											"end": 15817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15799,
											"end": 15817,
											"name": "tag",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 15799,
											"end": 15817,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15783,
											"end": 15819,
											"name": "tag",
											"source": 15,
											"value": "460"
										},
										{
											"begin": 15783,
											"end": 15819,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15635,
											"end": 15826,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15635,
											"end": 15826,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15635,
											"end": 15826,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15635,
											"end": 15826,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15635,
											"end": 15826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15832,
											"end": 16496,
											"name": "tag",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 15832,
											"end": 16496,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16037,
											"end": 16041,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16075,
											"end": 16078,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 16064,
											"end": 16073,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16060,
											"end": 16079,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16052,
											"end": 16079,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16052,
											"end": 16079,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16089,
											"end": 16160,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 16157,
											"end": 16158,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16146,
											"end": 16155,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16142,
											"end": 16159,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16133,
											"end": 16139,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 16089,
											"end": 16160,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 16089,
											"end": 16160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16089,
											"end": 16160,
											"name": "tag",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 16089,
											"end": 16160,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16170,
											"end": 16242,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 16238,
											"end": 16240,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16227,
											"end": 16236,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16223,
											"end": 16241,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16214,
											"end": 16220,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 16170,
											"end": 16242,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 16170,
											"end": 16242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16170,
											"end": 16242,
											"name": "tag",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 16170,
											"end": 16242,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16252,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 16320,
											"end": 16322,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16318,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16305,
											"end": 16323,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16296,
											"end": 16302,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16252,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 16252,
											"end": 16324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16252,
											"end": 16324,
											"name": "tag",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 16252,
											"end": 16324,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16334,
											"end": 16406,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 16402,
											"end": 16404,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 16391,
											"end": 16400,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16387,
											"end": 16405,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16378,
											"end": 16384,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16334,
											"end": 16406,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 16334,
											"end": 16406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16334,
											"end": 16406,
											"name": "tag",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 16334,
											"end": 16406,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16416,
											"end": 16489,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "467"
										},
										{
											"begin": 16484,
											"end": 16487,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 16473,
											"end": 16482,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16469,
											"end": 16488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16460,
											"end": 16466,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16416,
											"end": 16489,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 16416,
											"end": 16489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16416,
											"end": 16489,
											"name": "tag",
											"source": 15,
											"value": "467"
										},
										{
											"begin": 16416,
											"end": 16489,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15832,
											"end": 16496,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 15832,
											"end": 16496,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 15832,
											"end": 16496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15832,
											"end": 16496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15832,
											"end": 16496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15832,
											"end": 16496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15832,
											"end": 16496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15832,
											"end": 16496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15832,
											"end": 16496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16502,
											"end": 17047,
											"name": "tag",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 16502,
											"end": 17047,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16675,
											"end": 16679,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16713,
											"end": 16716,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 16702,
											"end": 16711,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16698,
											"end": 16717,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16690,
											"end": 16717,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16690,
											"end": 16717,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16727,
											"end": 16798,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 16795,
											"end": 16796,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16784,
											"end": 16793,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16780,
											"end": 16797,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16771,
											"end": 16777,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 16727,
											"end": 16798,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 16727,
											"end": 16798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16727,
											"end": 16798,
											"name": "tag",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 16727,
											"end": 16798,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16808,
											"end": 16876,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 16872,
											"end": 16874,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16861,
											"end": 16870,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16857,
											"end": 16875,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16848,
											"end": 16854,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16808,
											"end": 16876,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 16808,
											"end": 16876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16808,
											"end": 16876,
											"name": "tag",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 16808,
											"end": 16876,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16886,
											"end": 16958,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 16954,
											"end": 16956,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16943,
											"end": 16952,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16939,
											"end": 16957,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16930,
											"end": 16936,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16886,
											"end": 16958,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 16886,
											"end": 16958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16886,
											"end": 16958,
											"name": "tag",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 16886,
											"end": 16958,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16968,
											"end": 17040,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 17036,
											"end": 17038,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 17025,
											"end": 17034,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17021,
											"end": 17039,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17012,
											"end": 17018,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16968,
											"end": 17040,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 16968,
											"end": 17040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16968,
											"end": 17040,
											"name": "tag",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 16968,
											"end": 17040,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16502,
											"end": 17047,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 16502,
											"end": 17047,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 16502,
											"end": 17047,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16502,
											"end": 17047,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16502,
											"end": 17047,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16502,
											"end": 17047,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16502,
											"end": 17047,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16502,
											"end": 17047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17053,
											"end": 17233,
											"name": "tag",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 17053,
											"end": 17233,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17101,
											"end": 17178,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17098,
											"end": 17099,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17091,
											"end": 17179,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17198,
											"end": 17202,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 17195,
											"end": 17196,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 17188,
											"end": 17203,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17222,
											"end": 17226,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 17219,
											"end": 17220,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17212,
											"end": 17227,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contract/49_ERC20Permit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/49_ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contract/49_ERC20Permit.sol\":{\"keccak256\":\"0xefa8f4974b9d476fe2d6484c2260ddd03a16d3f096c9bbcc963e1c4574dcc0eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d34ed6e1538e0e5947d270258d9db3e9048b28e1f7d9a879d13a8ef8cf243db7\",\"dweb:/ipfs/QmdHzR7woMQLp4RFMzGbX4cx4fyD6EaukFHLeSttzeuUkv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 184,
								"contract": "contract/49_ERC20Permit.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 190,
								"contract": "contract/49_ERC20Permit.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 192,
								"contract": "contract/49_ERC20Permit.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 194,
								"contract": "contract/49_ERC20Permit.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 196,
								"contract": "contract/49_ERC20Permit.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1777,
								"contract": "contract/49_ERC20Permit.sol:ERC20Permit",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 1779,
								"contract": "contract/49_ERC20Permit.sol:ERC20Permit",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 3245,
								"contract": "contract/49_ERC20Permit.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/49_ERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contract/49_ERC20Permit.sol\":{\"keccak256\":\"0xefa8f4974b9d476fe2d6484c2260ddd03a16d3f096c9bbcc963e1c4574dcc0eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d34ed6e1538e0e5947d270258d9db3e9048b28e1f7d9a879d13a8ef8cf243db7\",\"dweb:/ipfs/QmdHzR7woMQLp4RFMzGbX4cx4fyD6EaukFHLeSttzeuUkv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
					"exportedSymbols": {
						"IERC5267": [
							24
						]
					},
					"id": 25,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 24,
							"linearizedBaseContracts": [
								24
							],
							"name": "IERC5267",
							"nameLocation": "143:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "158:84:0",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 4,
									"name": "EIP712DomainChanged",
									"nameLocation": "253:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:0"
									},
									"src": "247:28:0"
								},
								{
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "281:140:0",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "435:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "517:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "510:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 7,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "510:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "551:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "537:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 9,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "583:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "569:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 11,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "612:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "604:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "641:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "633:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "680:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "672:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 17,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "715:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "698:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 19,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "698:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 20,
													"nodeType": "ArrayTypeName",
													"src": "698:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:239:0"
									},
									"scope": 24,
									"src": "426:310:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 25,
							"src": "133:605:0",
							"usedErrors": [],
							"usedEvents": [
								4
							]
						}
					],
					"src": "107:632:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							161
						],
						"IERC20Errors": [
							66
						],
						"IERC721Errors": [
							114
						]
					},
					"id": 162,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 26,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 27,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 66,
							"linearizedBaseContracts": [
								66
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 36,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 41,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 46,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 55,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 60,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 65,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 162,
							"src": "278:1764:1",
							"usedErrors": [
								36,
								41,
								46,
								55,
								60,
								65
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 114,
							"linearizedBaseContracts": [
								114
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 72,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 77,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 86,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 91,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 96,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 103,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 108,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 113,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 162,
							"src": "2186:2092:1",
							"usedErrors": [
								72,
								77,
								86,
								91,
								96,
								103,
								108,
								113
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 161,
							"linearizedBaseContracts": [
								161
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 126,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 131,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 136,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 143,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 148,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 153,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 160,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 162,
							"src": "4424:2107:1",
							"usedErrors": [
								126,
								131,
								136,
								143,
								148,
								153,
								160
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							810
						],
						"ERC20": [
							676
						],
						"IERC20": [
							754
						],
						"IERC20Errors": [
							66
						],
						"IERC20Metadata": [
							780
						]
					},
					"id": 677,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 163,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 165,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 755,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 164,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 754,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 167,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 781,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 166,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 780,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 169,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 811,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 168,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 810,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 162,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 170,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 66,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 173,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 810,
										"src": "1428:7:2"
									},
									"id": 174,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 175,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 754,
										"src": "1437:6:2"
									},
									"id": 176,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 177,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 780,
										"src": "1445:14:2"
									},
									"id": 178,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 179,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 66,
										"src": "1461:12:2"
									},
									"id": 180,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 172,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 676,
							"linearizedBaseContracts": [
								676,
								66,
								780,
								754,
								810
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 184,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 183,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 181,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 182,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 190,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 189,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 185,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 188,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 186,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 187,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 192,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 191,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 194,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 193,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 196,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 195,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 204,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 205,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 208,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 209,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 213,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 676,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										767
									],
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 219,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 194,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 218,
												"id": 220,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 216,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 676,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										773
									],
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 228,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 196,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 227,
												"id": 229,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 676,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										779
									],
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 236,
												"id": 238,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 234,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 676,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										703
									],
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 246,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 192,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 245,
												"id": 247,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 676,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										711
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 257,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 259,
													"indexExpression": {
														"id": 258,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 256,
												"id": 260,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 676,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										721
									],
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 285,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 272,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 274,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 278,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 279,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 280,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 277,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 271,
												"id": 284,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 269,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 676,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										731
									],
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 296,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 298,
														"indexExpression": {
															"id": 297,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 300,
													"indexExpression": {
														"id": 299,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 295,
												"id": 301,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 676,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										741
									],
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													314
												],
												"declarations": [
													{
														"constant": false,
														"id": 314,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 326,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 313,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 317,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 315,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 319,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 320,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 318,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															567,
															627
														],
														"referencedDeclaration": 567,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 312,
												"id": 325,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 676,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										753
									],
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													340
												],
												"declarations": [
													{
														"constant": false,
														"id": 340,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 358,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 339,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 341,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 345,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 346,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 344,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 351,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 352,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 338,
												"id": 357,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 676,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 369,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 370,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 383,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 382,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 376,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 375,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 381,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 384,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 385,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 398,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 397,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 391,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 390,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 396,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 401,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 399,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 676,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 416,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 417,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																428
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 428,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 453,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 427,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 432,
															"initialValue": {
																"baseExpression": {
																	"id": 429,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 431,
																"indexExpression": {
																	"id": 430,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 433,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 434,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 443,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 442,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 437,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 409,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 438,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 428,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 439,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 413,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 436,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 36,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 441,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 452,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 444,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 184,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 446,
																			"indexExpression": {
																				"id": 445,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 447,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 428,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 448,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 413,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 451,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 426,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 422,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 423,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 425,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 455,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 456,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 474,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 473,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 467,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 184,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 469,
																			"indexExpression": {
																				"id": 468,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 411,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 470,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 413,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 472,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 475,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 466,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 465,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 461,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 192,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 462,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 413,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 464,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 477,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 476,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 676,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 491,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 492,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 505,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 500,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 498,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 497,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 503,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 507,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 676,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 524,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 525,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 538,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 537,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 531,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 530,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 536,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 541,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 539,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 676,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 560,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 561,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 559,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															567,
															627
														],
														"referencedDeclaration": 627,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 676,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 579,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 580,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 593,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 592,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 586,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 585,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 591,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 594,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 595,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 608,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 607,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 601,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 600,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 606,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 609,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 612,
															"indexExpression": {
																"id": 610,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 613,
														"indexExpression": {
															"id": 611,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 614,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 617,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 576,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 625,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 624,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 619,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 570,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 620,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 572,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 621,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 618,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 623,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 676,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													638
												],
												"declarations": [
													{
														"constant": false,
														"id": 638,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 674,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 643,
												"initialValue": {
													"arguments": [
														{
															"id": 640,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 641,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 639,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 646,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 645,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 673,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 672,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 651,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 652,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 661,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 660,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 655,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 656,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 657,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 654,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 55,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 659,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 671,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 663,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 630,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 664,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 632,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 665,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 666,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 662,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				567,
																				627
																			],
																			"referencedDeclaration": 627,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 670,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 676,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 677,
							"src": "1401:9741:2",
							"usedErrors": [
								36,
								41,
								46,
								55,
								60,
								65
							],
							"usedEvents": [
								688,
								697
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							754
						]
					},
					"id": 755,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 678,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 679,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 754,
							"linearizedBaseContracts": [
								754
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 688,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 697,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 754,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 754,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 718,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 754,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 754,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 754,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 753,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 750,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 754,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 755,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								688,
								697
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							754
						],
						"IERC20Metadata": [
							780
						]
					},
					"id": 781,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 756,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 758,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 781,
							"sourceUnit": 755,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 757,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 754,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 760,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 754,
										"src": "305:6:4"
									},
									"id": 761,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 759,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 780,
							"linearizedBaseContracts": [
								780,
								754
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 764,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 780,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 770,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 780,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 779,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 776,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 780,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 781,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								688,
								697
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							810
						]
					},
					"id": 811,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 782,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 783,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 810,
							"linearizedBaseContracts": [
								810
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 788,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 787,
												"id": 790,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 810,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 797,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 796,
												"id": 799,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 794,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 810,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 805,
												"id": 807,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 810,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 811,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
					"exportedSymbols": {
						"ShortString": [
							816
						],
						"ShortStrings": [
							1027
						],
						"StorageSlot": [
							1137
						]
					},
					"id": 1028,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 812,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 814,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1028,
							"sourceUnit": 1138,
							"src": "132:46:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 813,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1137,
										"src": "140:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "ShortString",
							"id": 816,
							"name": "ShortString",
							"nameLocation": "353:11:6",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "348:28:6",
							"underlyingType": {
								"id": 815,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "368:7:6",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 817,
								"nodeType": "StructuredDocumentation",
								"src": "378:876:6",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1027,
							"linearizedBaseContracts": [
								1027
							],
							"name": "ShortStrings",
							"nameLocation": "1263:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 820,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "1370:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 1027,
									"src": "1345:111:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 818,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1345:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 819,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1390:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 824,
									"name": "StringTooLong",
									"nameLocation": "1469:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1490:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1483:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 821,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1483:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:12:6"
									},
									"src": "1463:32:6"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 826,
									"name": "InvalidShortString",
									"nameLocation": "1506:18:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1524:2:6"
									},
									"src": "1500:27:6"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "1786:208:6",
										"statements": [
											{
												"assignments": [
													836
												],
												"declarations": [
													{
														"constant": false,
														"id": 836,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "1809:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "1796:17:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 835,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1796:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 841,
												"initialValue": {
													"arguments": [
														{
															"id": 839,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "1822:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1816:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 837,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1816:5:6",
															"typeDescriptions": {}
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1816:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1796:30:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 842,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "1840:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1845:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1840:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1854:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "1840:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "1836:72:6",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "1858:50:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 847,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "1893:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 846,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "1879:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1879:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 849,
															"nodeType": "RevertStatement",
															"src": "1872:25:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 860,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 836,
																						"src": "1965:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 859,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1957:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 858,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "1957:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 861,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1957:13:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1949:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 856,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1949:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1949:22:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 863,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 836,
																			"src": "1974:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1979:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "1974:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1949:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1941:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 854,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1941:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1941:45:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 852,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "1924:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$816_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1936:4:6",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "1924:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$816_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1924:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 834,
												"id": 868,
												"nodeType": "Return",
												"src": "1917:70:6"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "1533:170:6",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "1717:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1745:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1731:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 828,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1731:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:19:6"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1773:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 832,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 831,
														"name": "ShortString",
														"nameLocations": [
															"1773:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 816,
														"src": "1773:11:6"
													},
													"referencedDeclaration": 816,
													"src": "1773:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:13:6"
									},
									"scope": 1027,
									"src": "1708:286:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "2152:331:6",
										"statements": [
											{
												"assignments": [
													880
												],
												"declarations": [
													{
														"constant": false,
														"id": 880,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "2170:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 895,
														"src": "2162:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 879,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2162:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 884,
												"initialValue": {
													"arguments": [
														{
															"id": 882,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "2187:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
																"typeString": "ShortString"
															}
														],
														"id": 881,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "2176:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$816_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2162:30:6"
											},
											{
												"assignments": [
													886
												],
												"declarations": [
													{
														"constant": false,
														"id": 886,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "2294:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 895,
														"src": "2280:17:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 885,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2280:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 891,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2311:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2300:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 887,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2304:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2280:34:6"
											},
											{
												"AST": {
													"nativeSrc": "2376:81:6",
													"nodeType": "YulBlock",
													"src": "2376:81:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "2397:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2397:3:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "2402:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2402:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2390:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:6"
																},
																"nativeSrc": "2390:16:6",
																"nodeType": "YulFunctionCall",
																"src": "2390:16:6"
															},
															"nativeSrc": "2390:16:6",
															"nodeType": "YulExpressionStatement",
															"src": "2390:16:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "2430:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2430:3:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2435:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2435:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2426:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2426:3:6"
																		},
																		"nativeSrc": "2426:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2426:14:6"
																	},
																	{
																		"name": "sstr",
																		"nativeSrc": "2442:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2442:4:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2419:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:6"
																},
																"nativeSrc": "2419:28:6",
																"nodeType": "YulFunctionCall",
																"src": "2419:28:6"
															},
															"nativeSrc": "2419:28:6",
															"nodeType": "YulExpressionStatement",
															"src": "2419:28:6"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 880,
														"isOffset": false,
														"isSlot": false,
														"src": "2402:3:6",
														"valueSize": 1
													},
													{
														"declaration": 874,
														"isOffset": false,
														"isSlot": false,
														"src": "2442:4:6",
														"valueSize": 1
													},
													{
														"declaration": 886,
														"isOffset": false,
														"isSlot": false,
														"src": "2397:3:6",
														"valueSize": 1
													},
													{
														"declaration": 886,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:3:6",
														"valueSize": 1
													}
												],
												"id": 892,
												"nodeType": "InlineAssembly",
												"src": "2367:90:6"
											},
											{
												"expression": {
													"id": 893,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 886,
													"src": "2473:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 878,
												"id": 894,
												"nodeType": "Return",
												"src": "2466:10:6"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "2000:73:6",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "2087:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2108:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "2096:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 873,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 872,
														"name": "ShortString",
														"nameLocations": [
															"2096:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 816,
														"src": "2096:11:6"
													},
													"referencedDeclaration": 816,
													"src": "2096:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:18:6"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "2137:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 876,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2137:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:15:6"
									},
									"scope": 1027,
									"src": "2078:405:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "2625:175:6",
										"statements": [
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2643:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 927,
														"src": "2635:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 905,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2635:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 916,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 911,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 900,
																		"src": "2679:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 909,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 816,
																		"src": "2660:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$816_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2672:6:6",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "2660:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$816_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2660:24:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2652:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 907,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2652:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2652:33:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2688:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "2652:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2635:57:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 917,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "2706:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2715:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "2706:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 924,
												"nodeType": "IfStatement",
												"src": "2702:69:6",
												"trueBody": {
													"id": 923,
													"nodeType": "Block",
													"src": "2719:52:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 920,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "2740:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2740:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 922,
															"nodeType": "RevertStatement",
															"src": "2733:27:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 925,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 906,
													"src": "2787:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 904,
												"id": 926,
												"nodeType": "Return",
												"src": "2780:13:6"
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "2489:61:6",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "2564:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2587:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "2575:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 899,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 898,
														"name": "ShortString",
														"nameLocations": [
															"2575:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 816,
														"src": "2575:11:6"
													},
													"referencedDeclaration": 816,
													"src": "2575:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:18:6"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "2616:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2615:9:6"
									},
									"scope": 1027,
									"src": "2555:245:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "3023:231:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 941,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "3043:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3037:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 939,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3037:5:6",
																	"typeDescriptions": {}
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3037:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3050:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3037:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3059:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3037:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 965,
													"nodeType": "Block",
													"src": "3121:127:6",
													"statements": [
														{
															"expression": {
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 954,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 933,
																				"src": "3161:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 951,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1137,
																				"src": "3135:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1137_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3147:13:6",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1114,
																			"src": "3135:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1045_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3135:32:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$1045_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 956,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3168:5:6",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1044,
																	"src": "3135:38:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 957,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "3176:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "3135:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 959,
															"nodeType": "ExpressionStatement",
															"src": "3135:46:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 962,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "3219:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 960,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 816,
																		"src": "3202:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$816_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3214:4:6",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "3202:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$816_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3202:35:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 938,
															"id": 964,
															"nodeType": "Return",
															"src": "3195:42:6"
														}
													]
												},
												"id": 966,
												"nodeType": "IfStatement",
												"src": "3033:215:6",
												"trueBody": {
													"id": 950,
													"nodeType": "Block",
													"src": "3063:52:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 947,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 931,
																		"src": "3098:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 946,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "3084:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$816_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3084:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 938,
															"id": 949,
															"nodeType": "Return",
															"src": "3077:27:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "2806:103:6",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "2923:25:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2963:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "2949:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 930,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2949:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "2985:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "2970:20:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 932,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2970:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:43:6"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "3010:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 936,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 935,
														"name": "ShortString",
														"nameLocations": [
															"3010:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 816,
														"src": "3010:11:6"
													},
													"referencedDeclaration": 816,
													"src": "3010:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3009:13:6"
									},
									"scope": 1027,
									"src": "2914:340:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "3494:158:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 981,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "3527:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 979,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "3508:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$816_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3520:6:6",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "3508:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$816_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3508:25:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 983,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "3537:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3508:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 992,
													"nodeType": "Block",
													"src": "3609:37:6",
													"statements": [
														{
															"expression": {
																"id": 990,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "3630:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 978,
															"id": 991,
															"nodeType": "Return",
															"src": "3623:12:6"
														}
													]
												},
												"id": 993,
												"nodeType": "IfStatement",
												"src": "3504:142:6",
												"trueBody": {
													"id": 989,
													"nodeType": "Block",
													"src": "3556:47:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 986,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "3586:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 985,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "3577:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$816_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3577:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 978,
															"id": 988,
															"nodeType": "Return",
															"src": "3570:22:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "3260:120:6",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "3394:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3427:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "3415:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 971,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 970,
														"name": "ShortString",
														"nameLocations": [
															"3415:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 816,
														"src": "3415:11:6"
													},
													"referencedDeclaration": 816,
													"src": "3415:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3449:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "3434:20:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 973,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3434:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3414:41:6"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "3479:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 976,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3479:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:15:6"
									},
									"scope": 1027,
									"src": "3385:267:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "4132:174:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1008,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "4165:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1006,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "4146:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$816_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4158:6:6",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "4146:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$816_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4146:25:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1010,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "4175:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4146:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1023,
													"nodeType": "Block",
													"src": "4249:51:6",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1019,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1001,
																			"src": "4276:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1017,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:12:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4283:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4270:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1005,
															"id": 1022,
															"nodeType": "Return",
															"src": "4263:26:6"
														}
													]
												},
												"id": 1024,
												"nodeType": "IfStatement",
												"src": "4142:158:6",
												"trueBody": {
													"id": 1016,
													"nodeType": "Block",
													"src": "4194:49:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1013,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 999,
																		"src": "4226:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1012,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "4215:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$816_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4215:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1005,
															"id": 1015,
															"nodeType": "Return",
															"src": "4208:24:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "3658:364:6",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "4036:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4071:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "4059:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 998,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 997,
														"name": "ShortString",
														"nameLocations": [
															"4059:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 816,
														"src": "4059:11:6"
													},
													"referencedDeclaration": 816,
													"src": "4059:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4093:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "4078:20:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1000,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4078:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4058:41:6"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "4123:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4122:9:6"
									},
									"scope": 1027,
									"src": "4027:279:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1028,
							"src": "1255:3053:6",
							"usedErrors": [
								824,
								826
							],
							"usedEvents": []
						}
					],
					"src": "106:4203:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1137
						]
					},
					"id": 1138,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1029,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1030,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:7",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1137,
							"linearizedBaseContracts": [
								1137
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1033,
									"members": [
										{
											"constant": false,
											"id": 1032,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1033,
											"src": "1300:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1031,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:7",
									"nodeType": "StructDefinition",
									"scope": 1137,
									"src": "1271:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1036,
									"members": [
										{
											"constant": false,
											"id": 1035,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1036,
											"src": "1355:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1034,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:7",
									"nodeType": "StructDefinition",
									"scope": 1137,
									"src": "1326:46:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1039,
									"members": [
										{
											"constant": false,
											"id": 1038,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1039,
											"src": "1407:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1037,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:7",
									"nodeType": "StructDefinition",
									"scope": 1137,
									"src": "1378:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1042,
									"members": [
										{
											"constant": false,
											"id": 1041,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1042,
											"src": "1462:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1040,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:7",
									"nodeType": "StructDefinition",
									"scope": 1137,
									"src": "1433:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1045,
									"members": [
										{
											"constant": false,
											"id": 1044,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1045,
											"src": "1516:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1043,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:7",
									"nodeType": "StructDefinition",
									"scope": 1137,
									"src": "1488:47:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1048,
									"members": [
										{
											"constant": false,
											"id": 1047,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1048,
											"src": "1568:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1046,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:7",
									"nodeType": "StructDefinition",
									"scope": 1137,
									"src": "1541:45:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "1768:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:7",
													"nodeType": "YulBlock",
													"src": "1830:38:7",
													"statements": [
														{
															"nativeSrc": "1844:14:7",
															"nodeType": "YulAssignment",
															"src": "1844:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:7",
																"nodeType": "YulIdentifier",
																"src": "1854:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1055,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1051,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:7",
														"valueSize": 1
													}
												],
												"id": 1057,
												"nodeType": "InlineAssembly",
												"src": "1821:47:7"
											}
										]
									},
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:7",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "1708:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1050,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:7"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "1745:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1033_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1054,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1053,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1033,
														"src": "1745:11:7"
													},
													"referencedDeclaration": 1033,
													"src": "1745:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1033_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:7"
									},
									"scope": 1137,
									"src": "1684:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "2056:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:7",
													"nodeType": "YulBlock",
													"src": "2118:38:7",
													"statements": [
														{
															"nativeSrc": "2132:14:7",
															"nodeType": "YulAssignment",
															"src": "2132:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:7",
																"nodeType": "YulIdentifier",
																"src": "2142:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1066,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1062,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:7",
														"valueSize": 1
													}
												],
												"id": 1068,
												"nodeType": "InlineAssembly",
												"src": "2109:47:7"
											}
										]
									},
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:7",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1996:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1061,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:7"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "2033:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1036_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1065,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1064,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1036,
														"src": "2033:11:7"
													},
													"referencedDeclaration": 1036,
													"src": "2033:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1036_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:7"
									},
									"scope": 1137,
									"src": "1972:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "2344:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:7",
													"nodeType": "YulBlock",
													"src": "2406:38:7",
													"statements": [
														{
															"nativeSrc": "2420:14:7",
															"nodeType": "YulAssignment",
															"src": "2420:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:7",
																"nodeType": "YulIdentifier",
																"src": "2430:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1077,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1073,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:7",
														"valueSize": 1
													}
												],
												"id": 1079,
												"nodeType": "InlineAssembly",
												"src": "2397:47:7"
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:7",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "2284:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1072,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:7"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "2321:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1039_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1076,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1075,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1039,
														"src": "2321:11:7"
													},
													"referencedDeclaration": 1039,
													"src": "2321:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1039_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:7"
									},
									"scope": 1137,
									"src": "2260:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "2632:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:7",
													"nodeType": "YulBlock",
													"src": "2694:38:7",
													"statements": [
														{
															"nativeSrc": "2708:14:7",
															"nodeType": "YulAssignment",
															"src": "2708:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:7",
																"nodeType": "YulIdentifier",
																"src": "2718:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1088,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1084,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:7",
														"valueSize": 1
													}
												],
												"id": 1090,
												"nodeType": "InlineAssembly",
												"src": "2685:47:7"
											}
										]
									},
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:7",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "2572:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1083,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:7"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "2609:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1042_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1087,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1086,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1042,
														"src": "2609:11:7"
													},
													"referencedDeclaration": 1042,
													"src": "2609:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1042_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:7"
									},
									"scope": 1137,
									"src": "2548:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "2917:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:7",
													"nodeType": "YulBlock",
													"src": "2979:38:7",
													"statements": [
														{
															"nativeSrc": "2993:14:7",
															"nodeType": "YulAssignment",
															"src": "2993:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:7",
																"nodeType": "YulIdentifier",
																"src": "3003:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1099,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1095,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:7",
														"valueSize": 1
													}
												],
												"id": 1101,
												"nodeType": "InlineAssembly",
												"src": "2970:47:7"
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:7",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "2858:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1094,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:7"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "2895:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1045_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1098,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1097,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1045,
														"src": "2895:10:7"
													},
													"referencedDeclaration": 1045,
													"src": "2895:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1045_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:7"
									},
									"scope": 1137,
									"src": "2835:188:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "3225:112:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:7",
													"nodeType": "YulBlock",
													"src": "3287:44:7",
													"statements": [
														{
															"nativeSrc": "3301:20:7",
															"nodeType": "YulAssignment",
															"src": "3301:20:7",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:7",
																"nodeType": "YulIdentifier",
																"src": "3311:10:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1110,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1106,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:7",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1112,
												"nodeType": "InlineAssembly",
												"src": "3278:53:7"
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:7",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "3158:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1105,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:7"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "3203:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1045_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1109,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1108,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1045,
														"src": "3203:10:7"
													},
													"referencedDeclaration": 1045,
													"src": "3203:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1045_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:7"
									},
									"scope": 1137,
									"src": "3135:202:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "3513:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:7",
													"nodeType": "YulBlock",
													"src": "3575:38:7",
													"statements": [
														{
															"nativeSrc": "3589:14:7",
															"nodeType": "YulAssignment",
															"src": "3589:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:7",
																"nodeType": "YulIdentifier",
																"src": "3599:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1121,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1117,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:7",
														"valueSize": 1
													}
												],
												"id": 1123,
												"nodeType": "InlineAssembly",
												"src": "3566:47:7"
											}
										]
									},
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:7",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "3455:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:7"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "3492:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1048_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1120,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1119,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1048,
														"src": "3492:9:7"
													},
													"referencedDeclaration": 1048,
													"src": "3492:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1048_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:7"
									},
									"scope": 1137,
									"src": "3433:186:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "3816:112:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:7",
													"nodeType": "YulBlock",
													"src": "3878:44:7",
													"statements": [
														{
															"nativeSrc": "3892:20:7",
															"nodeType": "YulAssignment",
															"src": "3892:20:7",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:7",
																"nodeType": "YulIdentifier",
																"src": "3902:10:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1132,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1128,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:7",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1134,
												"nodeType": "InlineAssembly",
												"src": "3869:53:7"
											}
										]
									},
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:7",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "3751:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1127,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:7"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "3795:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1048_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1131,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1130,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1048,
														"src": "3795:9:7"
													},
													"referencedDeclaration": 1048,
													"src": "3795:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1048_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:7"
									},
									"scope": 1137,
									"src": "3729:199:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1138,
							"src": "1245:2685:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3095
						],
						"SignedMath": [
							3200
						],
						"Strings": [
							1392
						]
					},
					"id": 1393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1139,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1141,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1393,
							"sourceUnit": 3096,
							"src": "127:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1140,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3095,
										"src": "135:4:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1143,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1393,
							"sourceUnit": 3201,
							"src": "165:49:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1142,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3200,
										"src": "173:10:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1144,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:8",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1392,
							"linearizedBaseContracts": [
								1392
							],
							"name": "Strings",
							"nameLocation": "259:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1147,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "273:56:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1145,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1146,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1150,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1392,
									"src": "335:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1148,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1149,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:8",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1157,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "505:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "520:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:8"
									},
									"src": "470:66:8"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "708:627:8",
										"statements": [
											{
												"id": 1203,
												"nodeType": "UncheckedBlock",
												"src": "718:611:8",
												"statements": [
													{
														"assignments": [
															1166
														],
														"declarations": [
															{
																"constant": false,
																"id": 1166,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1203,
																"src": "742:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1165,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1173,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1169,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1160,
																		"src": "770:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1167,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3095,
																		"src": "759:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3095_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:8",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2915,
																	"src": "759:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:8"
													},
													{
														"assignments": [
															1175
														],
														"declarations": [
															{
																"constant": false,
																"id": 1175,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1203,
																"src": "794:20:8",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1174,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1180,
														"initialValue": {
															"arguments": [
																{
																	"id": 1178,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "828:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1176,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:8"
													},
													{
														"assignments": [
															1182
														],
														"declarations": [
															{
																"constant": false,
																"id": 1182,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:8",
																"nodeType": "VariableDeclaration",
																"scope": 1203,
																"src": "849:11:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1181,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1183,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:8"
													},
													{
														"AST": {
															"nativeSrc": "930:67:8",
															"nodeType": "YulBlock",
															"src": "930:67:8",
															"statements": [
																{
																	"nativeSrc": "948:35:8",
																	"nodeType": "YulAssignment",
																	"src": "948:35:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:8",
																						"nodeType": "YulLiteral",
																						"src": "971:2:8",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:8"
																				},
																				"nativeSrc": "967:15:8",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:8"
																		},
																		"nativeSrc": "955:28:8",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:8"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:8"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1175,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1166,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1182,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:8",
																"valueSize": 1
															}
														],
														"id": 1184,
														"nodeType": "InlineAssembly",
														"src": "921:76:8"
													},
													{
														"body": {
															"id": 1199,
															"nodeType": "Block",
															"src": "1023:269:8",
															"statements": [
																{
																	"expression": {
																		"id": 1187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:8",
																		"subExpression": {
																			"id": 1186,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1182,
																			"src": "1041:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1188,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:8"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:8",
																		"nodeType": "YulBlock",
																		"src": "1124:86:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:8",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:8",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:8"
																									},
																									"nativeSrc": "1164:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:8"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:8",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:8"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:8"
																							},
																							"nativeSrc": "1159:32:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:8",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:8"
																					},
																					"nativeSrc": "1146:46:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:8"
																				},
																				"nativeSrc": "1146:46:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:8"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1147,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1182,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1160,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:8",
																			"valueSize": 1
																		}
																	],
																	"id": 1189,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:8"
																},
																{
																	"expression": {
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1190,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1160,
																			"src": "1227:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1193,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:8"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1194,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1160,
																			"src": "1260:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1198,
																	"nodeType": "IfStatement",
																	"src": "1256:21:8",
																	"trueBody": {
																		"id": 1197,
																		"nodeType": "Break",
																		"src": "1272:5:8"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1200,
														"nodeType": "WhileStatement",
														"src": "1010:282:8"
													},
													{
														"expression": {
															"id": 1201,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "1312:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1164,
														"id": 1202,
														"nodeType": "Return",
														"src": "1305:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "655:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:8"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "693:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1162,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:8"
									},
									"scope": 1392,
									"src": "637:698:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "1511:92:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1216,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1208,
																	"src": "1542:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:8",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1225,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1208,
																			"src": "1588:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1223,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3200,
																			"src": "1573:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3200_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:8",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3199,
																		"src": "1573:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1222,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1205,
																"src": "1564:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1213,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:8",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1212,
												"id": 1229,
												"nodeType": "Return",
												"src": "1521:75:8"
											}
										]
									},
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:8",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1459:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1207,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:8"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1496:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1210,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:8"
									},
									"scope": 1392,
									"src": "1435:168:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1250,
										"nodeType": "Block",
										"src": "1782:100:8",
										"statements": [
											{
												"id": 1249,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1240,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1234,
																	"src": "1835:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1243,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1234,
																				"src": "1854:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1241,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3095,
																				"src": "1842:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3095_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:8",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3037,
																			"src": "1842:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1239,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1251,
																	1334,
																	1354
																],
																"referencedDeclaration": 1334,
																"src": "1823:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1238,
														"id": 1248,
														"nodeType": "Return",
														"src": "1816:49:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "1729:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:8"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "1767:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:8"
									},
									"scope": 1392,
									"src": "1708:174:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "2095:435:8",
										"statements": [
											{
												"assignments": [
													1262
												],
												"declarations": [
													{
														"constant": false,
														"id": 1262,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1333,
														"src": "2105:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1261,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1264,
												"initialValue": {
													"id": 1263,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1254,
													"src": "2126:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:8"
											},
											{
												"assignments": [
													1266
												],
												"declarations": [
													{
														"constant": false,
														"id": 1266,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1333,
														"src": "2141:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1265,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1275,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1270,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "2177:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1267,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:8"
											},
											{
												"expression": {
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1276,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "2198:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1278,
														"indexExpression": {
															"hexValue": "30",
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:8"
											},
											{
												"expression": {
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1282,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "2223:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1284,
														"indexExpression": {
															"hexValue": "31",
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1287,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:8"
											},
											{
												"body": {
													"id": 1316,
													"nodeType": "Block",
													"src": "2293:95:8",
													"statements": [
														{
															"expression": {
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1302,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1266,
																		"src": "2307:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1304,
																	"indexExpression": {
																		"id": 1303,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1289,
																		"src": "2314:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1305,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1147,
																		"src": "2319:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1309,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1306,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1262,
																			"src": "2330:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1311,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:8"
														},
														{
															"expression": {
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1312,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1262,
																	"src": "2361:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1315,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1296,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "2281:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1317,
												"initializationExpression": {
													"assignments": [
														1289
													],
													"declarations": [
														{
															"constant": false,
															"id": 1289,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1317,
															"src": "2253:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1288,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1295,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1291,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "2269:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:8"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:8",
														"subExpression": {
															"id": 1299,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "2290:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1301,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:8"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1318,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "2401:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1327,
												"nodeType": "IfStatement",
												"src": "2397:96:8",
												"trueBody": {
													"id": 1326,
													"nodeType": "Block",
													"src": "2418:75:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1322,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1254,
																		"src": "2468:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1323,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "2475:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1321,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "2439:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1325,
															"nodeType": "RevertStatement",
															"src": "2432:50:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1330,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "2516:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1328,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1260,
												"id": 1332,
												"nodeType": "Return",
												"src": "2502:21:8"
											}
										]
									},
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "2026:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "2041:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:8"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "2080:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1258,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:8"
									},
									"scope": 1392,
									"src": "2005:525:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "2762:75:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1347,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1337,
																			"src": "2807:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1345,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1343,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1350,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "2815:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1342,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1251,
															1334,
															1354
														],
														"referencedDeclaration": 1334,
														"src": "2779:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1341,
												"id": 1352,
												"nodeType": "Return",
												"src": "2772:58:8"
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:8",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "2710:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:8"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "2747:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:8"
									},
									"scope": 1392,
									"src": "2689:148:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "2992:104:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1366,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1357,
																		"src": "3015:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1364,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1371,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1359,
																		"src": "3034:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1369,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1378,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1357,
																			"src": "3063:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1376,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1375,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1384,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1359,
																			"src": "3086:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1382,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1381,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1363,
												"id": 1389,
												"nodeType": "Return",
												"src": "3002:87:8"
											}
										]
									},
									"documentation": {
										"id": 1355,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:8",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "2929:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1356,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "2946:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1358,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:8"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "2986:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:8"
									},
									"scope": 1392,
									"src": "2914:182:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1393,
							"src": "251:2847:8",
							"usedErrors": [
								1157
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							1740
						]
					},
					"id": 1741,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1395,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:9",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 1740,
							"linearizedBaseContracts": [
								1740
							],
							"name": "ECDSA",
							"nameLocation": "352:5:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 1400,
									"members": [
										{
											"id": 1396,
											"name": "NoError",
											"nameLocation": "392:7:9",
											"nodeType": "EnumValue",
											"src": "392:7:9"
										},
										{
											"id": 1397,
											"name": "InvalidSignature",
											"nameLocation": "409:16:9",
											"nodeType": "EnumValue",
											"src": "409:16:9"
										},
										{
											"id": 1398,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:9",
											"nodeType": "EnumValue",
											"src": "435:22:9"
										},
										{
											"id": 1399,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:9",
											"nodeType": "EnumValue",
											"src": "467:17:9"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:9",
									"nodeType": "EnumDefinition",
									"src": "364:126:9"
								},
								{
									"documentation": {
										"id": 1401,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:9",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 1403,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:9"
									},
									"src": "564:30:9"
								},
								{
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:9",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 1408,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "699:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:9"
									},
									"src": "665:50:9"
								},
								{
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:9",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 1413,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "840:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1410,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:9"
									},
									"src": "811:40:9"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "2242:653:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1428,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "2256:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2266:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2256:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2276:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2256:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1463,
													"nodeType": "Block",
													"src": "2781:108:9",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1452,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2811:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2803:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1450,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2803:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2803:10:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1454,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "2815:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1400_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2828:22:9",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1398,
																		"src": "2815:35:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1400",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1458,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1418,
																					"src": "2860:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2870:6:9",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2860:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2852:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1456,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2852:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2852:25:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1461,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2802:76:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1400_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1427,
															"id": 1462,
															"nodeType": "Return",
															"src": "2795:83:9"
														}
													]
												},
												"id": 1464,
												"nodeType": "IfStatement",
												"src": "2252:637:9",
												"trueBody": {
													"id": 1449,
													"nodeType": "Block",
													"src": "2280:495:9",
													"statements": [
														{
															"assignments": [
																1433
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1433,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2302:1:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1449,
																	"src": "2294:9:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1432,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1434,
															"nodeType": "VariableDeclarationStatement",
															"src": "2294:9:9"
														},
														{
															"assignments": [
																1436
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1436,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2325:1:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1449,
																	"src": "2317:9:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1435,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2317:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1437,
															"nodeType": "VariableDeclarationStatement",
															"src": "2317:9:9"
														},
														{
															"assignments": [
																1439
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1439,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2346:1:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1449,
																	"src": "2340:7:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1438,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2340:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1440,
															"nodeType": "VariableDeclarationStatement",
															"src": "2340:7:9"
														},
														{
															"AST": {
																"nativeSrc": "2548:171:9",
																"nodeType": "YulBlock",
																"src": "2548:171:9",
																"statements": [
																	{
																		"nativeSrc": "2566:32:9",
																		"nodeType": "YulAssignment",
																		"src": "2566:32:9",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2581:9:9",
																							"nodeType": "YulIdentifier",
																							"src": "2581:9:9"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2592:4:9",
																							"nodeType": "YulLiteral",
																							"src": "2592:4:9",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2577:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2577:3:9"
																					},
																					"nativeSrc": "2577:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2577:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2571:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:9"
																			},
																			"nativeSrc": "2571:27:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2571:27:9"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2566:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "2566:1:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2615:32:9",
																		"nodeType": "YulAssignment",
																		"src": "2615:32:9",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2630:9:9",
																							"nodeType": "YulIdentifier",
																							"src": "2630:9:9"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2641:4:9",
																							"nodeType": "YulLiteral",
																							"src": "2641:4:9",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2626:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2626:3:9"
																					},
																					"nativeSrc": "2626:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2626:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2620:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2620:5:9"
																			},
																			"nativeSrc": "2620:27:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2620:27:9"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2615:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "2615:1:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2664:41:9",
																		"nodeType": "YulAssignment",
																		"src": "2664:41:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2687:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "2687:9:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2698:4:9",
																									"nodeType": "YulLiteral",
																									"src": "2698:4:9",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2683:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "2683:3:9"
																							},
																							"nativeSrc": "2683:20:9",
																							"nodeType": "YulFunctionCall",
																							"src": "2683:20:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2677:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2677:5:9"
																					},
																					"nativeSrc": "2677:27:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2677:27:9"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2669:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2669:4:9"
																			},
																			"nativeSrc": "2669:36:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2669:36:9"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2664:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "2664:1:9"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1433,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2566:1:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1436,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2615:1:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1418,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2581:9:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1418,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2630:9:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1418,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2687:9:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1439,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2664:1:9",
																	"valueSize": 1
																}
															],
															"id": 1441,
															"nodeType": "InlineAssembly",
															"src": "2539:180:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1443,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1416,
																		"src": "2750:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1444,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "2756:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1445,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1433,
																		"src": "2759:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1446,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1436,
																		"src": "2762:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1442,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1466,
																		1546,
																		1654
																	],
																	"referencedDeclaration": 1654,
																	"src": "2739:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1400_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2739:25:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1400_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1427,
															"id": 1448,
															"nodeType": "Return",
															"src": "2732:32:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:9",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2157:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "2149:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1415,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2176:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "2163:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1417,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2163:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:38:9"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "2210:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "2219:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1400",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1423,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1422,
														"name": "RecoverError",
														"nameLocations": [
															"2219:12:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1400,
														"src": "2219:12:9"
													},
													"referencedDeclaration": 1400,
													"src": "2219:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1400",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "2233:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1425,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:32:9"
									},
									"scope": 1740,
									"src": "2129:766:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1495,
										"nodeType": "Block",
										"src": "3789:168:9",
										"statements": [
											{
												"assignments": [
													1477,
													1480,
													1482
												],
												"declarations": [
													{
														"constant": false,
														"id": 1477,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3808:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1495,
														"src": "3800:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1476,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3800:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1480,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3832:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1495,
														"src": "3819:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1400",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1479,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1478,
																"name": "RecoverError",
																"nameLocations": [
																	"3819:12:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1400,
																"src": "3819:12:9"
															},
															"referencedDeclaration": 1400,
															"src": "3819:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1400",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1482,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3847:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1495,
														"src": "3839:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1481,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3839:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1487,
												"initialValue": {
													"arguments": [
														{
															"id": 1484,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "3870:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1485,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "3876:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1483,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1466,
															1546,
															1654
														],
														"referencedDeclaration": 1466,
														"src": "3859:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1400_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1400_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3799:87:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1489,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "3908:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1400",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1490,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "3915:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1400",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1488,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "3896:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1400_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3896:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "3896:28:9"
											},
											{
												"expression": {
													"id": 1493,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1477,
													"src": "3941:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1475,
												"id": 1494,
												"nodeType": "Return",
												"src": "3934:16:9"
											}
										]
									},
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "2901:796:9",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 1496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3711:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3727:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3719:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1468,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3746:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3733:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3733:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:38:9"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3780:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:9:9"
									},
									"scope": 1740,
									"src": "3702:255:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "4285:342:9",
										"statements": [
											{
												"id": 1544,
												"nodeType": "UncheckedBlock",
												"src": "4295:326:9",
												"statements": [
													{
														"assignments": [
															1514
														],
														"declarations": [
															{
																"constant": false,
																"id": 1514,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4327:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1544,
																"src": "4319:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1513,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4319:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1521,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1515,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "4331:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 1518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4344:66:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4336:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1516,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4336:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4336:75:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4331:80:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4319:92:9"
													},
													{
														"assignments": [
															1523
														],
														"declarations": [
															{
																"constant": false,
																"id": 1523,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4528:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1544,
																"src": "4522:7:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 1522,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4522:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1536,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1531,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1528,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1503,
																							"src": "4547:2:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1527,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4539:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1526,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4539:7:9",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1529,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4539:11:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 1530,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4554:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4539:18:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1532,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4538:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4561:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4538:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4532:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1524,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4532:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4532:32:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4522:42:9"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1538,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1499,
																	"src": "4596:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1539,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "4602:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 1540,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1501,
																	"src": "4605:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1541,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1514,
																	"src": "4608:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1537,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1466,
																	1546,
																	1654
																],
																"referencedDeclaration": 1654,
																"src": "4585:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1400_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4585:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1400_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 1512,
														"id": 1543,
														"nodeType": "Return",
														"src": "4578:32:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1497,
										"nodeType": "StructuredDocumentation",
										"src": "3963:205:9",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4182:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4201:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4193:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1498,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4215:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4207:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1500,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4226:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4218:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1502,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:37:9"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4253:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4262:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1400",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1507,
														"name": "RecoverError",
														"nameLocations": [
															"4262:12:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1400,
														"src": "4262:12:9"
													},
													"referencedDeclaration": 1400,
													"src": "4262:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1400",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4276:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1510,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4276:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:32:9"
									},
									"scope": 1740,
									"src": "4173:454:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "4840:164:9",
										"statements": [
											{
												"assignments": [
													1559,
													1562,
													1564
												],
												"declarations": [
													{
														"constant": false,
														"id": 1559,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4859:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1578,
														"src": "4851:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1558,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4851:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1562,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4883:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1578,
														"src": "4870:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1400",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1561,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1560,
																"name": "RecoverError",
																"nameLocations": [
																	"4870:12:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1400,
																"src": "4870:12:9"
															},
															"referencedDeclaration": 1400,
															"src": "4870:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1400",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1564,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4898:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1578,
														"src": "4890:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1563,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4890:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1570,
												"initialValue": {
													"arguments": [
														{
															"id": 1566,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "4921:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1567,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "4927:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1568,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "4930:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1565,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1466,
															1546,
															1654
														],
														"referencedDeclaration": 1546,
														"src": "4910:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1400_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1400_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:83:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1572,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "4955:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1400",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1573,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "4962:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1400",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1571,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "4943:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1400_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4943:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1575,
												"nodeType": "ExpressionStatement",
												"src": "4943:28:9"
											},
											{
												"expression": {
													"id": 1576,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1559,
													"src": "4988:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1557,
												"id": 1577,
												"nodeType": "Return",
												"src": "4981:16:9"
											}
										]
									},
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "4633:116:9",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4763:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4779:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "4771:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1548,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4771:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4793:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "4785:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1550,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4804:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "4796:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1552,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4770:37:9"
									},
									"returnParameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "4831:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4830:9:9"
									},
									"scope": 1740,
									"src": "4754:250:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "5298:1372:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1600,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "6194:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6186:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1598,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6186:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6186:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 1602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6199:66:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6186:79:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1614,
												"nodeType": "IfStatement",
												"src": "6182:164:9",
												"trueBody": {
													"id": 1613,
													"nodeType": "Block",
													"src": "6267:79:9",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6297:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6289:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6289:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6289:10:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1608,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "6301:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1400_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6314:17:9",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1399,
																		"src": "6301:30:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1400",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 1610,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1588,
																		"src": "6333:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1611,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6288:47:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1400_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1597,
															"id": 1612,
															"nodeType": "Return",
															"src": "6281:54:9"
														}
													]
												}
											},
											{
												"assignments": [
													1616
												],
												"declarations": [
													{
														"constant": false,
														"id": 1616,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6448:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1653,
														"src": "6440:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1615,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6440:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1623,
												"initialValue": {
													"arguments": [
														{
															"id": 1618,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "6467:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1619,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "6473:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1620,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "6476:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1621,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "6479:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1617,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6457:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6440:41:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1624,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1616,
														"src": "6495:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6513:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6505:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1625,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6505:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6505:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6495:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1643,
												"nodeType": "IfStatement",
												"src": "6491:113:9",
												"trueBody": {
													"id": 1642,
													"nodeType": "Block",
													"src": "6517:87:9",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1632,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6547:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6539:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1630,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6539:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6539:10:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1634,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "6551:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1400_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6564:16:9",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1397,
																		"src": "6551:29:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1400",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1638,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6590:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6582:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1636,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6582:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6582:10:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1640,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6538:55:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1400_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1597,
															"id": 1641,
															"nodeType": "Return",
															"src": "6531:62:9"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1644,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "6622:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1645,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "6630:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1400_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6643:7:9",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1396,
															"src": "6630:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1400",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6660:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6652:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1647,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6652:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1651,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6621:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1400_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 1597,
												"id": 1652,
												"nodeType": "Return",
												"src": "6614:49:9"
											}
										]
									},
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "5010:125:9",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5149:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5177:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "5169:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1581,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5197:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "5191:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1583,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5191:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5216:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "5208:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1585,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5235:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "5227:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1587,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5159:83:9"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "5266:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5266:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "5275:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1400",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1593,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1592,
														"name": "RecoverError",
														"nameLocations": [
															"5275:12:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1400,
														"src": "5275:12:9"
													},
													"referencedDeclaration": 1400,
													"src": "5275:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1400",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "5289:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1595,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5265:32:9"
									},
									"scope": 1740,
									"src": "5140:1530:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "6897:166:9",
										"statements": [
											{
												"assignments": [
													1669,
													1672,
													1674
												],
												"declarations": [
													{
														"constant": false,
														"id": 1669,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6916:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1689,
														"src": "6908:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1668,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6908:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1672,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6940:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1689,
														"src": "6927:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1400",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1671,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1670,
																"name": "RecoverError",
																"nameLocations": [
																	"6927:12:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1400,
																"src": "6927:12:9"
															},
															"referencedDeclaration": 1400,
															"src": "6927:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1400",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1674,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "6955:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1689,
														"src": "6947:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1673,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6947:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1681,
												"initialValue": {
													"arguments": [
														{
															"id": 1676,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "6978:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1677,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "6984:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1678,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "6987:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1679,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "6990:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1675,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1466,
															1546,
															1654
														],
														"referencedDeclaration": 1654,
														"src": "6967:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1400_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6967:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1400_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:85:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1683,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "7014:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1400",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1684,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1674,
															"src": "7021:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1400",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1682,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "7002:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1400_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7002:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1686,
												"nodeType": "ExpressionStatement",
												"src": "7002:28:9"
											},
											{
												"expression": {
													"id": 1687,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1669,
													"src": "7047:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1667,
												"id": 1688,
												"nodeType": "Return",
												"src": "7040:16:9"
											}
										]
									},
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "6676:122:9",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6812:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6828:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "6820:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1656,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6820:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6840:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "6834:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1658,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6834:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6851:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "6843:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1660,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6862:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "6854:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1662,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6854:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:45:9"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "6888:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6888:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6887:9:9"
									},
									"scope": 1740,
									"src": "6803:260:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "7268:460:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$1400",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1699,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1694,
														"src": "7282:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1400",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1700,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "7291:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$1400_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7304:7:9",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1396,
														"src": "7291:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1400",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7282:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$1400",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1705,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "7378:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1400",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1706,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "7387:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1400_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7400:16:9",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1397,
															"src": "7387:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1400",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7378:38:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$1400",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1713,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1694,
																"src": "7483:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1400",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1714,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "7492:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$1400_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 1715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7505:22:9",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1398,
																"src": "7492:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1400",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7483:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$1400",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1725,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1694,
																	"src": "7617:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1400",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1726,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "7626:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$1400_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 1727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7639:17:9",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1399,
																	"src": "7626:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1400",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7617:39:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1734,
															"nodeType": "IfStatement",
															"src": "7613:109:9",
															"trueBody": {
																"id": 1733,
																"nodeType": "Block",
																"src": "7658:64:9",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1730,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1696,
																					"src": "7702:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1729,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1413,
																				"src": "7679:22:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																					"typeString": "function (bytes32) pure returns (error)"
																				}
																			},
																			"id": 1731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7679:32:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1732,
																		"nodeType": "RevertStatement",
																		"src": "7672:39:9"
																	}
																]
															}
														},
														"id": 1735,
														"nodeType": "IfStatement",
														"src": "7479:243:9",
														"trueBody": {
															"id": 1724,
															"nodeType": "Block",
															"src": "7529:78:9",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1720,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1696,
																						"src": "7586:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 1719,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7578:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1718,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7578:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7578:17:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1717,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1408,
																			"src": "7550:27:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (uint256) pure returns (error)"
																			}
																		},
																		"id": 1722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7550:46:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1723,
																	"nodeType": "RevertStatement",
																	"src": "7543:53:9"
																}
															]
														}
													},
													"id": 1736,
													"nodeType": "IfStatement",
													"src": "7374:348:9",
													"trueBody": {
														"id": 1712,
														"nodeType": "Block",
														"src": "7418:55:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1709,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "7439:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7439:23:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1711,
																"nodeType": "RevertStatement",
																"src": "7432:30:9"
															}
														]
													}
												},
												"id": 1737,
												"nodeType": "IfStatement",
												"src": "7278:444:9",
												"trueBody": {
													"id": 1704,
													"nodeType": "Block",
													"src": "7313:55:9",
													"statements": [
														{
															"functionReturnParameters": 1698,
															"id": 1703,
															"nodeType": "Return",
															"src": "7327:7:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "7069:122:9",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7205:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7230:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "7217:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1400",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1693,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1692,
														"name": "RecoverError",
														"nameLocations": [
															"7217:12:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1400,
														"src": "7217:12:9"
													},
													"referencedDeclaration": 1400,
													"src": "7217:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1400",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7245:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "7237:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1695,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:38:9"
									},
									"returnParameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:9"
									},
									"scope": 1740,
									"src": "7196:532:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1741,
							"src": "344:7386:9",
							"usedErrors": [
								1403,
								1408,
								1413
							],
							"usedEvents": []
						}
					],
					"src": "112:7619:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
					"exportedSymbols": {
						"EIP712": [
							1967
						],
						"IERC5267": [
							24
						],
						"MessageHashUtils": [
							2041
						],
						"ShortString": [
							816
						],
						"ShortStrings": [
							1027
						]
					},
					"id": 1968,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1742,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
							"file": "./MessageHashUtils.sol",
							"id": 1744,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1968,
							"sourceUnit": 2042,
							"src": "139:56:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1743,
										"name": "MessageHashUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2041,
										"src": "147:16:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
							"file": "../ShortStrings.sol",
							"id": 1747,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1968,
							"sourceUnit": 1028,
							"src": "196:62:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1745,
										"name": "ShortStrings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1027,
										"src": "204:12:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1746,
										"name": "ShortString",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 816,
										"src": "218:11:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
							"file": "../../interfaces/IERC5267.sol",
							"id": 1749,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1968,
							"sourceUnit": 25,
							"src": "259:55:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1748,
										"name": "IERC5267",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 24,
										"src": "267:8:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1751,
										"name": "IERC5267",
										"nameLocations": [
											"1988:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 24,
										"src": "1988:8:10"
									},
									"id": 1752,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:8:10"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1750,
								"nodeType": "StructuredDocumentation",
								"src": "316:1643:10",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 1967,
							"linearizedBaseContracts": [
								1967,
								24
							],
							"name": "EIP712",
							"nameLocation": "1978:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1754,
									"libraryName": {
										"id": 1753,
										"name": "ShortStrings",
										"nameLocations": [
											"2009:12:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1027,
										"src": "2009:12:10"
									},
									"nodeType": "UsingForDirective",
									"src": "2003:25:10"
								},
								{
									"constant": true,
									"id": 1759,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "2059:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 1967,
									"src": "2034:140:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1755,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2034:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 1757,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2089:84:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 1756,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2079:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1758,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2079:95:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1761,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "2399:22:10",
									"nodeType": "VariableDeclaration",
									"scope": 1967,
									"src": "2373:48:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1760,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2373:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1763,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "2453:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1967,
									"src": "2427:40:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1762,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2427:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1765,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "2499:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1967,
									"src": "2473:37:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1764,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2473:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1767,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "2543:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1967,
									"src": "2517:37:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1766,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2517:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1769,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "2586:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1967,
									"src": "2560:40:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1768,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2560:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1772,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "2637:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 1967,
									"src": "2607:35:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 1771,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1770,
											"name": "ShortString",
											"nameLocations": [
												"2607:11:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 816,
											"src": "2607:11:10"
										},
										"referencedDeclaration": 816,
										"src": "2607:11:10",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1775,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "2678:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1967,
									"src": "2648:38:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 1774,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1773,
											"name": "ShortString",
											"nameLocations": [
												"2648:11:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 816,
											"src": "2648:11:10"
										},
										"referencedDeclaration": 816,
										"src": "2648:11:10",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1777,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "2707:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 1967,
									"src": "2692:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1776,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2692:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1779,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "2741:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 1967,
									"src": "2726:31:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1778,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2726:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1836,
										"nodeType": "Block",
										"src": "3383:376:10",
										"statements": [
											{
												"expression": {
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1787,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1772,
														"src": "3393:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1790,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1777,
																"src": "3432:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 1788,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "3401:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3406:25:10",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 968,
															"src": "3401:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$816_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3401:45:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
															"typeString": "ShortString"
														}
													},
													"src": "3393:53:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
														"typeString": "ShortString"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "3393:53:10"
											},
											{
												"expression": {
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1794,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "3456:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1797,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "3501:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 1795,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1784,
																"src": "3467:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3475:25:10",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 968,
															"src": "3467:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$816_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 1798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3467:51:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
															"typeString": "ShortString"
														}
													},
													"src": "3456:62:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
														"typeString": "ShortString"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "3456:62:10"
											},
											{
												"expression": {
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1801,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1767,
														"src": "3528:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1805,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1782,
																		"src": "3558:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3552:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1803,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3552:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3552:11:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1802,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3542:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3542:22:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3528:36:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1809,
												"nodeType": "ExpressionStatement",
												"src": "3528:36:10"
											},
											{
												"expression": {
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1810,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "3574:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1814,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1784,
																		"src": "3607:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3601:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1812,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3601:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3601:14:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1811,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3591:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3591:25:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3574:42:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1818,
												"nodeType": "ExpressionStatement",
												"src": "3574:42:10"
											},
											{
												"expression": {
													"id": 1822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1819,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1763,
														"src": "3627:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1820,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3644:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3650:7:10",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "3644:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3627:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1823,
												"nodeType": "ExpressionStatement",
												"src": "3627:30:10"
											},
											{
												"expression": {
													"id": 1827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1824,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "3667:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1825,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "3692:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 1826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3692:23:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3667:48:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1828,
												"nodeType": "ExpressionStatement",
												"src": "3667:48:10"
											},
											{
												"expression": {
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1829,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1765,
														"src": "3725:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1832,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3747:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$1967",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$1967",
																	"typeString": "contract EIP712"
																}
															],
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3739:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1830,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3739:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3739:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3725:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1835,
												"nodeType": "ExpressionStatement",
												"src": "3725:27:10"
											}
										]
									},
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "2764:559:10",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 1837,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3354:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "3340:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1781,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3340:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3374:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "3360:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1783,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3360:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:43:10"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:10"
									},
									"scope": 1967,
									"src": "3328:431:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1862,
										"nodeType": "Block",
										"src": "3907:200:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1845,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3929:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$1967",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$1967",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3921:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1843,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3921:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3921:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1847,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "3938:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3921:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1849,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3953:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3959:7:10",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "3953:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1851,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "3970:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3953:31:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3921:63:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1860,
													"nodeType": "Block",
													"src": "4046:55:10",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1857,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1884,
																	"src": "4067:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4067:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 1842,
															"id": 1859,
															"nodeType": "Return",
															"src": "4060:30:10"
														}
													]
												},
												"id": 1861,
												"nodeType": "IfStatement",
												"src": "3917:184:10",
												"trueBody": {
													"id": 1856,
													"nodeType": "Block",
													"src": "3986:54:10",
													"statements": [
														{
															"expression": {
																"id": 1854,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1761,
																"src": "4007:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 1842,
															"id": 1855,
															"nodeType": "Return",
															"src": "4000:29:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1838,
										"nodeType": "StructuredDocumentation",
										"src": "3765:75:10",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 1863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "3854:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3872:2:10"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "3898:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1840,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3898:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3897:9:10"
									},
									"scope": 1967,
									"src": "3845:262:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1883,
										"nodeType": "Block",
										"src": "4177:115:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1871,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1759,
																	"src": "4215:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1872,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1767,
																	"src": "4226:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1873,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1769,
																	"src": "4239:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1874,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4255:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4261:7:10",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "4255:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1878,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4278:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$1967",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$1967",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 1877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1876,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1869,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4204:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4208:6:10",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4204:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4204:80:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1868,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4194:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:91:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1867,
												"id": 1882,
												"nodeType": "Return",
												"src": "4187:98:10"
											}
										]
									},
									"id": 1884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "4122:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4143:2:10"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4168:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1865,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:9:10"
									},
									"scope": 1967,
									"src": "4113:179:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1899,
										"nodeType": "Block",
										"src": "5003:90:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1894,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1863,
																"src": "5053:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5053:20:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1896,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1887,
															"src": "5075:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1892,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2041,
															"src": "5020:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$2041_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5037:15:10",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2040,
														"src": "5020:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 1897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5020:66:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1891,
												"id": 1898,
												"nodeType": "Return",
												"src": "5013:73:10"
											}
										]
									},
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "4298:614:10",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 1900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "4926:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "4951:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "4943:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1886,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:20:10"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "4994:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1889,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:9:10"
									},
									"scope": 1967,
									"src": "4917:176:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										23
									],
									"body": {
										"id": 1941,
										"nodeType": "Block",
										"src": "5472:229:10",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5503:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1920,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1954,
																"src": "5533:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5533:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1922,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1966,
																"src": "5560:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5560:16:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1924,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5590:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5596:7:10",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5590:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1928,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5625:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$1967",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$1967",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5617:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1926,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5617:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5617:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5652:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5644:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1930,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5644:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5644:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5682:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "5668:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 1934,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5672:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1935,
																	"nodeType": "ArrayTypeName",
																	"src": "5672:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5668:16:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 1939,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5489:205:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 1918,
												"id": 1940,
												"nodeType": "Return",
												"src": "5482:212:10"
											}
										]
									},
									"documentation": {
										"id": 1901,
										"nodeType": "StructuredDocumentation",
										"src": "5099:40:10",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 1942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "5153:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5165:2:10"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "5249:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "5242:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 1903,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "5242:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5283:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "5269:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1905,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5269:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "5315:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "5301:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1907,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5301:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "5344:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "5336:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "5373:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "5365:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5412:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "5404:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1913,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5404:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "5447:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "5430:27:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1915,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5430:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1916,
													"nodeType": "ArrayTypeName",
													"src": "5430:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5228:239:10"
									},
									"scope": 1967,
									"src": "5144:557:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1953,
										"nodeType": "Block",
										"src": "6082:65:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1950,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "6126:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 1948,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "6099:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
																"typeString": "ShortString"
															}
														},
														"id": 1949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6105:20:10",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 995,
														"src": "6099:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$816_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$816_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6099:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1947,
												"id": 1952,
												"nodeType": "Return",
												"src": "6092:48:10"
											}
										]
									},
									"documentation": {
										"id": 1943,
										"nodeType": "StructuredDocumentation",
										"src": "5707:256:10",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 1954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "6030:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6041:2:10"
									},
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "6067:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1945,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6067:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6066:15:10"
									},
									"scope": 1967,
									"src": "6021:126:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1965,
										"nodeType": "Block",
										"src": "6537:71:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1962,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "6584:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 1960,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "6554:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$816",
																"typeString": "ShortString"
															}
														},
														"id": 1961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6563:20:10",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 995,
														"src": "6554:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$816_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$816_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6554:47:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1959,
												"id": 1964,
												"nodeType": "Return",
												"src": "6547:54:10"
											}
										]
									},
									"documentation": {
										"id": 1955,
										"nodeType": "StructuredDocumentation",
										"src": "6153:262:10",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 1966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "6482:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6496:2:10"
									},
									"returnParameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "6522:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1957,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6522:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:15:10"
									},
									"scope": 1967,
									"src": "6473:135:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1968,
							"src": "1960:4650:10",
							"usedErrors": [
								824,
								826
							],
							"usedEvents": [
								4
							]
						}
					],
					"src": "113:6498:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
					"exportedSymbols": {
						"MessageHashUtils": [
							2041
						],
						"Strings": [
							1392
						]
					},
					"id": 2042,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1969,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 1971,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2042,
							"sourceUnit": 1393,
							"src": "149:39:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1970,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1392,
										"src": "157:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1972,
								"nodeType": "StructuredDocumentation",
								"src": "190:330:11",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 2041,
							"linearizedBaseContracts": [
								2041
							],
							"name": "MessageHashUtils",
							"nameLocation": "529:16:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "1314:368:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1376:300:11",
													"nodeType": "YulBlock",
													"src": "1376:300:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1397:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1397:4:11",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "1403:34:11",
																		"nodeType": "YulLiteral",
																		"src": "1403:34:11",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1390:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:11"
																},
																"nativeSrc": "1390:48:11",
																"nodeType": "YulFunctionCall",
																"src": "1390:48:11"
															},
															"nativeSrc": "1390:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "1390:48:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1499:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1499:4:11",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "1505:11:11",
																		"nodeType": "YulIdentifier",
																		"src": "1505:11:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1492:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:11"
																},
																"nativeSrc": "1492:25:11",
																"nodeType": "YulFunctionCall",
																"src": "1492:25:11"
															},
															"nativeSrc": "1492:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "1492:25:11"
														},
														{
															"nativeSrc": "1571:31:11",
															"nodeType": "YulAssignment",
															"src": "1571:31:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1591:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1591:4:11",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1597:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1597:4:11",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1581:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "1581:9:11"
																},
																"nativeSrc": "1581:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1581:21:11"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "1571:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1978,
														"isOffset": false,
														"isSlot": false,
														"src": "1571:6:11",
														"valueSize": 1
													},
													{
														"declaration": 1975,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:11:11",
														"valueSize": 1
													}
												],
												"id": 1980,
												"nodeType": "InlineAssembly",
												"src": "1367:309:11"
											}
										]
									},
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "552:665:11",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "1231:22:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "1262:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "1254:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1974,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:21:11"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "1306:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "1298:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1977,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:16:11"
									},
									"scope": 2041,
									"src": "1222:460:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2007,
										"nodeType": "Block",
										"src": "2234:143:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 1994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2286:32:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1999,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1985,
																						"src": "2343:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 2000,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2351:6:11",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "2343:14:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1997,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1392,
																					"src": "2326:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$1392_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 1998,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2334:8:11",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1205,
																				"src": "2326:16:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 2001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2326:32:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2320:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1995,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2320:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2320:39:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 2003,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1985,
																	"src": "2361:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2273:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1991,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2273:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2279:6:11",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "2273:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2273:96:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1990,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2263:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2263:107:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1989,
												"id": 2006,
												"nodeType": "Return",
												"src": "2244:126:11"
											}
										]
									},
									"documentation": {
										"id": 1983,
										"nodeType": "StructuredDocumentation",
										"src": "1688:455:11",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 2008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "2157:22:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2193:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "2180:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1984,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2180:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:22:11"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "2225:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1987,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:9:11"
									},
									"scope": 2041,
									"src": "2148:229:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2027,
										"nodeType": "Block",
										"src": "2831:80:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 2021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2875:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 2022,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2011,
																	"src": "2887:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2023,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2013,
																	"src": "2898:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2019,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2858:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2862:12:11",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2858:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2858:45:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2018,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2848:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2848:56:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2017,
												"id": 2026,
												"nodeType": "Return",
												"src": "2841:63:11"
											}
										]
									},
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "2383:332:11",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 2028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "2729:31:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "2769:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "2761:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2793:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "2780:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2012,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:38:11"
									},
									"returnParameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "2822:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2015,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2822:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2821:9:11"
									},
									"scope": 2041,
									"src": "2720:191:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2039,
										"nodeType": "Block",
										"src": "3462:292:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3524:224:11",
													"nodeType": "YulBlock",
													"src": "3524:224:11",
													"statements": [
														{
															"nativeSrc": "3538:22:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3538:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3555:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3555:4:11",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3549:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3549:5:11"
																},
																"nativeSrc": "3549:11:11",
																"nodeType": "YulFunctionCall",
																"src": "3549:11:11"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "3542:3:11",
																	"nodeType": "YulTypedName",
																	"src": "3542:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3580:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3580:3:11"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "3585:10:11",
																		"nodeType": "YulLiteral",
																		"src": "3585:10:11",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3573:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3573:6:11"
																},
																"nativeSrc": "3573:23:11",
																"nodeType": "YulFunctionCall",
																"src": "3573:23:11"
															},
															"nativeSrc": "3573:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "3573:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3620:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3620:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3625:4:11",
																				"nodeType": "YulLiteral",
																				"src": "3625:4:11",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3616:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3616:3:11"
																		},
																		"nativeSrc": "3616:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3616:14:11"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "3632:15:11",
																		"nodeType": "YulIdentifier",
																		"src": "3632:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3609:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:11"
																},
																"nativeSrc": "3609:39:11",
																"nodeType": "YulFunctionCall",
																"src": "3609:39:11"
															},
															"nativeSrc": "3609:39:11",
															"nodeType": "YulExpressionStatement",
															"src": "3609:39:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3672:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3672:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3677:4:11",
																				"nodeType": "YulLiteral",
																				"src": "3677:4:11",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3668:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:11"
																		},
																		"nativeSrc": "3668:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3668:14:11"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "3684:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "3684:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3661:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3661:6:11"
																},
																"nativeSrc": "3661:34:11",
																"nodeType": "YulFunctionCall",
																"src": "3661:34:11"
															},
															"nativeSrc": "3661:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "3661:34:11"
														},
														{
															"nativeSrc": "3708:30:11",
															"nodeType": "YulAssignment",
															"src": "3708:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3728:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3728:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3733:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3733:4:11",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3718:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "3718:9:11"
																},
																"nativeSrc": "3718:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3718:20:11"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "3708:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3708:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2036,
														"isOffset": false,
														"isSlot": false,
														"src": "3708:6:11",
														"valueSize": 1
													},
													{
														"declaration": 2031,
														"isOffset": false,
														"isSlot": false,
														"src": "3632:15:11",
														"valueSize": 1
													},
													{
														"declaration": 2033,
														"isOffset": false,
														"isSlot": false,
														"src": "3684:10:11",
														"valueSize": 1
													}
												],
												"id": 2038,
												"nodeType": "InlineAssembly",
												"src": "3515:233:11"
											}
										]
									},
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "2917:431:11",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 2040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "3362:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "3386:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "3378:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2030,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "3411:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "3403:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2032,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:45:11"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "3454:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "3446:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2035,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:16:11"
									},
									"scope": 2041,
									"src": "3353:401:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2042,
							"src": "521:3235:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3634:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3095
						]
					},
					"id": 3096,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2043,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2044,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3095,
							"linearizedBaseContracts": [
								3095
							],
							"name": "Math",
							"nameLocation": "211:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:12",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2047,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:12"
									},
									"src": "277:29:12"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2052,
									"members": [
										{
											"id": 2048,
											"name": "Floor",
											"nameLocation": "336:5:12",
											"nodeType": "EnumValue",
											"src": "336:5:12"
										},
										{
											"id": 2049,
											"name": "Ceil",
											"nameLocation": "379:4:12",
											"nodeType": "EnumValue",
											"src": "379:4:12"
										},
										{
											"id": 2050,
											"name": "Trunc",
											"nameLocation": "421:5:12",
											"nodeType": "EnumValue",
											"src": "421:5:12"
										},
										{
											"id": 2051,
											"name": "Expand",
											"nameLocation": "451:6:12",
											"nodeType": "EnumValue",
											"src": "451:6:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:12",
									"nodeType": "EnumDefinition",
									"src": "312:169:12"
								},
								{
									"body": {
										"id": 2083,
										"nodeType": "Block",
										"src": "661:140:12",
										"statements": [
											{
												"id": 2082,
												"nodeType": "UncheckedBlock",
												"src": "671:124:12",
												"statements": [
													{
														"assignments": [
															2065
														],
														"declarations": [
															{
																"constant": false,
																"id": 2065,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2082,
																"src": "695:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2064,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2069,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2066,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2055,
																"src": "707:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2067,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2057,
																"src": "711:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2070,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2065,
																"src": "730:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2071,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2055,
																"src": "734:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2077,
														"nodeType": "IfStatement",
														"src": "726:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2075,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2063,
															"id": 2076,
															"nodeType": "Return",
															"src": "737:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2079,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2065,
																	"src": "782:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2080,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2063,
														"id": 2081,
														"nodeType": "Return",
														"src": "768:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:12"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "646:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2059,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "652:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:12"
									},
									"scope": 3095,
									"src": "585:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2111,
										"nodeType": "Block",
										"src": "984:113:12",
										"statements": [
											{
												"id": 2110,
												"nodeType": "UncheckedBlock",
												"src": "994:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2096,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2089,
																"src": "1022:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2097,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2087,
																"src": "1026:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2103,
														"nodeType": "IfStatement",
														"src": "1018:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2101,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2095,
															"id": 2102,
															"nodeType": "Return",
															"src": "1029:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2105,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2087,
																		"src": "1074:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2106,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2089,
																		"src": "1078:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2095,
														"id": 2109,
														"nodeType": "Return",
														"src": "1060:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2085,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:12",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "924:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "935:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:12"
									},
									"returnParameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "969:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2091,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "975:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:12"
									},
									"scope": 3095,
									"src": "908:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2153,
										"nodeType": "Block",
										"src": "1283:417:12",
										"statements": [
											{
												"id": 2152,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2124,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "1551:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2131,
														"nodeType": "IfStatement",
														"src": "1547:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2123,
															"id": 2130,
															"nodeType": "Return",
															"src": "1559:16:12"
														}
													},
													{
														"assignments": [
															2133
														],
														"declarations": [
															{
																"constant": false,
																"id": 2133,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2152,
																"src": "1589:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2132,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2137,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2134,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "1601:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2135,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2117,
																"src": "1605:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2138,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2133,
																	"src": "1624:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2139,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2115,
																	"src": "1628:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2141,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2117,
																"src": "1633:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2147,
														"nodeType": "IfStatement",
														"src": "1620:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2145,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2123,
															"id": 2146,
															"nodeType": "Return",
															"src": "1636:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2149,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2133,
																	"src": "1681:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2150,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2123,
														"id": 2151,
														"nodeType": "Return",
														"src": "1667:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2113,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2154,
												"src": "1223:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2154,
												"src": "1234:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:12"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2154,
												"src": "1268:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2154,
												"src": "1274:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:12"
									},
									"scope": 3095,
									"src": "1207:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2181,
										"nodeType": "Block",
										"src": "1887:114:12",
										"statements": [
											{
												"id": 2180,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2159,
																"src": "1925:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2173,
														"nodeType": "IfStatement",
														"src": "1921:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2171,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2165,
															"id": 2172,
															"nodeType": "Return",
															"src": "1933:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2175,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2157,
																		"src": "1978:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2176,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2159,
																		"src": "1982:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2165,
														"id": 2179,
														"nodeType": "Return",
														"src": "1964:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2155,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "1827:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "1838:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:12"
									},
									"returnParameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "1872:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "1878:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:12"
									},
									"scope": 3095,
									"src": "1811:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2209,
										"nodeType": "Block",
										"src": "2198:114:12",
										"statements": [
											{
												"id": 2208,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2187,
																"src": "2236:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2201,
														"nodeType": "IfStatement",
														"src": "2232:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2193,
															"id": 2200,
															"nodeType": "Return",
															"src": "2244:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2185,
																		"src": "2289:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2187,
																		"src": "2293:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2193,
														"id": 2207,
														"nodeType": "Return",
														"src": "2275:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2183,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "2138:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "2149:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:12"
									},
									"returnParameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "2183:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "2189:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:12"
									},
									"scope": 3095,
									"src": "2122:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2227,
										"nodeType": "Block",
										"src": "2449:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2220,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "2466:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2221,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2470:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2224,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2215,
														"src": "2478:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:12",
													"trueExpression": {
														"id": 2223,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "2474:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2219,
												"id": 2226,
												"nodeType": "Return",
												"src": "2459:20:12"
											}
										]
									},
									"documentation": {
										"id": 2211,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "2395:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "2406:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:12"
									},
									"returnParameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "2440:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:12"
									},
									"scope": 3095,
									"src": "2382:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2245,
										"nodeType": "Block",
										"src": "2624:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2238,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2231,
															"src": "2641:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2239,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2233,
															"src": "2645:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2242,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2233,
														"src": "2653:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:12",
													"trueExpression": {
														"id": 2241,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2231,
														"src": "2649:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2237,
												"id": 2244,
												"nodeType": "Return",
												"src": "2634:20:12"
											}
										]
									},
									"documentation": {
										"id": 2229,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "2570:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "2581:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:12"
									},
									"returnParameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "2615:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:12"
									},
									"scope": 3095,
									"src": "2557:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2268,
										"nodeType": "Block",
										"src": "2845:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2256,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2249,
																	"src": "2900:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2257,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2251,
																	"src": "2904:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2259,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2260,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2249,
																		"src": "2910:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2261,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2251,
																		"src": "2914:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2263,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2255,
												"id": 2267,
												"nodeType": "Return",
												"src": "2892:28:12"
											}
										]
									},
									"documentation": {
										"id": 2247,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "2791:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "2802:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:12"
									},
									"returnParameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "2836:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:12"
									},
									"scope": 3095,
									"src": "2774:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2302,
										"nodeType": "Block",
										"src": "3219:260:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2274,
														"src": "3233:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2287,
												"nodeType": "IfStatement",
												"src": "3229:127:12",
												"trueBody": {
													"id": 2286,
													"nodeType": "Block",
													"src": "3241:115:12",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2282,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2272,
																	"src": "3340:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2283,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2274,
																	"src": "3344:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2278,
															"id": 2285,
															"nodeType": "Return",
															"src": "3333:12:12"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2288,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2272,
															"src": "3444:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2292,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2272,
																			"src": "3458:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2295,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2296,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2274,
																"src": "3467:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 2291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2278,
												"id": 2301,
												"nodeType": "Return",
												"src": "3437:35:12"
											}
										]
									},
									"documentation": {
										"id": 2270,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2303,
												"src": "3165:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2303,
												"src": "3176:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:12"
									},
									"returnParameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2303,
												"src": "3210:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:12"
									},
									"scope": 3095,
									"src": "3148:331:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2428,
										"nodeType": "Block",
										"src": "3901:4018:12",
										"statements": [
											{
												"id": 2427,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:12",
												"statements": [
													{
														"assignments": [
															2316
														],
														"declarations": [
															{
																"constant": false,
																"id": 2316,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2427,
																"src": "4232:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2315,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2320,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2317,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2306,
																"src": "4248:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2318,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "4252:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:12"
													},
													{
														"assignments": [
															2322
														],
														"declarations": [
															{
																"constant": false,
																"id": 2322,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2427,
																"src": "4312:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2321,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2323,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:12"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:12",
															"nodeType": "YulBlock",
															"src": "4392:122:12",
															"statements": [
																{
																	"nativeSrc": "4410:30:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:12"
																				},
																				"nativeSrc": "4433:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:12"
																		},
																		"nativeSrc": "4420:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:12",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:12",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:12"
																				},
																				"nativeSrc": "4470:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:12"
																				},
																				"nativeSrc": "4486:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:12"
																		},
																		"nativeSrc": "4466:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2316,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2316,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2322,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2306,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2308,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:12",
																"valueSize": 1
															}
														],
														"id": 2324,
														"nodeType": "InlineAssembly",
														"src": "4383:131:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2325,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "4595:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2333,
														"nodeType": "IfStatement",
														"src": "4591:368:12",
														"trueBody": {
															"id": 2332,
															"nodeType": "Block",
															"src": "4607:352:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2328,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2316,
																			"src": "4925:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2329,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2310,
																			"src": "4933:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2314,
																	"id": 2331,
																	"nodeType": "Return",
																	"src": "4918:26:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2334,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2310,
																"src": "5065:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2335,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "5080:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2341,
														"nodeType": "IfStatement",
														"src": "5061:88:12",
														"trueBody": {
															"id": 2340,
															"nodeType": "Block",
															"src": "5087:62:12",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2337,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2047,
																			"src": "5112:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2339,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:12"
																}
															]
														}
													},
													{
														"assignments": [
															2343
														],
														"declarations": [
															{
																"constant": false,
																"id": 2343,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 2427,
																"src": "5404:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2342,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2344,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:12"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:12",
															"nodeType": "YulBlock",
															"src": "5444:291:12",
															"statements": [
																{
																	"nativeSrc": "5513:38:12",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:12"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:12"
																		},
																		"nativeSrc": "5526:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:12",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:12",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:12"
																				},
																				"nativeSrc": "5653:20:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:12"
																		},
																		"nativeSrc": "5642:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:12",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:12"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:12"
																		},
																		"nativeSrc": "5700:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2310,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2316,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2316,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2316,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2322,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2322,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2343,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2343,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2343,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2306,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2308,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:12",
																"valueSize": 1
															}
														],
														"id": 2345,
														"nodeType": "InlineAssembly",
														"src": "5435:300:12"
													},
													{
														"assignments": [
															2347
														],
														"declarations": [
															{
																"constant": false,
																"id": 2347,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 2427,
																"src": "5939:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2346,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2354,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2348,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2310,
																"src": "5954:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2350,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2310,
																			"src": "5973:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2352,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:12"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:12",
															"nodeType": "YulBlock",
															"src": "6008:362:12",
															"statements": [
																{
																	"nativeSrc": "6073:37:12",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:12"
																		},
																		"nativeSrc": "6088:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:12",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:12"
																		},
																		"nativeSrc": "6186:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:12",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:12",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:12"
																						},
																						"nativeSrc": "6333:12:12",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:12"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:12"
																				},
																				"nativeSrc": "6329:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:12"
																		},
																		"nativeSrc": "6325:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:12",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2310,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2310,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2316,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2316,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2347,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2347,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2347,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2347,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2347,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:12",
																"valueSize": 1
															}
														],
														"id": 2355,
														"nodeType": "InlineAssembly",
														"src": "5999:371:12"
													},
													{
														"expression": {
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2356,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2316,
																"src": "6436:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2357,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2322,
																	"src": "6445:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2358,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2347,
																	"src": "6453:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2361,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:12"
													},
													{
														"assignments": [
															2363
														],
														"declarations": [
															{
																"constant": false,
																"id": 2363,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 2427,
																"src": "6775:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2362,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2370,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2365,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2310,
																			"src": "6798:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2367,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:12"
													},
													{
														"expression": {
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2371,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2363,
																"src": "7031:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2373,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2310,
																		"src": "7046:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2374,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2363,
																		"src": "7060:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2378,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:12"
													},
													{
														"expression": {
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2379,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2363,
																"src": "7100:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2381,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2310,
																		"src": "7115:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2382,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2363,
																		"src": "7129:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2386,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:12"
													},
													{
														"expression": {
															"id": 2393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2387,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2363,
																"src": "7170:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2389,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2310,
																		"src": "7185:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2390,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2363,
																		"src": "7199:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2394,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:12"
													},
													{
														"expression": {
															"id": 2401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2395,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2363,
																"src": "7240:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2397,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2310,
																		"src": "7255:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2398,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2363,
																		"src": "7269:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2402,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:12"
													},
													{
														"expression": {
															"id": 2409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2403,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2363,
																"src": "7310:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2405,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2310,
																		"src": "7325:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2406,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2363,
																		"src": "7339:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2410,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:12"
													},
													{
														"expression": {
															"id": 2417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2411,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2363,
																"src": "7381:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2413,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2310,
																		"src": "7396:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2414,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2363,
																		"src": "7410:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2418,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:12"
													},
													{
														"expression": {
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2419,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2313,
																"src": "7851:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2420,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2316,
																	"src": "7860:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2421,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2363,
																	"src": "7868:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2424,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:12"
													},
													{
														"expression": {
															"id": 2425,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2313,
															"src": "7896:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2314,
														"id": 2426,
														"nodeType": "Return",
														"src": "7889:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2304,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "3819:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "3830:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "3841:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:12"
									},
									"returnParameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "3885:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:12"
									},
									"scope": 3095,
									"src": "3803:4116:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2471,
										"nodeType": "Block",
										"src": "8161:192:12",
										"statements": [
											{
												"assignments": [
													2445
												],
												"declarations": [
													{
														"constant": false,
														"id": 2445,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2471,
														"src": "8171:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2444,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2451,
												"initialValue": {
													"arguments": [
														{
															"id": 2447,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2432,
															"src": "8195:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2448,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2434,
															"src": "8198:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2449,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2436,
															"src": "8201:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2446,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2429,
															2472
														],
														"referencedDeclaration": 2429,
														"src": "8188:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2453,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2439,
																"src": "8244:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2052",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2052",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2452,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3094,
															"src": "8227:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2052_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2456,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "8264:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2457,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2434,
																	"src": "8267:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2458,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2436,
																	"src": "8270:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2455,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2468,
												"nodeType": "IfStatement",
												"src": "8223:101:12",
												"trueBody": {
													"id": 2467,
													"nodeType": "Block",
													"src": "8288:36:12",
													"statements": [
														{
															"expression": {
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2463,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2445,
																	"src": "8302:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2466,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2469,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2445,
													"src": "8340:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2443,
												"id": 2470,
												"nodeType": "Return",
												"src": "8333:13:12"
											}
										]
									},
									"documentation": {
										"id": 2430,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "8067:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "8078:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "8089:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "8110:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2052",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2438,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2437,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2052,
														"src": "8110:8:12"
													},
													"referencedDeclaration": 2052,
													"src": "8110:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2052",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:12"
									},
									"returnParameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "8152:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:12"
									},
									"scope": 3095,
									"src": "8051:302:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2583,
										"nodeType": "Block",
										"src": "8644:1585:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2480,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2475,
														"src": "8658:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2486,
												"nodeType": "IfStatement",
												"src": "8654:45:12",
												"trueBody": {
													"id": 2485,
													"nodeType": "Block",
													"src": "8666:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2479,
															"id": 2484,
															"nodeType": "Return",
															"src": "8680:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													2488
												],
												"declarations": [
													{
														"constant": false,
														"id": 2488,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2583,
														"src": "9378:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2487,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2497,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2491,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2475,
																			"src": "9406:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2490,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2751,
																			2786
																		],
																		"referencedDeclaration": 2751,
																		"src": "9401:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2495,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:12"
											},
											{
												"id": 2582,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:12",
												"statements": [
													{
														"expression": {
															"id": 2507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2498,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2488,
																"src": "9839:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2499,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2488,
																				"src": "9849:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2502,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2500,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2475,
																					"src": "9858:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2501,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2488,
																					"src": "9862:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2504,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2508,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:12"
													},
													{
														"expression": {
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2509,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2488,
																"src": "9888:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2510,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2488,
																				"src": "9898:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2513,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2511,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2475,
																					"src": "9907:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2512,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2488,
																					"src": "9911:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2515,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2519,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:12"
													},
													{
														"expression": {
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2520,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2488,
																"src": "9937:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2521,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2488,
																				"src": "9947:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2524,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2522,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2475,
																					"src": "9956:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2523,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2488,
																					"src": "9960:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2526,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2530,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:12"
													},
													{
														"expression": {
															"id": 2540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2531,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2488,
																"src": "9986:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2532,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2488,
																				"src": "9996:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2535,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2533,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2475,
																					"src": "10005:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2534,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2488,
																					"src": "10009:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2537,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2541,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:12"
													},
													{
														"expression": {
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2542,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2488,
																"src": "10035:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2543,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2488,
																				"src": "10045:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2546,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2544,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2475,
																					"src": "10054:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2545,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2488,
																					"src": "10058:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2548,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2552,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:12"
													},
													{
														"expression": {
															"id": 2562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2553,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2488,
																"src": "10084:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2554,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2488,
																				"src": "10094:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2555,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2475,
																					"src": "10103:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2556,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2488,
																					"src": "10107:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2559,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2563,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:12"
													},
													{
														"expression": {
															"id": 2573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2564,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2488,
																"src": "10133:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2565,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2488,
																				"src": "10143:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2566,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2475,
																					"src": "10152:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2567,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2488,
																					"src": "10156:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2570,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2574,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2576,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2488,
																	"src": "10193:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2577,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2475,
																		"src": "10201:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2578,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2488,
																		"src": "10205:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2575,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2246,
																"src": "10189:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2479,
														"id": 2581,
														"nodeType": "Return",
														"src": "10182:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2473,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2584,
												"src": "8601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:12"
									},
									"returnParameters": {
										"id": 2479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2584,
												"src": "8635:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:12"
									},
									"scope": 3095,
									"src": "8587:1642:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2618,
										"nodeType": "Block",
										"src": "10405:164:12",
										"statements": [
											{
												"id": 2617,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:12",
												"statements": [
													{
														"assignments": [
															2596
														],
														"declarations": [
															{
																"constant": false,
																"id": 2596,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2617,
																"src": "10439:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2595,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2600,
														"initialValue": {
															"arguments": [
																{
																	"id": 2598,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2587,
																	"src": "10461:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2597,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2584,
																	2619
																],
																"referencedDeclaration": 2584,
																"src": "10456:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2601,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2596,
																"src": "10484:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2603,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2590,
																						"src": "10511:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2052",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2052",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2602,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3094,
																					"src": "10494:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2052_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2607,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2605,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2596,
																						"src": "10524:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2606,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2596,
																						"src": "10533:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2608,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2587,
																					"src": "10542:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2614,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2594,
														"id": 2616,
														"nodeType": "Return",
														"src": "10477:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2585,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "10343:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "10354:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2052",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2589,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2588,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2052,
														"src": "10354:8:12"
													},
													"referencedDeclaration": 2052,
													"src": "10354:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2052",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:12"
									},
									"returnParameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "10396:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:12"
									},
									"scope": 3095,
									"src": "10329:240:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2750,
										"nodeType": "Block",
										"src": "10760:922:12",
										"statements": [
											{
												"assignments": [
													2628
												],
												"declarations": [
													{
														"constant": false,
														"id": 2628,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2750,
														"src": "10770:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2627,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2630,
												"initialValue": {
													"hexValue": "30",
													"id": 2629,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:12"
											},
											{
												"id": 2747,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2631,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2622,
																	"src": "10826:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2645,
														"nodeType": "IfStatement",
														"src": "10822:99:12",
														"trueBody": {
															"id": 2644,
															"nodeType": "Block",
															"src": "10844:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2636,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2622,
																			"src": "10862:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2639,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:12"
																},
																{
																	"expression": {
																		"id": 2642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2640,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2628,
																			"src": "10893:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2643,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2646,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2622,
																	"src": "10938:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2660,
														"nodeType": "IfStatement",
														"src": "10934:96:12",
														"trueBody": {
															"id": 2659,
															"nodeType": "Block",
															"src": "10955:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2651,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2622,
																			"src": "10973:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2654,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:12"
																},
																{
																	"expression": {
																		"id": 2657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2655,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2628,
																			"src": "11003:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2658,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2661,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2622,
																	"src": "11047:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2675,
														"nodeType": "IfStatement",
														"src": "11043:96:12",
														"trueBody": {
															"id": 2674,
															"nodeType": "Block",
															"src": "11064:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2666,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2622,
																			"src": "11082:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2669,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:12"
																},
																{
																	"expression": {
																		"id": 2672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2670,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2628,
																			"src": "11112:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2673,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2676,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2622,
																	"src": "11156:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2690,
														"nodeType": "IfStatement",
														"src": "11152:96:12",
														"trueBody": {
															"id": 2689,
															"nodeType": "Block",
															"src": "11173:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2681,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2622,
																			"src": "11191:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2684,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:12"
																},
																{
																	"expression": {
																		"id": 2687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2685,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2628,
																			"src": "11221:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2688,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2691,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2622,
																	"src": "11265:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2705,
														"nodeType": "IfStatement",
														"src": "11261:93:12",
														"trueBody": {
															"id": 2704,
															"nodeType": "Block",
															"src": "11281:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2696,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2622,
																			"src": "11299:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2699,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:12"
																},
																{
																	"expression": {
																		"id": 2702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2700,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2628,
																			"src": "11328:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2703,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2706,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2622,
																	"src": "11371:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2720,
														"nodeType": "IfStatement",
														"src": "11367:93:12",
														"trueBody": {
															"id": 2719,
															"nodeType": "Block",
															"src": "11387:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2711,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2622,
																			"src": "11405:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2714,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:12"
																},
																{
																	"expression": {
																		"id": 2717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2715,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2628,
																			"src": "11434:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2718,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2721,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2622,
																	"src": "11477:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2735,
														"nodeType": "IfStatement",
														"src": "11473:93:12",
														"trueBody": {
															"id": 2734,
															"nodeType": "Block",
															"src": "11493:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2726,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2622,
																			"src": "11511:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2729,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:12"
																},
																{
																	"expression": {
																		"id": 2732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2730,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2628,
																			"src": "11540:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2733,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2736,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2622,
																	"src": "11583:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2746,
														"nodeType": "IfStatement",
														"src": "11579:64:12",
														"trueBody": {
															"id": 2745,
															"nodeType": "Block",
															"src": "11599:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2741,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2628,
																			"src": "11617:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2744,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2748,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2628,
													"src": "11669:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2626,
												"id": 2749,
												"nodeType": "Return",
												"src": "11662:13:12"
											}
										]
									},
									"documentation": {
										"id": 2620,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:12",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "10713:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:12"
									},
									"returnParameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "10751:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:12"
									},
									"scope": 3095,
									"src": "10699:983:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2785,
										"nodeType": "Block",
										"src": "11915:168:12",
										"statements": [
											{
												"id": 2784,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:12",
												"statements": [
													{
														"assignments": [
															2763
														],
														"declarations": [
															{
																"constant": false,
																"id": 2763,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2784,
																"src": "11949:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2762,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2767,
														"initialValue": {
															"arguments": [
																{
																	"id": 2765,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2754,
																	"src": "11971:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2764,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2751,
																	2786
																],
																"referencedDeclaration": 2751,
																"src": "11966:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2768,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2763,
																"src": "11998:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2770,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2757,
																						"src": "12025:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2052",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2052",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2769,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3094,
																					"src": "12008:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2052_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2774,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2772,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2773,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2763,
																						"src": "12043:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2775,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2754,
																					"src": "12052:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2781,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2761,
														"id": 2783,
														"nodeType": "Return",
														"src": "11991:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2752,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2786,
												"src": "11849:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2786,
												"src": "11864:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2052",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2756,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2755,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2052,
														"src": "11864:8:12"
													},
													"referencedDeclaration": 2052,
													"src": "11864:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2052",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:12"
									},
									"returnParameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2786,
												"src": "11906:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:12"
									},
									"scope": 3095,
									"src": "11835:248:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2914,
										"nodeType": "Block",
										"src": "12276:854:12",
										"statements": [
											{
												"assignments": [
													2795
												],
												"declarations": [
													{
														"constant": false,
														"id": 2795,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2914,
														"src": "12286:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2794,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2797,
												"initialValue": {
													"hexValue": "30",
													"id": 2796,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:12"
											},
											{
												"id": 2911,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2798,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2789,
																"src": "12342:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2814,
														"nodeType": "IfStatement",
														"src": "12338:103:12",
														"trueBody": {
															"id": 2813,
															"nodeType": "Block",
															"src": "12361:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2803,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2789,
																			"src": "12379:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2804,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2805,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2808,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:12"
																},
																{
																	"expression": {
																		"id": 2811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2809,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2795,
																			"src": "12414:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2812,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2815,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2789,
																"src": "12458:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2831,
														"nodeType": "IfStatement",
														"src": "12454:103:12",
														"trueBody": {
															"id": 2830,
															"nodeType": "Block",
															"src": "12477:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2820,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2789,
																			"src": "12495:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2825,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:12"
																},
																{
																	"expression": {
																		"id": 2828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2826,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2795,
																			"src": "12530:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2829,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2832,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2789,
																"src": "12574:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2848,
														"nodeType": "IfStatement",
														"src": "12570:103:12",
														"trueBody": {
															"id": 2847,
															"nodeType": "Block",
															"src": "12593:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2837,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2789,
																			"src": "12611:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2839,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2842,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:12"
																},
																{
																	"expression": {
																		"id": 2845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2843,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2795,
																			"src": "12646:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2846,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2849,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2789,
																"src": "12690:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2865,
														"nodeType": "IfStatement",
														"src": "12686:100:12",
														"trueBody": {
															"id": 2864,
															"nodeType": "Block",
															"src": "12708:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2854,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2789,
																			"src": "12726:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2859,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:12"
																},
																{
																	"expression": {
																		"id": 2862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2860,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2795,
																			"src": "12760:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2863,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2866,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2789,
																"src": "12803:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2882,
														"nodeType": "IfStatement",
														"src": "12799:100:12",
														"trueBody": {
															"id": 2881,
															"nodeType": "Block",
															"src": "12821:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2871,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2789,
																			"src": "12839:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2873,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2876,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:12"
																},
																{
																	"expression": {
																		"id": 2879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2877,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2795,
																			"src": "12873:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2880,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2883,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2789,
																"src": "12916:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2899,
														"nodeType": "IfStatement",
														"src": "12912:100:12",
														"trueBody": {
															"id": 2898,
															"nodeType": "Block",
															"src": "12934:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2888,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2789,
																			"src": "12952:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2891,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2889,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2890,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2893,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:12"
																},
																{
																	"expression": {
																		"id": 2896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2894,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2795,
																			"src": "12986:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2897,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2900,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2789,
																"src": "13029:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2910,
														"nodeType": "IfStatement",
														"src": "13025:66:12",
														"trueBody": {
															"id": 2909,
															"nodeType": "Block",
															"src": "13047:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2905,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2795,
																			"src": "13065:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2908,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2912,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2795,
													"src": "13117:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2793,
												"id": 2913,
												"nodeType": "Return",
												"src": "13110:13:12"
											}
										]
									},
									"documentation": {
										"id": 2787,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:12",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2915,
												"src": "12229:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:12"
									},
									"returnParameters": {
										"id": 2793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2915,
												"src": "12267:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:12"
									},
									"scope": 3095,
									"src": "12214:916:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2949,
										"nodeType": "Block",
										"src": "13365:170:12",
										"statements": [
											{
												"id": 2948,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:12",
												"statements": [
													{
														"assignments": [
															2927
														],
														"declarations": [
															{
																"constant": false,
																"id": 2927,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2948,
																"src": "13399:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2926,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2931,
														"initialValue": {
															"arguments": [
																{
																	"id": 2929,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2918,
																	"src": "13422:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2928,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2915,
																	2950
																],
																"referencedDeclaration": 2915,
																"src": "13416:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2932,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2927,
																"src": "13449:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2934,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2921,
																						"src": "13476:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2052",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2052",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2933,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3094,
																					"src": "13459:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2052_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2940,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2938,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2936,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2937,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2927,
																						"src": "13495:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2939,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2918,
																					"src": "13504:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2945,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2925,
														"id": 2947,
														"nodeType": "Return",
														"src": "13442:76:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2916,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2918,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2950,
												"src": "13299:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2921,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2950,
												"src": "13314:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2052",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2920,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2919,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2052,
														"src": "13314:8:12"
													},
													"referencedDeclaration": 2052,
													"src": "13314:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2052",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:12"
									},
									"returnParameters": {
										"id": 2925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2950,
												"src": "13356:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:12"
									},
									"scope": 3095,
									"src": "13284:251:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3036,
										"nodeType": "Block",
										"src": "13855:600:12",
										"statements": [
											{
												"assignments": [
													2959
												],
												"declarations": [
													{
														"constant": false,
														"id": 2959,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 3036,
														"src": "13865:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2958,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2961,
												"initialValue": {
													"hexValue": "30",
													"id": 2960,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:12"
											},
											{
												"id": 3033,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2962,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2953,
																	"src": "13921:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2976,
														"nodeType": "IfStatement",
														"src": "13917:98:12",
														"trueBody": {
															"id": 2975,
															"nodeType": "Block",
															"src": "13939:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2967,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2953,
																			"src": "13957:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2970,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:12"
																},
																{
																	"expression": {
																		"id": 2973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2971,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2959,
																			"src": "13988:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2974,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2977,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2953,
																	"src": "14032:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2991,
														"nodeType": "IfStatement",
														"src": "14028:95:12",
														"trueBody": {
															"id": 2990,
															"nodeType": "Block",
															"src": "14049:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2982,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2953,
																			"src": "14067:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2985,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:12"
																},
																{
																	"expression": {
																		"id": 2988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2986,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2959,
																			"src": "14097:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2989,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2992,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2953,
																	"src": "14140:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3006,
														"nodeType": "IfStatement",
														"src": "14136:95:12",
														"trueBody": {
															"id": 3005,
															"nodeType": "Block",
															"src": "14157:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2997,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2953,
																			"src": "14175:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3000,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:12"
																},
																{
																	"expression": {
																		"id": 3003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3001,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2959,
																			"src": "14205:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3004,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3007,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2953,
																	"src": "14248:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3021,
														"nodeType": "IfStatement",
														"src": "14244:95:12",
														"trueBody": {
															"id": 3020,
															"nodeType": "Block",
															"src": "14265:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 3014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3012,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2953,
																			"src": "14283:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3015,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:12"
																},
																{
																	"expression": {
																		"id": 3018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3016,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2959,
																			"src": "14313:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3019,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3022,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2953,
																	"src": "14356:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3032,
														"nodeType": "IfStatement",
														"src": "14352:64:12",
														"trueBody": {
															"id": 3031,
															"nodeType": "Block",
															"src": "14372:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 3029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3027,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2959,
																			"src": "14390:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3030,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3034,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2959,
													"src": "14442:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2957,
												"id": 3035,
												"nodeType": "Return",
												"src": "14435:13:12"
											}
										]
									},
									"documentation": {
										"id": 2951,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:12",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3037,
												"src": "13808:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:12"
									},
									"returnParameters": {
										"id": 2957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3037,
												"src": "13846:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:12"
									},
									"scope": 3095,
									"src": "13792:663:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3074,
										"nodeType": "Block",
										"src": "14692:177:12",
										"statements": [
											{
												"id": 3073,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:12",
												"statements": [
													{
														"assignments": [
															3049
														],
														"declarations": [
															{
																"constant": false,
																"id": 3049,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 3073,
																"src": "14726:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3048,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3053,
														"initialValue": {
															"arguments": [
																{
																	"id": 3051,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3040,
																	"src": "14750:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3050,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3037,
																	3075
																],
																"referencedDeclaration": 3037,
																"src": "14743:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3054,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3049,
																"src": "14777:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3056,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3043,
																						"src": "14804:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2052",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2052",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3055,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3094,
																					"src": "14787:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2052_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3057,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3065,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3063,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3058,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3061,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3059,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3049,
																									"src": "14823:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3060,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3062,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3064,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3040,
																					"src": "14838:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3070,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3047,
														"id": 3072,
														"nodeType": "Return",
														"src": "14770:82:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3038,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:12",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3040,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3075,
												"src": "14626:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3043,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3075,
												"src": "14641:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2052",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3042,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3041,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2052,
														"src": "14641:8:12"
													},
													"referencedDeclaration": 2052,
													"src": "14641:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2052",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:12"
									},
									"returnParameters": {
										"id": 3047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3075,
												"src": "14683:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:12"
									},
									"scope": 3095,
									"src": "14610:259:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3093,
										"nodeType": "Block",
										"src": "15067:48:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3089,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3086,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3079,
																	"src": "15090:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2052",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2052",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3084,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3090,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3083,
												"id": 3092,
												"nodeType": "Return",
												"src": "15077:31:12"
											}
										]
									},
									"documentation": {
										"id": 3076,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:12",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3079,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "15019:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2052",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3078,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3077,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2052,
														"src": "15019:8:12"
													},
													"referencedDeclaration": 2052,
													"src": "15019:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2052",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:12"
									},
									"returnParameters": {
										"id": 3083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "15061:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3081,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:12"
									},
									"scope": 3095,
									"src": "14993:122:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3096,
							"src": "203:14914:12",
							"usedErrors": [
								2047
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3200
						]
					},
					"id": 3201,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3097,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3098,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:13",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3200,
							"linearizedBaseContracts": [
								3200
							],
							"name": "SignedMath",
							"nameLocation": "224:10:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3115,
										"nodeType": "Block",
										"src": "376:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3108,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3101,
															"src": "393:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3109,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3103,
															"src": "397:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3112,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3103,
														"src": "405:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:13",
													"trueExpression": {
														"id": 3111,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3101,
														"src": "401:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3107,
												"id": 3114,
												"nodeType": "Return",
												"src": "386:20:13"
											}
										]
									},
									"documentation": {
										"id": 3099,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:13",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3101,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3116,
												"src": "325:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3100,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3103,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3116,
												"src": "335:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3102,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:13"
									},
									"returnParameters": {
										"id": 3107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3116,
												"src": "368:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3105,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:13"
									},
									"scope": 3200,
									"src": "312:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3133,
										"nodeType": "Block",
										"src": "555:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3126,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3119,
															"src": "572:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3127,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3121,
															"src": "576:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3130,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3121,
														"src": "584:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:13",
													"trueExpression": {
														"id": 3129,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3119,
														"src": "580:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3125,
												"id": 3132,
												"nodeType": "Return",
												"src": "565:20:13"
											}
										]
									},
									"documentation": {
										"id": 3117,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:13",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3119,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3134,
												"src": "504:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3118,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3121,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3134,
												"src": "514:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3120,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:13"
									},
									"returnParameters": {
										"id": 3125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3134,
												"src": "547:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3123,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:13"
									},
									"scope": 3200,
									"src": "491:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3177,
										"nodeType": "Block",
										"src": "797:162:13",
										"statements": [
											{
												"assignments": [
													3145
												],
												"declarations": [
													{
														"constant": false,
														"id": 3145,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 3177,
														"src": "859:8:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3144,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3158,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3146,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3137,
																	"src": "871:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3147,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3139,
																	"src": "875:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3149,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3150,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3137,
																				"src": "882:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3151,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3139,
																				"src": "886:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3153,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3156,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3159,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3145,
														"src": "911:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3164,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3145,
																						"src": "931:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3163,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3162,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3166,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3160,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3169,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3137,
																				"src": "945:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3170,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3139,
																				"src": "949:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3172,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3174,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3143,
												"id": 3176,
												"nodeType": "Return",
												"src": "904:48:13"
											}
										]
									},
									"documentation": {
										"id": 3135,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:13",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3137,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3178,
												"src": "746:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3136,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3139,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3178,
												"src": "756:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3138,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:13"
									},
									"returnParameters": {
										"id": 3143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3178,
												"src": "789:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3141,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:13"
									},
									"scope": 3200,
									"src": "729:230:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3198,
										"nodeType": "Block",
										"src": "1103:158:13",
										"statements": [
											{
												"id": 3197,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3188,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3181,
																			"src": "1228:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:13",
																		"subExpression": {
																			"id": 3192,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3181,
																			"src": "1242:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:13",
																	"trueExpression": {
																		"id": 3191,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3181,
																		"src": "1237:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3186,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3185,
														"id": 3196,
														"nodeType": "Return",
														"src": "1213:31:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3179,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:13",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3181,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "1061:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3180,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:13"
									},
									"returnParameters": {
										"id": 3185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "1094:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:13"
									},
									"scope": 3200,
									"src": "1048:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3201,
							"src": "216:1047:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:13"
				},
				"id": 13
			},
			"contract/49_ERC20Permit.sol": {
				"ast": {
					"absolutePath": "contract/49_ERC20Permit.sol",
					"exportedSymbols": {
						"Context": [
							810
						],
						"ECDSA": [
							1740
						],
						"EIP712": [
							1967
						],
						"ERC20": [
							676
						],
						"ERC20Permit": [
							3394
						],
						"IERC20": [
							754
						],
						"IERC20Errors": [
							66
						],
						"IERC20Metadata": [
							780
						],
						"IERC20Permit": [
							3235
						],
						"IERC5267": [
							24
						],
						"MessageHashUtils": [
							2041
						],
						"ShortString": [
							816
						],
						"ShortStrings": [
							1027
						]
					},
					"id": 3395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3202,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 3203,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3395,
							"sourceUnit": 677,
							"src": "61:55:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"id": 3204,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3395,
							"sourceUnit": 1741,
							"src": "118:62:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
							"id": 3205,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3395,
							"sourceUnit": 1968,
							"src": "182:63:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3235,
							"linearizedBaseContracts": [
								3235
							],
							"name": "IERC20Permit",
							"nameLocation": "378:12:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d505accf",
									"id": 3222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "409:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "434:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3222,
												"src": "426:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "459:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3222,
												"src": "451:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "485:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3222,
												"src": "477:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3213,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "510:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 3222,
												"src": "502:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3215,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "536:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3222,
												"src": "530:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3214,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "530:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3217,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "556:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3222,
												"src": "548:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3216,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3219,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "576:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3222,
												"src": "568:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3218,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:169:14"
									},
									"returnParameters": {
										"id": 3221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "593:0:14"
									},
									"scope": 3235,
									"src": "400:194:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 3229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "611:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3224,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "626:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3229,
												"src": "618:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:15:14"
									},
									"returnParameters": {
										"id": 3228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3229,
												"src": "655:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:9:14"
									},
									"scope": 3235,
									"src": "602:62:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 3234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "681:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "697:2:14"
									},
									"returnParameters": {
										"id": 3233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3234,
												"src": "723:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:9:14"
									},
									"scope": 3235,
									"src": "672:60:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3395,
							"src": "368:367:14",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3236,
										"name": "ERC20",
										"nameLocations": [
											"765:5:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "765:5:14"
									},
									"id": 3237,
									"nodeType": "InheritanceSpecifier",
									"src": "765:5:14"
								},
								{
									"baseName": {
										"id": 3238,
										"name": "IERC20Permit",
										"nameLocations": [
											"772:12:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3235,
										"src": "772:12:14"
									},
									"id": 3239,
									"nodeType": "InheritanceSpecifier",
									"src": "772:12:14"
								},
								{
									"baseName": {
										"id": 3240,
										"name": "EIP712",
										"nameLocations": [
											"786:6:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1967,
										"src": "786:6:14"
									},
									"id": 3241,
									"nodeType": "InheritanceSpecifier",
									"src": "786:6:14"
								}
							],
							"canonicalName": "ERC20Permit",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3394,
							"linearizedBaseContracts": [
								3394,
								1967,
								24,
								3235,
								676,
								66,
								780,
								754,
								810
							],
							"name": "ERC20Permit",
							"nameLocation": "750:11:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3245,
									"mutability": "mutable",
									"name": "_nonces",
									"nameLocation": "833:7:14",
									"nodeType": "VariableDeclaration",
									"scope": 3394,
									"src": "800:40:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 3244,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3242,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "808:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "800:24:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3243,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "819:4:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 3250,
									"mutability": "constant",
									"name": "_PERMIT_TYPEHASH",
									"nameLocation": "874:16:14",
									"nodeType": "VariableDeclaration",
									"scope": 3394,
									"src": "849:155:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3246,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "849:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 3248,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "913:84:14",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 3247,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "893:9:14",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3249,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "893:111:14",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3265,
										"nodeType": "Block",
										"src": "1105:2:14",
										"statements": []
									},
									"id": 3266,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3257,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3252,
													"src": "1074:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 3258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1080:3:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 3259,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3256,
												"name": "EIP712",
												"nameLocations": [
													"1067:6:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1967,
												"src": "1067:6:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1067:17:14"
										},
										{
											"arguments": [
												{
													"id": 3261,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3252,
													"src": "1091:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 3262,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3254,
													"src": "1097:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 3263,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3260,
												"name": "ERC20",
												"nameLocations": [
													"1085:5:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 676,
												"src": "1085:5:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1085:19:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3252,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1039:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3266,
												"src": "1025:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3251,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1025:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3254,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1059:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3266,
												"src": "1045:20:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3253,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1045:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1024:42:14"
									},
									"returnParameters": {
										"id": 3264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1105:0:14"
									},
									"scope": 3394,
									"src": "1013:94:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3222
									],
									"body": {
										"id": 3337,
										"nodeType": "Block",
										"src": "1327:1451:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3285,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1346:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1352:9:14",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1346:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 3287,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3274,
																"src": "1365:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1346:27:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332305065726d69743a206578706972656420646561646c696e65",
															"id": 3289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1375:31:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd",
																"typeString": "literal_string \"ERC20Permit: expired deadline\""
															},
															"value": "ERC20Permit: expired deadline"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd",
																"typeString": "literal_string \"ERC20Permit: expired deadline\""
															}
														],
														"id": 3284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1338:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1338:69:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3291,
												"nodeType": "ExpressionStatement",
												"src": "1338:69:14"
											},
											{
												"assignments": [
													3293
												],
												"declarations": [
													{
														"constant": false,
														"id": 3293,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "1428:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 3337,
														"src": "1420:18:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3292,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1420:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3307,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3297,
																	"name": "_PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3250,
																	"src": "1494:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3298,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3268,
																	"src": "1605:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3299,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3270,
																	"src": "1631:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3300,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3272,
																	"src": "1658:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3302,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3268,
																			"src": "1693:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3301,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3381,
																		"src": "1683:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 3303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1683:16:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3304,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3274,
																	"src": "1719:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3295,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1465:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1469:6:14",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "1465:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1465:277:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3294,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1441:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:312:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1420:333:14"
											},
											{
												"assignments": [
													3309
												],
												"declarations": [
													{
														"constant": false,
														"id": 3309,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "2451:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 3337,
														"src": "2443:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3308,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2443:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3313,
												"initialValue": {
													"arguments": [
														{
															"id": 3311,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3293,
															"src": "2475:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3310,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "2458:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 3312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2458:28:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2443:43:14"
											},
											{
												"assignments": [
													3315
												],
												"declarations": [
													{
														"constant": false,
														"id": 3315,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "2562:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3337,
														"src": "2554:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2554:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3323,
												"initialValue": {
													"arguments": [
														{
															"id": 3318,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3309,
															"src": "2585:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3319,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3276,
															"src": "2591:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 3320,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3278,
															"src": "2594:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3321,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3280,
															"src": "2597:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3316,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "2571:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$1740_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 3317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2577:7:14",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1690,
														"src": "2571:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 3322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2571:28:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2554:45:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3325,
																"name": "signer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3315,
																"src": "2675:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3326,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3268,
																"src": "2685:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2675:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332305065726d69743a20696e76616c6964207369676e6174757265",
															"id": 3328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2693:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124",
																"typeString": "literal_string \"ERC20Permit: invalid signature\""
															},
															"value": "ERC20Permit: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124",
																"typeString": "literal_string \"ERC20Permit: invalid signature\""
															}
														],
														"id": 3324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2667:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2667:59:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3330,
												"nodeType": "ExpressionStatement",
												"src": "2667:59:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3332,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3268,
															"src": "2748:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3333,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3270,
															"src": "2755:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3334,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3272,
															"src": "2764:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3331,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															567,
															627
														],
														"referencedDeclaration": 567,
														"src": "2739:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:31:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3336,
												"nodeType": "ExpressionStatement",
												"src": "2739:31:14"
											}
										]
									},
									"functionSelector": "d505accf",
									"id": 3338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1124:6:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3282,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1318:8:14"
									},
									"parameters": {
										"id": 3281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3268,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1149:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3338,
												"src": "1141:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1174:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3338,
												"src": "1166:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1200:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3338,
												"src": "1192:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1192:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3274,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1224:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 3338,
												"src": "1216:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3276,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1249:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3338,
												"src": "1243:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3275,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1243:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3278,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1270:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3338,
												"src": "1262:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3277,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3280,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1291:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3338,
												"src": "1283:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3279,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:172:14"
									},
									"returnParameters": {
										"id": 3283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1327:0:14"
									},
									"scope": 3394,
									"src": "1115:1663:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3229
									],
									"body": {
										"id": 3350,
										"nodeType": "Block",
										"src": "2864:40:14",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3346,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3245,
														"src": "2882:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3348,
													"indexExpression": {
														"id": 3347,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3340,
														"src": "2890:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2882:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3345,
												"id": 3349,
												"nodeType": "Return",
												"src": "2875:21:14"
											}
										]
									},
									"functionSelector": "7ecebe00",
									"id": 3351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "2795:6:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3342,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2837:8:14"
									},
									"parameters": {
										"id": 3341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3340,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2810:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3351,
												"src": "2802:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2801:15:14"
									},
									"returnParameters": {
										"id": 3345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3351,
												"src": "2855:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:14"
									},
									"scope": 3394,
									"src": "2786:118:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3234
									],
									"body": {
										"id": 3360,
										"nodeType": "Block",
										"src": "2983:46:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3357,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1863,
														"src": "3001:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 3358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3001:20:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3356,
												"id": 3359,
												"nodeType": "Return",
												"src": "2994:27:14"
											}
										]
									},
									"functionSelector": "3644e515",
									"id": 3361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2923:16:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3353,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2956:8:14"
									},
									"parameters": {
										"id": 3352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2939:2:14"
									},
									"returnParameters": {
										"id": 3356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3361,
												"src": "2974:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3354,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2974:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2973:9:14"
									},
									"scope": 3394,
									"src": "2914:115:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3380,
										"nodeType": "Block",
										"src": "3116:73:14",
										"statements": [
											{
												"expression": {
													"id": 3372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3368,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3366,
														"src": "3127:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 3369,
															"name": "_nonces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3245,
															"src": "3137:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3371,
														"indexExpression": {
															"id": 3370,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3363,
															"src": "3145:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3137:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3127:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3373,
												"nodeType": "ExpressionStatement",
												"src": "3127:24:14"
											},
											{
												"expression": {
													"id": 3378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3374,
															"name": "_nonces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3245,
															"src": "3162:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3376,
														"indexExpression": {
															"id": 3375,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3363,
															"src": "3170:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3162:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 3377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3180:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3162:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3379,
												"nodeType": "ExpressionStatement",
												"src": "3162:19:14"
											}
										]
									},
									"id": 3381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nameLocation": "3048:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3363,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3066:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3381,
												"src": "3058:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3058:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:15:14"
									},
									"returnParameters": {
										"id": 3367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3366,
												"mutability": "mutable",
												"name": "current",
												"nameLocation": "3107:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3381,
												"src": "3099:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3099:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3098:17:14"
									},
									"scope": 3394,
									"src": "3039:150:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3392,
										"nodeType": "Block",
										"src": "3233:44:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3387,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3250:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3254:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3250:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3389,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3383,
															"src": "3262:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3386,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "3244:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3244:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3391,
												"nodeType": "ExpressionStatement",
												"src": "3244:25:14"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 3393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "3206:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3383,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3216:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3393,
												"src": "3211:11:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3382,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3211:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:13:14"
									},
									"returnParameters": {
										"id": 3385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3233:0:14"
									},
									"scope": 3394,
									"src": "3197:80:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3395,
							"src": "741:2539:14",
							"usedErrors": [
								36,
								41,
								46,
								55,
								60,
								65,
								824,
								826,
								1403,
								1408,
								1413
							],
							"usedEvents": [
								4,
								688,
								697
							]
						}
					],
					"src": "33:3249:14"
				},
				"id": 14
			}
		}
	}
}